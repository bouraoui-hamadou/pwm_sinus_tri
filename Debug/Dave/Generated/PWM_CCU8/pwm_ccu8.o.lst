   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "pwm_ccu8.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CCU8_EnableClock,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CCU8_EnableClock:
  25              	.LFB153:
  26              	 .file 1 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc/xmc_ccu8.h"
   1:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
   2:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @file xmc_ccu8.h
   3:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @date 2019-07-29
   4:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   5:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @cond
   6:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
   7:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMClib v2.2.0 - XMC Peripheral Driver Library
   8:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
   9:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  10:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * All rights reserved.
  11:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  12:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Boost Software License - Version 1.0 - August 17th, 2003
  13:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  14:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Permission is hereby granted, free of charge, to any person or organization
  15:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * obtaining a copy of the software and accompanying documentation covered by
  16:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this license (the "Software") to use, reproduce, display, distribute,
  17:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * execute, and transmit the Software, and to prepare derivative works of the
  18:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Software, and to permit third-parties to whom the Software is furnished to
  19:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * do so, all subject to the following:
  20:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  21:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The copyright notices in the Software and this entire statement, including
  22:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the above license grant, this restriction and the following disclaimer,
  23:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be included in all copies of the Software, in whole or in part, and
  24:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all derivative works of the Software, unless such copies or derivative
  25:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * works are solely in the form of machine-executable object code generated by
  26:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a source language processor.
  27:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  28:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  29:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  30:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
  31:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
  32:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
  33:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
  34:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DEALINGS IN THE SOFTWARE.
  35:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  36:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * To improve the quality of the software, users are encouraged to share
  37:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * modifications, enhancements or bug fixes with Infineon Technologies AG
  38:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * at XMCSupport@infineon.com.
  39:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *****************************************************************************
  40:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  41:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Change History
  42:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * --------------
  43:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  44:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-02-20:
  45:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Initial <br>
  46:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Documentation updates <br>
  47:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  48:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-06-20:
  49:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  50:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_LoadSelector() API, to select which compare register value has to be 
  51:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       during external load event.
  52:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  53:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-01:
  54:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_CHECK_INTERRUPT macro, fixed the missing item for compare match down for
  55:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  56:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-07-24:
  57:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent() is updated to support XMC14 device. <br>
  58:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  59:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-08-17:
  60:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_PRESCALER_t enum is added to set the prescaler divider. <br>
  61:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t is added for all the devices except XMC45 devices, t
  62:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       shadow transfer has to happen. <br>
  63:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SOURCE_OUT0_t, XMC_CCU8_SOURCE_OUT1_t, XMC_CCU8_SOURCE_OUT2_t, XMC_CCU8_SOURCE_OU
  64:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       to maps one of the ST to OUT0, OUT1, OUT3, OUT4 signals.
  65:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_COMPARE_CONFIG_t structure, selector_out0, selector_out1, selector_out2,
  66:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to support XMC14 devices.
  67:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_EnableShadowTransfer() API is made as inline, to improve the speed. <br>
  68:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_EnableCascadedShadowTransfer(), XMC_CCU8_SLICE_DisableCascadedShadowTransfe
  69:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_SetShadowTransferMode() API are supported for all the devices except XMC45.
  70:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  71:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-09-29:
  72:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - In XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t, two more enum items are added to support exte
  73:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       settings.
  74:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  75:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2015-10-07:
  76:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(), XMC_CCU8_SLICE_SetTimerCompareMatchChannel2
  77:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       added to update the respective compare registers directly.
  78:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_GetEvent() is made as inline.
  79:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_MULTI_IRQ_ID_t is added to support the XMC_CCU8_SLICE_EnableMultipleEvents(
  80:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_SLICE_DisableMultipleEvents() APIs.
  81:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - DOC updates for the newly added APIs.
  82:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  83:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-03-09:
  84:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Optimization of write only registers
  85:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  86:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2016-05-20:
  87:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_StopClearTimer()
  88:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_StopTimer() and XMC_CCU8_SLICE_ClearTimer()
  89:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  90:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-04-27:
  91:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - XMC_CCU8_SLICE_SetPrescaler() changed div_val parameter to type XMC_CCU8_SLICE_PRESCALER_t
  92:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  93:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2017-09-15:
  94:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Fix XMC_CCU8_SLICE_SetShadowTransferMode()
  95:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added parity checking functionality
  96:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
  97:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-03-30:
  98:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_StartPrescaler(), XMC_CCU8_StartParityChecker(), XMC_CCU8_StopPrescaler()
  99:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *       XMC_CCU8_EnableMultipleClocks(), XMC_CCU8_EnableClock(), XMC_CCU8_DisableClock() to avoid 
 100:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Changed XMC_CCU8_SLICE_SetEvent(), XMC_CCU8_SLICE_ClearEvent() to avoid RMW access
 101:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SetSuspendMode(), XMC_CCU8_SLICE_GetPrescaler()
 102:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_SLICE_GetTimerCompareMatchChannel1() and XMC_CCU8_SLICE_GetTimerCompareMatc
 103:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 104:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2019-07-29:
 105:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *     - Added XMC_CCU8_GetSliceStatusBit()
 106:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 107:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @endcond
 108:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 109:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 110:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifndef XMC_CCU8_H
 111:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_H
 112:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 113:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 114:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * HEADER FILES
 115:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 116:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc_common.h"
 117:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 118:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80)
 119:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 120:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC1
 121:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc1_ccu8_map.h"
 122:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 123:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 124:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if UC_FAMILY == XMC4
 125:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #include "xmc4_ccu8_map.h"
 126:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 127:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 128:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 129:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup XMClib XMC Peripheral Library
 130:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 131:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 132:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 133:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 134:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @addtogroup CCU8
 135:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 136:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @brief Capture Compare Unit 8 (CCU8) low level driver for XMC family of microcontrollers<br>
 137:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 138:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The CCU8 peripheral functions play a major role in applications that need complex Pulse Width Mo
 139:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * generation, with complementary high side and low side switches, multi phase control. These funct
 140:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with a very flexible and programmable signal conditioning scheme, make the CCU8 the must have pe
 141:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the art motor control, multi phase and multi level power electronics systems.\n
 142:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Each CCU8 module is comprised of four identical 16 bit Capture/Compare Timer slices, CC8y (where
 143:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * timer slice can work in compare mode or in capture mode.
 144:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 145:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * APIs provided in this file cover the following functional blocks of CCU8:
 146:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -- Timer configuration, Capture configuration, Function/Event configuration, Interrupt configura
 147:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Note:
 148:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 1. SLICE (APIs prefixed with e.g. XMC_CCU8_SLICE_)
 149:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * 2. Module (APIs are not having any prefix e.g. XMC_CCU8_)
 150:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 151:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Timer(Compare mode) configuration:
 152:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_COMPARE_CONFIG_t,
 153:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t and the initialization functions XMC_CCU8_SLICE_CompareInit(),
 154:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 155:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 156:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Start and Stop the timer. (XMC_CCU8_SLICE_StartTimer(), XMC_CCU8_SLICE_StopTimer())
 157:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Update the period, compare, Dither, Prescaler  and Passive values. (XMC_CCU8_SLICE_SetTimerPe
 158:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetTimerCompareMatch(), XMC_CCU8_SLICE_SetPrescaler(), XMC_CCU8_SLICE_SetDithe
 159:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_SetPassiveLevel())
 160:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the dead time.(XMC_CCU8_SLICE_SetDeadTimeValue(), XMC_CCU8_SLICE_SetDeadTimePrescal
 161:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable the slices to support multichannel mode. (XMC_CCU8_SLICE_EnableMultiChannelMode())
 162:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 163:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Capture configuration:
 164:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_CAPTURE_CONFIG_t and
 165:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * function XMC_CCU8_SLICE_CaptureInit().
 166:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 167:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 168:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure the capture functionality. (XMC_CCU8_SLICE_Capture0Config(), XMC_CCU8_SLICE_Capture
 169:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Read the captured values along with the status, which indicate the value is latest or not.
 170:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    (XMC_CCU8_SLICE_GetCaptureRegisterValue())
 171:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 172:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Function/Event configuration:
 173:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the configuration structure XMC_CCU8_SLICE_EVENT_CONFIG_t.
 174:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 175:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It can be used to:
 176:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Enable and Disable the events. (XMC_CCU8_SLICE_EnableEvent(), XMC_CCU8_SLICE_DisableEvent())
 177:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Configure to start and stop the timer on external events.(XMC_CCU8_SLICE_StartConfig(), XMC_C
 178:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Modulation, external load and Gating of the timer output.(XMC_CCU8_SLICE_ModulationConfig(),
 179:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_LoadConfig(), XMC_CCU8_SLICE_GateConfig())
 180:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Control the count direction of the timer based on the external event. (XMC_CCU8_SLICE_Directi
 181:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# Count the external events.(XMC_CCU8_SLICE_CountConfig())
 182:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * -# External Trap. Which can be used as protective feature.(XMC_CCU8_SLICE_EnableTrap(), XMC_CCU8
 183:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_TrapConfig())
 184:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 185:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par Interrupt configuration:
 186:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This section of the LLD provides the function to configure the interrupt node to each event (XMC
 187:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
 188:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @{
 189:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 190:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 191:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 192:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * MACROS
 193:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 194:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_INTERRUPT(interrupt) \
 195:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((interrupt == XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH)           || \
 196:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH)              || \
 197:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1)  || \
 198:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1)|| \
 199:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2)  || \
 200:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2)|| \
 201:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT0)                 || \
 202:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT1)                 || \
 203:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_EVENT2)                 || \
 204:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (interrupt == XMC_CCU8_SLICE_IRQ_ID_TRAP))
 205:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 206:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /* Macro to check if the slice ptr passed is valid */
 207:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #define XMC_CCU8_SLICE_CHECK_COMP_CHANNEL(cmp_channel) \
 208:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     ((cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_1) || \
 209:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****      (cmp_channel == XMC_CCU8_SLICE_COMPARE_CHANNEL_2))
 210:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 211:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 212:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * ENUMS
 213:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 214:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 215:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 216:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Global data structure
 217:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 218:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_GLOBAL_TypeDef XMC_CCU8_MODULE_t;
 219:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 220:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 221:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Typedef for CCU8 Slice data structure
 222:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 223:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef CCU8_CC8_TypeDef XMC_CCU8_SLICE_t;
 224:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 225:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 226:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Return Value of an API
 227:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 228:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_STATUS
 229:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 230:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_OK      = 0U, /**< API fulfils request */
 231:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_ERROR,        /**< API cannot fulfil request */
 232:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_RUNNING,      /**< The timer slice is currently running */
 233:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_STATUS_IDLE          /**< The timer slice is currently idle */
 234:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_STATUS_t;
 235:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 236:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 237:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 module clock
 238:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 239:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_CLOCK
 240:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 241:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_SCU        = 0U, /**< Select the fCCU as the clock */
 242:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_A,      /**< External clock-A */
 243:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_B,      /**< External clock-B */
 244:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_CLOCK_EXTERNAL_C       /**< External clock-C */
 245:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_CLOCK_t;
 246:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 247:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 248:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CCU8 set the shadow transfer type for multichannel mode
 249:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 250:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER
 251:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 252:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE0       = (uint32_t)0x4000000, /**< Shadow transfe
 253:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 254:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE0  = (uint32_t)0x4000400, /**< Shadow transfe
 255:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 256:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE1       = (uint32_t)0x8000000, /**< Shadow transfe
 257:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      only for slice
 258:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE1  = (uint32_t)0x8000800, /**< Shadow transfe
 259:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                      and hardware f
 260:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE2       = (uint32_t)0x10000000, /**< Shadow transf
 261:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 262:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE2  = (uint32_t)0x10001000, /**< Shadow transf
 263:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 264:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_SLICE3       = (uint32_t)0x20000000, /**< Shadow transf
 265:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       only for slic
 266:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_SW_MCSS_SLICE3  = (uint32_t)0x20002000  /**< Shadow transf
 267:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                       and hardware 
 268:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t;
 269:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 270:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 271:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Operational modes of CCU8 slice
 272:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 273:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODE
 274:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 275:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_COMPARE  = 0U, /**< slice(CC8y) operates in Compare Mode */
 276:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODE_CAPTURE        /**< slice(CC8y) operates in Capture Mode */
 277:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODE_t;
 278:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 279:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 280:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Slice Output selection
 281:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 282:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT
 283:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 284:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_0  = 1U, /**< Slice Output-0 */
 285:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_1  = 2U, /**< Slice Output-1 */
 286:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_2  = 4U, /**< Slice Output-2 */
 287:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_3  = 8U  /**< Slice Output-3 */
 288:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_t;
 289:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 290:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 291:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer counting modes for the slice
 292:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 293:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_MODE
 294:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 295:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA  = 0U, /**< Edge Aligned Mode */
 296:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA        /**< Centre Aligned Mode */
 297:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_MODE_t;
 298:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 299:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 300:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer repetition mode for the slice
 301:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 302:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_REPEAT_MODE
 303:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 304:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT = 0U, /**< Repetitive mode: continuous mode of operation 
 305:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE       /**< Single shot mode: Once a Period match/One matc
 306:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      occurs timer goes to idle state */
 307:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t;
 308:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 309:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 310:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting direction for the CCU8 slice
 311:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 312:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_COUNT_DIR
 313:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 314:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP   = 0U, /**< Counting up */
 315:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_COUNT_DIR_DOWN       /**< Counting down */
 316:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_COUNT_DIR_t;
 317:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 318:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 319:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Capture mode register sets
 320:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 321:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_CAP_REG_SET
 322:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 323:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_LOW  = 0U, /**< Capture register-0, Capture register-1 used */
 324:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_CAP_REG_SET_HIGH       /**< Capture register-0, Capture register-1 used */
 325:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAP_REG_SET_t;
 326:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 327:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 328:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prescaler mode
 329:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 330:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER_MODE
 331:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 332:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_NORMAL = 0U, /**< Fixed division of module clock */
 333:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_MODE_FLOAT        /**< Floating divider */
 334:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_MODE_t;
 335:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 336:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 337:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer output passive level
 338:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 339:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL
 340:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 341:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_LOW  = 0U, /**< Passive level = Low */
 342:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_HIGH       /**< Passive level = High */
 343:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t;
 344:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 345:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 346:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare Channel selection
 347:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 348:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_COMPARE_CHANNEL
 349:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 350:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_1  = 0U, /**< Compare Channel-1 */
 351:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_COMPARE_CHANNEL_2        /**< Compare Channel-2 */
 352:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CHANNEL_t;
 353:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 354:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 355:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer clock Divider
 356:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 357:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_PRESCALER
 358:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 359:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1  = 0U, /**< Slice Clock = fccu8 */
 360:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2,       /**< Slice Clock = fccu8/2 */
 361:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4,       /**< Slice Clock = fccu8/4 */
 362:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8,       /**< Slice Clock = fccu8/8 */
 363:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16,      /**< Slice Clock = fccu8/16 */
 364:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32,      /**< Slice Clock = fccu8/32 */
 365:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_64,      /**< Slice Clock = fccu8/64 */
 366:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_128,     /**< Slice Clock = fccu8/128 */
 367:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_256,     /**< Slice Clock = fccu8/256 */
 368:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_512,     /**< Slice Clock = fccu8/512 */
 369:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_1024,    /**< Slice Clock = fccu8/1024 */
 370:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_2048,    /**< Slice Clock = fccu8/2048 */
 371:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_4096,    /**< Slice Clock = fccu8/4096 */
 372:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_8192,    /**< Slice Clock = fccu8/8192 */
 373:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_16384,   /**< Slice Clock = fccu8/16384 */
 374:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_PRESCALER_32768    /**< Slice Clock = fccu8/32768 */
 375:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_PRESCALER_t;
 376:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 377:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 378:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time Generator Clock Divider
 379:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 380:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_DTC_DIV
 381:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 382:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_1  = 0U, /**< DTC clock = Slice Clock */
 383:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_2,       /**< DTC clock = Slice Clock/2 */
 384:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_4,       /**< DTC clock = Slice Clock/4 */
 385:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_DTC_DIV_8        /**< DTC clock = Slice Clock/8 */
 386:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DTC_DIV_t;
 387:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 388:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 389:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 390:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The compare channel output which is routed to the slice output signal(STy).
 391:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 392:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS
 393:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 394:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1        = 0U, /**< Channel-1 status connected to Slice Status */
 395:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_2,             /**< Channel-2 status connected to Slice Status */
 396:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_AND_2, /**< \b Wired \b AND of Channel-1 and Channel-2 status con
 397:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     Slice status */
 398:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if ((UC_SERIES == XMC13) || (UC_SERIES == XMC14)) || defined(DOXYGEN)
 399:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_CHANNEL_1_OR_2         /**< \b Wired \b OR of Channel-1 and Channel-2 statu
 400:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                     status. @note Only available for XMC1300 and XM
 401:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 402:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_t;
 403:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 404:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 405:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Compare channel for which modulation has to be applied
 406:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 407:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_CHANNEL
 408:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 409:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_NONE  = 0U, /**< No modulation */
 410:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1,          /**< Modulation for Compare Channel-1 */
 411:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_2,          /**< Modulation for Compare Channel-2 */
 412:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_CHANNEL_1_AND_2     /**< Modulation for Compare Channel-1 and Compare C
 413:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_CHANNEL_t;
 414:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 415:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 416:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Function list
 417:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 418:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_FUNCTION
 419:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 420:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_START           = 0U, /**< Start function */
 421:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_STOP,                 /**< Stop function */
 422:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT0, /**< Capture Event-0 function, CCycapt0 signal is used fo
 423:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 424:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_CAPTURE_EVENT1, /**< Capture Event-1 function, CCycapt1 signal is used fo
 425:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                      generation */
 426:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_GATING,               /**< Gating function */
 427:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_DIRECTION,            /**< Direction function */
 428:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_LOAD,                 /**< Load function */
 429:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_COUNT,                /**< Counting function */
 430:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_OVERRIDE,             /**< Override function */
 431:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_MODULATION,           /**< Modulation function */
 432:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_FUNCTION_TRAP                  /**< Trap function */
 433:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_FUNCTION_t;
 434:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 435:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 436:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event list
 437:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 438:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT
 439:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 440:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_NONE  = 0U, /**< None */
 441:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_0,          /**< Event-0 */
 442:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_1,          /**< Event-1 */
 443:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_2           /**< Event-2 */
 444:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_t;
 445:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 446:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 447:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Edge sensitivity
 448:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 449:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY
 450:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 451:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_NONE          = 0U, /**< None */
 452:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_RISING_EDGE, /**< Rising Edge of the input signal generates
 453:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  event trigger */
 454:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_FALLING_EDGE, /**< Falling Edge of the input signal generat
 455:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                  trigger */
 456:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_DUAL_EDGE           /**< Both Rising and Falling edges caus
 457:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t;
 458:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 459:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 460:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event trigger criteria  - Level sensitivity
 461:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 462:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY
 463:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 464:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_HIGH = 0U, /**< Level sensitive functions react to 
 465:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_ACTIVE_LOW  = 1U, /**< Level sensitive functions react to 
 466:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* Below enum items can be utilised specific to the functionality */
 467:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_LOW = 0U, /**< Timer counts up, during Low sta
 468:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_COUNT_UP_ON_HIGH = 1U /**< Timer counts up, during High st
 469:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t;
 470:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 471:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 472:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Low pass filter Configuration. The External Event input should be stable for a selected number 
 473:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 474:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_EVENT_FILTER
 475:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 476:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_DISABLED  = 0U, /**< No Low Pass Filtering is applied */
 477:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_3_CYCLES,       /**< Input should be stable for 3 clock cycles */
 478:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_5_CYCLES,       /**< Input should be stable for 5 clock cycles */
 479:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_7_CYCLES        /**< Input should be stable for 7 clock cycles */
 480:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_FILTER_t;
 481:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 482:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 483:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  External Event Input list. This list depicts the possible input connections to the CCU8 slice.
 484:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Interconnects are specific to each device.
 485:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 486:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef uint8_t XMC_CCU8_SLICE_INPUT_t;
 487:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 488:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 489:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 490:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Actions that can be performed upon detection of an external Timer STOP event
 491:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 492:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_END_MODE
 493:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 494:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP       = 0U, /**< Stops the timer, without clearing TIMER regis
 495:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_CLEAR,           /**< Without stopping timer, clears the TIMER regi
 496:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_END_MODE_TIMER_STOP_CLEAR       /**< Stops the timer and clears the TIMER register
 497:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_END_MODE_t;
 498:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 499:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 500:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Actions that can be performed upon detection of an external Timer START event
 501:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 502:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_START_MODE
 503:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 504:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START       = 0U, /**< Start the timer from the current count of 
 505:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_START_MODE_TIMER_START_CLEAR       /**< Clears the TIMER register and start the ti
 506:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_START_MODE_t;
 507:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 508:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 509:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Modulation of timer output signals
 510:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 511:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MODULATION_MODE
 512:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 513:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_ST_OUT  = 0U, /**< Clear ST and OUT signals */
 514:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MODULATION_MODE_CLEAR_OUT           /**< Clear only the OUT signal */
 515:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MODULATION_MODE_t;
 516:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 517:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 518:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Trap exit mode
 519:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 520:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TRAP_EXIT_MODE
 521:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 522:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_AUTOMATIC = 0U, /**< Clear trap state as soon as the trap signal is
 523:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TRAP_EXIT_MODE_SW              /**< Clear only when acknowledged by software */
 524:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TRAP_EXIT_MODE_t;
 525:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 526:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 527:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Timer clear on capture
 528:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 529:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_TIMER_CLEAR_MODE
 530:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 531:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_NEVER    = 0U, /**< Never clear the timer on any capture event */
 532:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_HIGH,      /**< Clear only when timer value has been captured
 533:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_CAP_LOW,       /**< Clear only when timer value has been captured
 534:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_TIMER_CLEAR_MODE_ALWAYS         /**< Always clear the timer upon detection of any 
 535:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t;
 536:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 537:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 538:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi Channel Shadow transfer request configuration options
 539:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 540:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MCMS_ACTION
 541:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 542:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR          = 0U, /**< Transfer Compare and Period Shadow 
 543:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 the actual registers upon MCS xfer 
 544:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP     = 1U, /**< Transfer Compare, Period and Presca
 545:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 register values to the actual regis
 546:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 request */
 547:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MCMS_ACTION_TRANSFER_PR_CR_PCMP_DIT = 3U  /**< Transfer Compare, Period ,Prescaler
 548:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 Compare register values to the actu
 549:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                 MCS xfer request */
 550:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MCMS_ACTION_t;
 551:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 552:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 553:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids
 554:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 555:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_IRQ_ID
 556:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 557:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH            = 0U,  /**< Period match counting up */
 558:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH               = 1U,  /**< One match counting down */
 559:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 2U,  /**< Compare match counting up for channel 1
 560:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 3U,  /**< Compare match counting down for channel
 561:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 4U,  /**< Compare match counting up for channel 2
 562:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 5U,  /**< Compare match counting down for channel
 563:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT0                  = 8U,  /**< Event-0 occurrence */
 564:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT1                  = 9U,  /**< Event-1 occurrence */
 565:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_EVENT2                  = 10U, /**< Event-2 occurrence */
 566:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_IRQ_ID_TRAP                    = 11U  /**< Trap occurrence */
 567:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_IRQ_ID_t;
 568:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 569:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 570:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Available Interrupt Event Ids, which is added to support multi event APIs
 571:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 572:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MULTI_IRQ_ID
 573:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 574:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_PERIOD_MATCH            = 0x1U,   /**< Period match counting up */
 575:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_ONE_MATCH               = 0x2U,   /**< One match counting down */
 576:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_1   = 0x4U,   /**< Compare match counting up for 
 577:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_1 = 0x8U,   /**< Compare match counting down fo
 578:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_UP_CH_2   = 0x10U,  /**< Compare match counting up for 
 579:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_COMPARE_MATCH_DOWN_CH_2 = 0x20U,  /**< Compare match counting down fo
 580:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT0                  = 0x100U, /**< Event-0 occurrence */
 581:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT1                  = 0x200U, /**< Event-1 occurrence */
 582:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MULTI_IRQ_ID_EVENT2                  = 0x400U, /**< Event-2 occurrence */
 583:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MULTI_IRQ_ID_t;
 584:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 585:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 586:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Service Request Lines for CCU8. Event are mapped to these SR lines and these are used to generat
 587:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 588:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SR_ID
 589:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 590:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_0    = 0U, /**< Service Request Line-0 selected  */
 591:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_1,         /**< Service Request Line-1 selected  */
 592:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_2,         /**< Service Request Line-2 selected  */
 593:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SR_ID_3          /**< Service Request Line-3 selected  */
 594:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SR_ID_t;
 595:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 596:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 597:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 598:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer options.
 599:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 600:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SHADOW_TRANSFER
 601:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 602:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_0            = CCU8_GCSS_S0SE_Msk,  /**< Transfer Period, Compare 
 603:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 604:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-0 */
 605:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_0     = CCU8_GCSS_S0DSE_Msk, /**< Transfer Dither compare s
 606:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 607:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_0  = CCU8_GCSS_S0PSE_Msk, /**< Transfer Prescaler shadow
 608:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 609:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_1            = CCU8_GCSS_S1SE_Msk,  /**< Transfer Period, Compare 
 610:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 611:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-1 */
 612:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_1     = CCU8_GCSS_S1DSE_Msk, /**< Transfer Dither compare s
 613:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual registers for S
 614:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_1  = CCU8_GCSS_S1PSE_Msk, /**< Transfer Prescaler shadow
 615:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 616:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_2            = CCU8_GCSS_S2SE_Msk,  /**< Transfer Period, Compare 
 617:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 618:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-2 */
 619:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_2     = CCU8_GCSS_S2DSE_Msk, /**< Transfer Dither compare s
 620:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 621:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_2  = CCU8_GCSS_S2PSE_Msk, /**< Transfer Prescaler shadow
 622:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 623:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_SLICE_3            = CCU8_GCSS_S3SE_Msk,  /**< Transfer Period, Compare 
 624:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           shadow register values to
 625:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           SLICE-3 */
 626:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_DITHER_SLICE_3     = CCU8_GCSS_S3DSE_Msk, /**< Transfer Dither compare s
 627:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           to actual register for SL
 628:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SHADOW_TRANSFER_PRESCALER_SLICE_3  = CCU8_GCSS_S3PSE_Msk  /**< Transfer Prescaler shadow
 629:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                           actual register for SLICE
 630:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SHADOW_TRANSFER_t;
 631:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 632:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 633:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 634:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Slice shadow transfer mode options.
 635:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Not available for XMC4500 series
 636:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 637:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE
 638:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 639:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_IN_PERIOD_MATCH_AND_ONE_MATCH = 0U, /**< Shadow transfer is d
 640:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                One match. */
 641:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_PERIOD_MATCH = 1U,  /**< Shadow transfer is done only
 642:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_ONLY_IN_ONE_MATCH = 2U  /**< Shadow transfer is done only in 
 643:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_SHADOW_TRANSFER_MODE_t;
 644:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 645:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 646:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V3) || defined(DOXYGEN) /* Defined for XMC1400 devices only */
 647:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 648:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy0 signal
 649:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 650:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 651:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT0
 652:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 653:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST1      = (uint32_t)0x0, /**< CCU8yST1 signal path is connected the CCU8x.O
 654:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST1  = (uint32_t)0x1, /**< Inverted CCU8yST1 signal path is connected th
 655:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_ST2      = (uint32_t)0x2, /**< CCU8yST2 signal path is connected the CCU8x.O
 656:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT0_INV_ST2  = (uint32_t)0x3  /**< Inverted CCU8yST2 signal path is connected th
 657:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT0_t;
 658:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 659:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 660:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy1 signal
 661:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 662:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 663:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT1
 664:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 665:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST1      = (uint32_t)0x1, /**< CCU8yST1 signal path is connected the CCU8x.O
 666:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST1  = (uint32_t)0x0, /**< Inverted CCU8yST1 signal path is connected th
 667:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_ST2      = (uint32_t)0x3, /**< CCU8yST2 signal path is connected the CCU8x.O
 668:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT1_INV_ST2  = (uint32_t)0x2  /**< Inverted CCU8yST2 signal path is connected th
 669:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT1_t;
 670:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 671:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 672:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Output sources for OUTy2 signal
 673:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Only available for XMC1400 series
 674:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 675:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT2
 676:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 677:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST2      = (uint32_t)0x0, /**< CCU8yST2 signal path is connected the CCU8x.O
 678:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST2  = (uint32_t)0x1, /**< Inverted CCU8yST2 signal path is connected th
 679:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_ST1      = (uint32_t)0x2, /**< CCU8yST1 signal path is connected the CCU8x.O
 680:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT2_INV_ST1  = (uint32_t)0x3  /**< Inverted CCU8yST1 signal path is connected th
 681:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT2_t;
 682:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 683:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 684:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output sources for OUTy3 signal
 685:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 686:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 687:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SOURCE_OUT3
 688:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 689:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST2      = (uint32_t)0x1, /**< CCU8yST2 signal path is connected the CCU8x.O
 690:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST2  = (uint32_t)0x0, /**< Inverted CCU8yST2 signal path is connected th
 691:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_ST1      = (uint32_t)0x3, /**< CCU8yST1 signal path is connected the CCU8x.O
 692:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SOURCE_OUT3_INV_ST1  = (uint32_t)0x2  /**< Inverted CCU8yST1 signal path is connected th
 693:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SOURCE_OUT3_t;
 694:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 695:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 696:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 697:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 698:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Output selector for CCU8x.OUT0-3
 699:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 700:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3) /* Defined for all devices except XMC1400 */
 701:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 702:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 703:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x20000, /**< CCU8yST1 signal path is connected the C
 704:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x20002, /**< Inverted CCU8yST1 signal path is connec
 705:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x40000, /**< CCU8yST1 signal path is connected the C
 706:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x40004, /**< Inverted CCU8yST1 signal path is connec
 707:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x80000, /**< CCU8yST2 signal path is connected the C
 708:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x80008, /**< Inverted CCU8yST2 signal path is connec
 709:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0x100000,/**< CCU8yST2 signal path is connected the C
 710:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0x100010 /**< Inverted CCU8yST2 signal path is connec
 711:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 712:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 713:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_OUT_PATH
 714:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 715:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST1      = (uint32_t)0x000C0, /**< CCU8yST1 signal path is connected the C
 716:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST1  = (uint32_t)0x000D0, /**< Inverted CCU8yST1 signal path is connec
 717:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_ST2      = (uint32_t)0x000E0, /**< CCU8yST2 signal path is connected the C
 718:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT0_INV_ST2  = (uint32_t)0x000F0, /**< Inverted CCU8yST2 signal path is connec
 719:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST1      = (uint32_t)0x00D00, /**< CCU8yST1 signal path is connected the C
 720:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST1  = (uint32_t)0x00C00, /**< Inverted CCU8yST1 signal path is connec
 721:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_ST2      = (uint32_t)0x00F00, /**< CCU8yST2 signal path is connected the C
 722:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT1_INV_ST2  = (uint32_t)0x00E00, /**< Inverted CCU8yST2 signal path is connec
 723:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST2      = (uint32_t)0x0C000, /**< CCU8yST2 signal path is connected the C
 724:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST2  = (uint32_t)0x0D000, /**< Inverted CCU8yST2 signal path is connec
 725:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_ST1      = (uint32_t)0x0E000, /**< CCU8yST1 signal path is connected the C
 726:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT2_INV_ST1  = (uint32_t)0x0F000, /**< Inverted CCU8yST1 signal path is connec
 727:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST2      = (uint32_t)0xD0000, /**< CCU8yST2 signal path is connected the C
 728:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST2  = (uint32_t)0xC0000, /**< Inverted CCU8yST2 signal path is connec
 729:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_ST1      = (uint32_t)0xF0000, /**< CCU8yST1 signal path is connected the C
 730:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_OUT_PATH_OUT3_INV_ST1  = (uint32_t)0xE0000  /**< Inverted CCU8yST1 signal path is connec
 731:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_OUT_PATH_t;
 732:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 733:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 734:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Immediate write into configuration register
 735:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 736:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 737:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_WRITE_INTO
 738:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 739:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PERIOD_CONFIGURATION = CCU8_CC8_STC_IRPC_Msk,                  /**< Imm
 740:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 741:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 742:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE1_CONFIGURATION = CCU8_CC8_STC_IRCC1_Msk,               /**< Imm
 743:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 744:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 745:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_COMPARE2_CONFIGURATION = CCU8_CC8_STC_IRCC2_Msk,               /**< Imm
 746:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 747:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Con
 748:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_PASSIVE_LEVEL_CONFIGURATION = CCU8_CC8_STC_IRLC_Msk,           /**< Imm
 749:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 750:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 751:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_DITHER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRDC_Msk,            /**< Imm
 752:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 753:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                            Config
 754:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_WRITE_INTO_FLOATING_PRESCALER_VALUE_CONFIGURATION = CCU8_CC8_STC_IRFC_Msk /**< Imm
 755:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Wri
 756:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                 Val
 757:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_WRITE_INTO_t;
 758:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 759:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 760:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 761:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Automatic Shadow Transfer request when writing into shadow register
 762:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  @note Only available for XMC1400 series
 763:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 764:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO
 765:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 766:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PERIOD_SHADOW = CCU8_CC8_STC_ASPC_Msk,        
 767:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 768:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 769:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 770:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE1_SHADOW = CCU8_CC8_STC_ASCC1_Msk,     
 771:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 772:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 773:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 774:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_COMPARE2_SHADOW = CCU8_CC8_STC_ASCC2_Msk,     
 775:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 776:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 777:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 778:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_PASSIVE_LEVEL = CCU8_CC8_STC_ASLC_Msk,        
 779:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 780:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 781:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_DITHER_SHADOW = CCU8_CC8_STC_ASDC_Msk,        
 782:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 783:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 784:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_FLOATING_PRESCALER_SHADOW = CCU8_CC8_STC_ASFC_
 785:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                                                                  
 786:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 787:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                                                                    
 788:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 789:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_AUTOMAIC_SHADOW_TRANSFER_WRITE_INTO_t;
 790:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 791:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 792:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 793:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice mask which can be used for the APIs as input where multi slice support is available
 794:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 795:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_MASK
 796:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 797:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_0  = 1U,  /**< SLICE-0 */
 798:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_1  = 2U,  /**< SLICE-1 */
 799:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_2  = 4U,  /**< SLICE-2 */
 800:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_MASK_SLICE_3  = 8U   /**< SLICE-3 */
 801:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_MASK_t;
 802:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 803:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 804:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal is controlling the delay between the change at the CCU8 outputs and effect
 805:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 806:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DELAY_INPUT
 807:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 808:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTA = 0 << CCU8_GPCHK_PCDS_Pos,
 809:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTB = 1 << CCU8_GPCHK_PCDS_Pos,
 810:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTC = 2 << CCU8_GPCHK_PCDS_Pos,
 811:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_IGBTD = 3 << CCU8_GPCHK_PCDS_Pos
 812:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DELAY_INPUT_t;
 813:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 814:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 815:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 816:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects which signal contains the driver parity information
 817:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 818:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT
 819:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 820:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_0 = 0 << CCU8_GPCHK_PISEL_Pos,
 821:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_1 = 1 << CCU8_GPCHK_PISEL_Pos,
 822:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_2 = 2 << CCU8_GPCHK_PISEL_Pos,
 823:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_SLICE_3 = 3 << CCU8_GPCHK_PISEL_Pos,
 824:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_DRIVER_INPUT_t;
 825:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 826:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 827:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects if we have an odd or even parity
 828:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 829:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_PARITY_CHECKER_TYPE
 830:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 831:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_EVEN = 0 << CCU8_GPCHK_PCTS_Pos,
 832:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_PARITY_CHECKER_TYPE_ODD = 1 << CCU8_GPCHK_PCTS_Pos,
 833:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_PARITY_CHECKER_TYPE_t;
 834:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 835:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 836:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects suspend mode
 837:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 838:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SUSPEND_MODE
 839:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 840:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_IGNORE = 0 << CCU8_GCTRL_SUSCFG_Pos, /**< Suspend request ignored. The modu
 841:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_STOPS_INMEDIATELLY = 1 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops all the running
 842:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_SAFE_STOP = 2 << CCU8_GCTRL_SUSCFG_Pos, /**< Stops the block immediately an
 843:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SUSPEND_MODE_WAIT_ROLL_OVER = 3 << CCU8_GCTRL_SUSCFG_Pos /**< Waits for the roll over of
 844:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SUSPEND_MODE_t;
 845:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 846:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 847:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  CCU8 slice status bit
 848:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 849:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef enum XMC_CCU8_SLICE_STATUS_BIT
 850:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 851:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_PASSIVE = false, /**< Passive */
 852:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_STATUS_BIT_ACTIVE  = true   /**< Active  */
 853:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_STATUS_BIT_t;
 854:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 855:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 856:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
 857:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * DATA STRUCTURES
 858:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
 859:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 860:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 861:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure of an External Event(Event-0/1/2).
 862:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Needed to configure the various aspects of an External Event.
 863:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This structure will not connect the external event with an external function.
 864:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 865:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_EVENT_CONFIG
 866:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 867:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_INPUT_t                   mapped_input; /**< Required input signal for the Event. 
 868:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_EDGE_SENSITIVITY_t  edge;         /**< Select the event edge of the input si
 869:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an edge sensitive 
 870:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_LEVEL_SENSITIVITY_t level;        /**< Select the event level of the input s
 871:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                               This is needed for an level sensitive
 872:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_CCU8_SLICE_EVENT_FILTER_t            duration;     /**< Low Pass filter duration in terms of 
 873:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_EVENT_CONFIG_t;
 874:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 875:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard start*/
 876:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
 877:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma push
 878:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma anon_unions
 879:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
 880:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning 586
 881:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
 882:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 883:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 884:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Dead Time configuration
 885:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 886:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_DEAD_TIME_CONFIG
 887:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 888:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 889:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 890:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 891:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 892:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel1 : 1; /**< Enable dead time for Compare Channel-1 */
 893:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t enable_dead_time_channel2 : 1; /**< Enable dead time for Compare Channel-2 */
 894:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 895:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 896:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-1? */
 897:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_path : 1;          /**< Should dead time be applied to ST output of Comp
 898:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_inv_st_path : 1;      /**< Should dead time be applied to inverse ST output
 899:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Compare Channel-2? */
 900:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t div : 2;                       /**< Dead time prescaler divider value.
 901:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                                    Accepts enum ::XMC_CCU8_SLICE_DTC_DIV_t*/
 902:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 24;
 903:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 904:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dtc;
 905:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 906:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 907:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 908:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 909:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 910:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 911:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                       for compare channel-1. Range: [0x0 to 0xFF]
 912:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel1_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 913:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                        for compare channel-1. Range: [0x0 to 0xFF
 914:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 915:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 916:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc1r;
 917:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 918:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 919:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 920:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 921:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 922:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_rising_edge_counter : 8; /**< Contains the delay value that is applied t
 923:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 924:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t channel2_st_falling_edge_counter : 8; /**< Contains the delay value that is applied 
 925:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                                     for compare channel-2. Range: [0x0 to 0xFF]*/
 926:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 16;
 927:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 928:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t dc2r;
 929:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 930:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_DEAD_TIME_CONFIG_t;
 931:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
 932:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
 933:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to compare 
 934:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
 935:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
 936:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_COMPARE_CONFIG
 937:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 938:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 939:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 940:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 941:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 942:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_mode : 1;         /**< Edge aligned or Centre Aligned.
 943:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_COUNT_MODE_t */
 944:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t monoshot : 1;           /**< Single shot or Continuous mode .
 945:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t */
 946:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t shadow_xfer_clear : 1; /**< Should PR and CR shadow xfer happen when timer is cleare
 947:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 10;
 948:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_timer_period: 1; /**< Can the period of the timer dither? */
 949:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t dither_duty_cycle : 1;  /**< Can the compare match of the timer dither? */
 950:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 951:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;      /**< Normal or floating prescaler mode.
 952:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_MODE_t */
 953:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 8;
 954:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch1_enable : 1;     /**< Multi-Channel mode for compare channel 1 enable? */
 955:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t mcm_ch2_enable : 1;     /**< Multi-Channel mode for compare channel 2 enable? */
 956:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 957:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t slice_status : 2;       /**< Which of the two channels drives the slice status outpu
 958:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_STATUS_t*/
 959:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 1;
 960:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 961:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
 962:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 963:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 964:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 965:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 966:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 967:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out0 : 1; /**< ST and OUT passive levels Configuration for OUT0.
 968:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 969:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out1 : 1; /**< ST and OUT passive levels Configuration for OUT1.
 970:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 971:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out2 : 1; /**< ST and OUT passive levels Configuration for OUT2.
 972:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 973:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t passive_level_out3 : 1; /**< ST and OUT passive levels Configuration for OUT3.
 974:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 	                                          Accepts enum :: XMC_CCU8_SLICE_OUTPUT_PASSIVE_LEVEL_t */
 975:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 28;
 976:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
 977:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t psl;
 978:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
 979:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
 980:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
 981:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
 982:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
 983:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t asymmetric_pwm : 1;     /**< Should the PWM be a function of the 2 compare channels
 984:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             rather than period value? */
 985:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if !defined(CCU8V3)    /* Defined for all devices except XMC1400 */
 986:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out0 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT0? *
 987:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out1 : 1;        /**< Should inverted ST of Channel-1 be connected to OUT1? *
 988:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out2 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT2? *
 989:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t invert_out3 : 1;        /**< Should inverted ST of Channel-2 be connected to OUT3? *
 990:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 27;
 991:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
 992:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
 993:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out0 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 994:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT0_t
 995:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS1 bit-field of CHC register.
 996:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
 997:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
 998:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out1 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
 999:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT1_t
1000:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS2 bit-field of CHC register.
1001:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1002:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1003:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out2 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1004:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT2_t
1005:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS3 bit-field of CHC register.
1006:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1007:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 2;
1008:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t selector_out3 : 2;      /**< Connect ST or inverted ST of Channel-1 or Channel-2 be 
1009:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SOURCE_OUT3_t
1010:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             refer OCS4 bit-field of CHC register.
1011:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 											@note Only available for XMC1400 series */
1012:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 14;
1013:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1014:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1015:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t chc;
1016:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1017:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;      /**< Initial prescaler divider value
1018:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t */
1019:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;            /**< The max value which the prescaler divider can increment
1020:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1021:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t dither_limit : 4;           /**< The value that determines the spreading of dithering
1022:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                             Range : [0 to 15] */
1023:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer if true*/
1024:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_COMPARE_CONFIG_t;
1025:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1026:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1027:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configuration data structure for CCU8 slice. Specifically configures the CCU8 slice to capture 
1028:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  This excludes event and function configuration.
1029:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1030:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** typedef struct XMC_CCU8_SLICE_CAPTURE_CONFIG
1031:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1032:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   union
1033:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   {
1034:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     struct
1035:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     {
1036:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1037:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t fifo_enable : 1;      /**< Should the capture registers be setup as a FIFO?(Extended
1038:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t timer_clear_mode : 2; /**< How should the timer register be cleared upon detection o
1039:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                           Accepts enum ::XMC_CCU8_SLICE_TIMER_CLEAR_MODE_t */
1040:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 4;
1041:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t same_event : 1;       /**< Should the capture event for C1V/C0V and C3V/C2V be same 
1042:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t ignore_full_flag : 1; /**< Should updates to capture registers follow full flag rule
1043:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 3;
1044:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t prescaler_mode: 1;    /**< Normal or floating prescaler Accepts enum :: XMC_CCU8_SLI
1045:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****       uint32_t : 15;
1046:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     };
1047:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t tc;
1048:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   };
1049:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t prescaler_initval : 4;    /**< Prescaler divider value */
1050:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t float_limit : 4;          /**< The max value which the prescaler divider can increment t
1051:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   uint32_t timer_concatenation : 1;    /**< Enables the concatenation of the timer */
1052:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** } XMC_CCU8_SLICE_CAPTURE_CONFIG_t;
1053:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /*Anonymous structure/union guard end*/
1054:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(__CC_ARM)
1055:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma pop
1056:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #elif defined(__TASKING__)
1057:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #pragma warning restore
1058:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1059:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**************************************************************************************************
1060:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * API Prototypes
1061:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  **************************************************************************************************
1062:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #ifdef __cplusplus
1063:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** extern "C" {
1064:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1065:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1066:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidModule(const XMC_CCU8_MODULE_t *const module)
1067:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1068:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1069:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1070:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (module == CCU80);
1071:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1072:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1073:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (module == CCU81);
1074:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1075:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1076:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1077:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1078:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1079:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsValidSlice(const XMC_CCU8_SLICE_t *const slice)
1080:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1081:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   bool tmp = false;
1082:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1083:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = (slice == CCU80_CC80);
1084:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC81)
1085:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC81);
1086:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1087:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC82)
1088:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC82);
1089:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1090:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU80_CC83)
1091:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU80_CC83);
1092:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1093:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81)
1094:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC80);
1095:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC81)
1096:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC81);
1097:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1098:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC82)
1099:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC82);
1100:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1101:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU81_CC83)
1102:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   tmp = tmp || (slice == CCU81_CC83);
1103:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1104:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1105:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1106:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return tmp;
1107:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1108:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1109:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1110:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1111:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mcs_action multi-channel shadow transfer request configuration
1112:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1113:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1114:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1115:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1116:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Initialization of global register GCTRL.\n\n
1117:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  As part of module initialization, behaviour of the module upon detection
1118:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Multi-Channel Mode trigger is configured. Will also invoke the XMC_CCU8_EnableModule().
1119:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The API call would bring up the required CCU8 module and also initialize the module for
1120:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the required multi-channel shadow transfer.
1121:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1122:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1123:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureInit().
1124:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1125:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_Init(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SLICE_MCMS_ACTION_t mcs_action);
1126:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1127:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1128:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1129:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1130:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1131:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1132:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1133:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the CCU8 module and brings it to active state.\n\n
1134:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Also disables the gating of the clock signal (if applicable depending on the device being select
1135:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API before any operations are done on the CCU8 module. Invoked from  XMC_CCU8_Init()
1136:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1137:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1138:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SetModuleClock()<BR>  XMC_CCU8_DisableModule()<BR>  XMC_CCU8_StartPrescaler().
1139:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1140:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_EnableModule(XMC_CCU8_MODULE_t *const module);
1141:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1142:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1143:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1144:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1145:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1146:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1147:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1148:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Brings the CCU8 module to reset state and enables gating of the clock signal(if applicable depen
1149:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * on the device being selected).\n\n
1150:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this API when a CCU8 module needs to be disabled completely.
1151:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any operation on the CCU8 module will have no effect after this API is called.
1152:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1153:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1154:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableModule()<BR> XMC_CCU8_DisableModule().
1155:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1156:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_DisableModule(XMC_CCU8_MODULE_t *const module);
1157:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1158:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1159:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1160:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock Choice of input clock to the module
1161:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1162:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1163:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1164:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1165:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Selects the Module Clock by configuring GCTRL.PCIS bits.\n\n
1166:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  There are 3 potential clock sources. This API helps to select the required clock source.
1167:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Call to this API is valid after the XMC_CCU8_Init().
1168:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1169:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1170:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.<BR>
1171:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1172:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetModuleClock(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_CLOCK_t clock);
1173:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1174:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1175:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1176:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1177:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1178:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1179:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1180:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Starts the prescaler and restores clocks to the timer slices, by setting GIDLC.SPRB bit.<br>\n
1181:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Once the input to the prescaler has been chosen and the prescaler divider of all slices program
1182:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  the prescaler itself may be started. Invoke this  API after XMC_CCU8_Init()
1183:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  (Mandatory to fully initialize the module).
1184:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1185:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1186:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPres
1187:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_StopPrescaler().
1188:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1189:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartPrescaler(XMC_CCU8_MODULE_t *const module)
1190:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1191:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1192:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPRB_Msk;
1193:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1194:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1195:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1196:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1197:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1198:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1199:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1200:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1201:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the parity function.<br>\n
1202:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Invoke this  API after XMC_CCU8_Init()
1203:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1204:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1205:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_Init()<BR>  XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR> XMC_CCU8_StopParity
1206:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1207:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StartParityChecker(XMC_CCU8_MODULE_t *const module)
1208:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1209:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StartParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1210:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) CCU8_GIDLC_SPCH_Msk;
1211:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1212:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1213:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1214:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1215:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1216:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1217:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1218:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1219:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the prescaler and blocks clocks to the timer slices, by setting GIDLS.CPRB bit.\n\n
1220:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Clears the run bit of the prescaler. Ensures that the module clock is not supplied to
1221:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the slices of the module.
1222:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1223:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1224:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8
1225:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1226:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopPrescaler(XMC_CCU8_MODULE_t *const module)
1227:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1228:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopPrescaler:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1229:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPRB_Msk;
1230:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1231:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1232:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1233:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1234:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1235:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1236:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1237:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1238:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the parity function.<br>\n
1239:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1240:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1241:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock()<BR>  XMC_CCU8_StartParityChecker()<BR>
1242:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1243:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_StopParityChecker(XMC_CCU8_MODULE_t *const module)
1244:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1245:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_StopParityChecker:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1246:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = (uint32_t) CCU8_GIDLS_CPCH_Msk;
1247:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1248:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1249:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1250:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1251:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1252:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1253:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1254:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1255:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the prescaler, by reading GSTAT.PRB bit.\n\n
1256:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If clock is being supplied to the slices of the  module then returns as true.
1257:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1258:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1259:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartPrescaler()<BR>  XMC_CCU8_StopPrescaler()<BR> XMC_CCU8_EnableClock()<BR>  XMC_CCU8
1260:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1261:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsPrescalerRunning(XMC_CCU8_MODULE_t *const module)
1262:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1263:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1264:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PRB_Msk) == CCU8_GSTAT_PRB_Msk));
1265:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1266:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1267:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1268:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1269:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1270:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1271:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1272:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1273:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the parity checker.\n\n
1274:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1275:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1276:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_StopParityChecker()<BR> XMC_CCU8_EnableClock()<BR>  
1277:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1278:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_IsParityCheckerRunning(XMC_CCU8_MODULE_t *const module)
1279:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1280:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1281:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((module->GSTAT & (uint32_t) CCU8_GSTAT_PCRB_Msk) == CCU8_GSTAT_PCRB_Msk));
1282:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1283:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1284:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1285:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1286:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param clock_mask Slices whose clocks are to be enabled simultaneously.
1287:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Bit location 0/1/2/3 represents slice-0/1/2/3 respectively.
1288:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1289:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1290:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1291:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1292:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1293:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables clocks of multiple slices at a time, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1294:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLC.CS3I bits.\n\n
1295:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Takes an input clock_mask, which determines the slices that would receive the clock. Bring them 
1296:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the idle state simultaneously.
1297:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1298:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1299:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_DisableClock().
1300:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1301:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableMultipleClocks(XMC_CCU8_MODULE_t *const module, const uint8_t c
1302:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1303:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1304:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid clock mask", (clock_mask < 16U));
1305:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1306:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = (uint32_t) clock_mask;
1307:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1308:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1309:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1310:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1311:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode   Selects suspend mode
1312:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1313:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1314:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1315:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1316:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the entering in suspend mode for all the CCU8 slices.
1317:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1318:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1319:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1320:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1321:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SetSuspendMode(XMC_CCU8_MODULE_t *const module, const XMC_CCU8_SUSPEN
1322:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1323:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableMultipleClocks:Invalid Module Pointer", XMC_CCU8_IsValidModule(module)
1324:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCTRL = (module->GCTRL & (uint32_t)~CCU8_GCTRL_SUSCFG_Msk) | mode;
1325:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1326:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1327:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1328:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1329:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_init Pointer to slice configuration structure
1330:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1331:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1332:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1333:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1334:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to compare mode, by configuring CC8yTC, CC8yCMC, CC8yPSC, CC8yDITH
1335:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yFPCS, CC8yCHC registers.\n\n
1336:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Timer configurations in this routine. Timer is stopped before initi
1337:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable
1338:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow transfer for the required values by calling XMC_CCU8_EnableShadowTransfer() with appr
1339:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1340:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1341:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None.
1342:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1343:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CompareInit(XMC_CCU8_SLICE_t *const slice,
1344:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_COMPARE_CONFIG_t *const compare_init);
1345:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1346:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1347:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1348:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param capture_init Pointer to slice configuration structure
1349:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1350:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1351:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1352:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1353:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Initialization of a CC8 slice to capture mode, by configuring CC8yTC, CC8yCMC, CC8yPSC,CC8yFPCS 
1354:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8 slice is configured with Capture configurations in  this routine. Timer is stopped before in
1355:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_SLICE_StopTimer(). After initialization user has to explicitly enable the sh
1356:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * for the required  values by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
1357:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1358:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1359:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config().
1360:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1361:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CaptureInit(XMC_CCU8_SLICE_t *const slice,
1362:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_CAPTURE_CONFIG_t *const capture_init);
1363:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1364:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1365:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1366:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be Enabled.
1367:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1368:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1369:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1370:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1371:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1372:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Enables the slice timer clock, by configuring GIDLC.CS0I, GIDLC.CS1I, GIDLC.CS2I,
1373:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  GIDLC.CS3I bits according to the selected \a slice_number.\n\n
1374:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  It is possible to enable/disable clock at slice level. This uses the \b slice_number to indicat
1375:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  slice whose clock needs to be enabled. Directly accessed register is GIDLC.
1376:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1377:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1378:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_DisableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR> 
1379:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1380:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_numb
1381:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  27              	 .loc 1 1381 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
  43 0008 0B46     	 mov r3,r1
  44 000a FB70     	 strb r3,[r7,#3]
1382:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1383:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableClock:Invalid Slice Number", (slice_number < 4U));
1384:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1385:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLC = ((uint32_t) 1 << slice_number);
  45              	 .loc 1 1385 0
  46 000c FB78     	 ldrb r3,[r7,#3]
  47 000e 0122     	 movs r2,#1
  48 0010 9A40     	 lsls r2,r2,r3
  49 0012 7B68     	 ldr r3,[r7,#4]
  50 0014 DA60     	 str r2,[r3,#12]
1386:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  51              	 .loc 1 1386 0
  52 0016 0C37     	 adds r7,r7,#12
  53              	.LCFI3:
  54              	 .cfi_def_cfa_offset 4
  55 0018 BD46     	 mov sp,r7
  56              	.LCFI4:
  57              	 .cfi_def_cfa_register 13
  58              	 
  59 001a 5DF8047B 	 ldr r7,[sp],#4
  60              	.LCFI5:
  61              	 .cfi_restore 7
  62              	 .cfi_def_cfa_offset 0
  63 001e 7047     	 bx lr
  64              	 .cfi_endproc
  65              	.LFE153:
  67              	 .section .text.XMC_CCU8_SLICE_EnableTrap,"ax",%progbits
  68              	 .align 2
  69              	 .thumb
  70              	 .thumb_func
  72              	XMC_CCU8_SLICE_EnableTrap:
  73              	.LFB162:
1387:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1388:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1389:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1390:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1391:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1392:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1393:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1394:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1395:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1396:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the slice timer clock, by configuring GIDLS.SS0I, GIDLS.SSS1I, GIDLS.SSS2I,
1397:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GIDLS.SSS3I bits according to the selected \a slice_number .\n\n
1398:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to disable clock at slice level using the module pointer.
1399:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b slice_number is used to disable the clock to a given slice of the module.
1400:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1401:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1402:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableClock()<BR>  XMC_CCU8_EnableMultipleClocks()<BR>  XMC_CCU8_StartPrescaler()<BR>  
1403:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1404:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_DisableClock(XMC_CCU8_MODULE_t *const module, const uint8_t slice_num
1405:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1406:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Module Pointer", XMC_CCU8_IsValidModule(module));
1407:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_DisableClock:Invalid Slice Number", (slice_number < 4U));
1408:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1409:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GIDLS = ((uint32_t) 1 << slice_number);
1410:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1411:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1412:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1413:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1414:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1415:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1416:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output.
1417:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1418:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1419:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1420:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1421:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1422:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1423:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1424:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput()<BR>
1425:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1426:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput(XMC_CCU8_MODULE_t *const module,
1427:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1428:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1429:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Slice Number", (slice_number < 
1430:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1431:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK |= (uint32_t)(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1432:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1433:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1434:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                               ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1435:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1436:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1437:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1438:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1439:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number Slice for which the clock should be disabled.
1440:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x0 to 0x3]
1441:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param output Slice output ::XMC_CCU8_SLICE_OUTPUT_t.
1442:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1443:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1444:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1445:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1446:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables slice outputs to be used to perform the parity check.
1447:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1448:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1449:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>  XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput()<BR>
1450:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1451:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput(XMC_CCU8_MODULE_t *const module
1452:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1453:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerEnableSliceOutput:Invalid Module Pointer", XMC_CCU8_IsVal
1454:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerDisableSliceOutput:Invalid Slice Number", (slice_number <
1455:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1456:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK &= (uint32_t)~(((output & (1 << slice_number)) << CCU8_GPCHK_PCSEL0_Pos) |
1457:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (2 << slice_number)) << CCU8_GPCHK_PCSEL1_Pos) |
1458:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (4 << slice_number)) << CCU8_GPCHK_PCSEL2_Pos) |
1459:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                ((output & (8 << slice_number)) << CCU8_GPCHK_PCSEL3_Pos));
1460:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1461:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1462:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1463:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1464:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal controlling the delay between the change at the CCU8 outputs and effective c
1465:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1466:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1467:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1468:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1469:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal is controlling the delay between the change at the CCU8 outputs and effecti
1470:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1471:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1472:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1473:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1474:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDelayInput(XMC_CCU8_MODULE_t *const module, con
1475:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1476:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1477:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCDS_Msk) | input;
1478:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1479:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1480:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1481:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1482:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input signal contains the driver parity information ::XMC_CCU8_PARITY_CHECKER_DRIVER_INPU
1483:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1484:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1485:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1486:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1487:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects which signal contains the driver parity information.
1488:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal must be selected throughout the input selector mux of each slice. The signal must be 
1489:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1490:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1491:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker(), XMC_CCU8_SLICE_SetInput()<BR>.
1492:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1493:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetDriverInput(XMC_CCU8_MODULE_t *const module, co
1494:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1495:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1496:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PISEL_Msk) | input;
1497:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1498:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1499:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1500:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1501:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param type odd or even parity ::XMC_CCU8_PARITY_CHECKER_TYPE_t.
1502:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1503:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1504:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1505:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1506:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects if we have an odd or even parity.
1507:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1508:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1509:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>.
1510:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1511:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ParityCheckerSetType(XMC_CCU8_MODULE_t *const module, const XMC
1512:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1513:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1514:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GPCHK = (module->GPCHK & (uint32_t)~CCU8_GPCHK_PCTS_Msk) | type;
1515:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1516:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1517:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1518:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1519:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1520:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return status of parity checker. If >0 then an error is dectected
1521:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1522:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1523:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current value of the XOR chain.
1524:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1525:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1526:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_StartParityChecker()<BR>
1527:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1528:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint32_t XMC_CCU8_SLICE_ParityCheckerGetStatus(XMC_CCU8_MODULE_t *const module)
1529:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1530:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ParityCheckerSetDelayInput:Invalid Module Pointer", XMC_CCU8_IsValidMo
1531:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (module->GPCHK & CCU8_GPCHK_PCST_Msk);
1532:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1533:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1534:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1535:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1536:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_path_msk configuration for output path selection.
1537:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        combination of XMC_CCU8_OUT_PATH_t enum items can be used to create a mask.
1538:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1539:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1540:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1541:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1542:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1543:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configure the out the path of the two compare channels with specified ST signal, by configuring 
1544:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  ^ CC8yCHC register.\n\n
1545:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1546:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For the two compare channels it is possible to select either direct ST signal or inverted ST sig
1547:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \b out_path_msk is used to set the required out put path.
1548:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1549:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1550:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * None
1551:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** */
1552:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetOutPath(XMC_CCU8_SLICE_t *const slice, const uint32_t out_path_msk);
1553:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1554:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1555:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1556:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Start Function
1557:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param start_mode Behaviour of slice when the start function is activated
1558:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1559:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1560:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1561:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1562:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Start Function of the slice, by configuring CC8yCMC.ENDS and CC8yTC.ENDM bits.\n
1563:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Start function is mapped with one of the 3 events. An external signal can control when a CC8 ti
1564:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Additionally, the behaviour of the slice upon activation of the start function is configured as
1565:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1566:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1567:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1568:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1569:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StartConfig(XMC_CCU8_SLICE_t *const slice,
1570:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_EVENT_t event,
1571:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                 const XMC_CCU8_SLICE_START_MODE_t start_mode);
1572:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1573:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1574:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1575:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Stop Function
1576:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param end_mode Behaviour of slice when the stop function is activated
1577:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1578:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1579:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1580:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1581:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Stop function for the slice, by configuring CC8yCMC.STRTS and CC8yTC.STRM bits.\n
1582:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stop function is mapped with one of the 3 events. An external signal can control when a CCU8 tim
1583:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Additionally, the behaviour of the slice upon activation of the stop function is configured as w
1584:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1585:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1586:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput()
1587:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1588:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StopConfig(XMC_CCU8_SLICE_t *const slice,
1589:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_EVENT_t event,
1590:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_END_MODE_t end_mode);
1591:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1592:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1593:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1594:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External load Function
1595:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1596:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1597:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1598:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1599:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Configures the Load Function for the slice, by configuring CC8yCMC.LDS bit.\n\n
1600:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Load function is mapped with one of the 3 events. Up on occurrence of the event,\n
1601:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 0,CC8yTIMER register is reloaded with the value from compare channel 1 
1602:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            compare channel 2\n
1603:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  if CC8yTCST.CDIR set to 1,CC8yTIMER register is reloaded with the value from period register\n
1604:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1605:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1606:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1607:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1608:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1609:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1610:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1611:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1612:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1613:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Select which compare channel value has to be loaded to the Timer register during e
1614:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1615:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1616:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1617:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1618:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Up on occurrence of the external load event, if CC8yTCST.CDIR set to 0, CC8yTIMER register can 
1619:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  with the value from compare channel 1 or compare channel 2\n
1620:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 0, compare channel 1 value is loaded to the CC8yTIMER register\n
1621:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  If CC8yTC.TLS is 1, compare channel 2 value is loaded to the CC8yTIMER register\n
1622:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1623:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1624:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1625:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1626:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_LoadSelector(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_COMPARE_CHANNE
1627:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1628:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1629:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1630:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Modulation Function
1631:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mod_mode Desired Modulation mode
1632:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Specify the channel(s) on which the modulation should be applied.
1633:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Option to synchronize modulation with PWM start
1634:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Pass \b true if the modulation needs to be synchronized with PWM signal.
1635:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1636:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1637:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1638:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1639:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Output Modulation Function of the slice, by configuring CC8yCMC.MOS, CC8yTC.EMT a
1640:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.EMS bits.\n\n
1641:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Modulation function is mapped with one of the 3 events. The output signal of the CCU can
1642:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be modulated according to a external input.  Additionally, the behaviour of the slice upon activ
1643:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * of the modulation function is configured as well.
1644:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1645:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1646:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1647:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1648:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ModulationConfig(XMC_CCU8_SLICE_t *const slice,
1649:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_EVENT_t event,
1650:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_MODE_t mod_mode,
1651:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const XMC_CCU8_SLICE_MODULATION_CHANNEL_t channel,
1652:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                      const bool synch_with_pwm
1653:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     );
1654:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1655:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1656:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1657:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Function
1658:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1659:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1660:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1661:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1662:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Function of the slice, by configuring CC8yCMC.CNTS bit.\n\n
1663:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count function is mapped with one of the 3 events. CCU8 slice can take an external
1664:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * signal to act as the counting event. The CCU8 slice would count the
1665:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * edges present on the \b event selected.
1666:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1667:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1668:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1669:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1670:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_CountConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1671:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1672:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1673:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1674:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event  Map an External event to the External Gating Function
1675:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1676:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1677:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1678:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1679:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Gating Function of the slice, by configuring CC8yCMC.GATES bit.\n\n
1680:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gating function is mapped with one of the 3 events.  A CCU8 slice can use an input signal that w
1681:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * operate as counter gating. If the configured Active level is detected the counter will gate all 
1682:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1683:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1684:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1685:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1686:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_GateConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t event);
1687:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1688:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1689:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1690:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-0 Function
1691:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1692:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1693:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1694:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1695:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-0 Function of the slice, by configuring CC8yCMC.CAP0S bit.\n\n
1696:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events.  A CCU8 slice can be configured into captur
1697:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC0V and 
1698:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1699:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1700:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1701:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1702:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture0Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1703:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1704:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1705:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1706:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the Capture-1 Function
1707:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1708:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1709:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1710:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1711:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Capture-1 Function of the slice, by configuring CC8yCMC.CAP1S bit.\n\n
1712:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Capture function is mapped with one of the 3 events. A CCU8 slice can be configured into capture
1713:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode with the selected \b event. In this mode the CCU8 will capture the timer value into CC8yC2V
1714:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1715:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1716:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1717:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1718:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_Capture1Config(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t even
1719:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1720:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1721:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1722:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1723:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool would return true if the extended capture read back mode is enabled<BR>
1724:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1725:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1726:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Checks if Extended capture mode read is enabled for particular slice or not, by reading CC8yTC.E
1727:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In this mode the there is only one associated read address for all the capture registers.
1728:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Individual capture registers can still be accessed in this mode.
1729:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1730:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1731:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_GetCapturedValueFromFifo().
1732:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1733:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsExtendedCapReadEnabled(const XMC_CCU8_SLICE_t *const slice)
1734:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1735:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_IsPrescalerRunning:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1736:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((bool)((slice->TC & (uint32_t) CCU8_CC8_TC_ECM_Msk) == (uint32_t)CCU8_CC8_TC_ECM_Msk));
1737:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1738:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1739:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #if defined(CCU8V1) /* Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices onl
1740:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1741:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
1742:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_number to check whether read value belongs to required slice or not
1743:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1744:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   int32_t   Returns -1 if the FIFO value being retrieved is not from the \b slice_number.
1745:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Returns the value captured in the \b slice_number, if captured value is from the cor
1746:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                     Range: [0x0 to 0xFFFF]
1747:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1748:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1749:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(ECRD register).\n\n
1750:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1751:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1752:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1753:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1754:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1755:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1756:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1757:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1758:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** int32_t XMC_CCU8_GetCapturedValueFromFifo(const XMC_CCU8_MODULE_t *const module, const uint8_t slic
1759:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #else
1760:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1761:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1762:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set The capture register set from which the captured value is to be retrieved
1763:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1764:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t Returns the value captured in the \b slice_number
1765:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Range: [0x0 to 0xFFFF]
1766:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1767:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1768:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Read captured value from FIFO(CC8yECRD0 and CC8yECRD1).\n\n
1769:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This is applicable only in the Capture mode of operation. The signal whose timing characteristic
1770:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be mapped to an event which in turn must be mapped to the capture function. Based on the ca
1771:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * instant timer values are captured into capture registers. Timing characteristics of the input si
1772:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * derived/inferred from the captured values.
1773:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1774:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1775:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsExtendedCapReadEnabled().
1776:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @note Defined for XMC4800, XMC4700, XMC4500, XMC4400, XMC4200, XMC4100 devices only. For other d
1777:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1778:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCapturedValueFromFifo(const XMC_CCU8_SLICE_t *const slice,
1779:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set);
1780:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** #endif
1781:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1782:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1783:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1784:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Map an External event to the External Count Direction Function
1785:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1786:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1787:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1788:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1789:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Count Direction of the slice, by configuring CC8yCMC.UDS bit.\n\n
1790:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Count direction function is mapped with one of the 3 events. A slice can be configured to change
1791:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTIMER count direction depending on an external signal.
1792:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1793:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1794:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1795:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1796:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_DirectionConfig(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_EVENT_t eve
1797:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1798:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1799:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1800:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1801:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1802:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1803:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1804:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the status bit override Function of the slice, by configuring CC8yCMC.OFS bit.\n\n
1805:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Status bit override function is mapped with one of the 3 events. A slice can be configured to ch
1806:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * output of the timer's CC8yST1 signal depending on an external signal.
1807:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1808:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1809:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent().
1810:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1811:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_StatusBitOverrideConfig(XMC_CCU8_SLICE_t *const slice);
1812:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1813:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1814:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1815:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param exit_mode How should a previously logged trap state be exited?
1816:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param synch_with_pwm Should exit of trap state be synchronized with PWM cycle start?
1817:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1818:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1819:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1820:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1821:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1822:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Trap Function of the slice, by configuring CC8yCMC.TS, CC8yTC.TRPSE, and CC8yTC.T
1823:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Trap function is mapped with Event-2. Criteria for exiting the trap state is configured.
1824:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This trap function allows PWM outputs to react on the state of an input pin.
1825:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Thus PWM output can be forced to inactive state upon detection of a trap.
1826:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is also possible to synchronize the trap function with the PWM signal using the \b synch_with
1827:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1828:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1829:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ConfigureEvent()<BR>  XMC_CCU8_SLICE_SetInput().
1830:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1831:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_TrapConfig(XMC_CCU8_SLICE_t *const slice,
1832:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                const XMC_CCU8_SLICE_TRAP_EXIT_MODE_t exit_mode,
1833:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                bool synch_with_pwm);
1834:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1835:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1836:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1837:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev1_config Pointer to event 1 configuration data
1838:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ev2_config Pointer to event 2 configuration data
1839:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1840:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1841:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1842:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1843:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1844:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Map Status bit override function with an Event1 & Event 2 of the slice and configure CC8yINS reg
1845:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and Low Pass filter opti
1846:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by this routine for the events 1 & 2.  Event-1 input would be the trigger to override the value.
1847:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Event-2 input would be the override value.
1848:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1849:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1850:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig().
1851:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1852:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(XMC_CCU8_SLICE_t *const slice,
1853:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev1_config,
1854:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_EVENT_CONFIG_t *const ev2_config);
1855:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1856:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1857:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1858:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1859:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param config Pointer to event configuration data.
1860:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1861:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1862:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1863:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1864:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures an External Event of the slice, by updating CC8yINS register .\n\n
1865:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Details such as the input mapped to the event, event detection criteria and low pass filter
1866:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * options are programmed by this routine. The Event \b config  will configure the input selection,
1867:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the edge selection, the level selection and the Low pass filter for the  event.
1868:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1869:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1870:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1871:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR>  XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateCon
1872:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR> XMC_CCU8_SLICE_Capture1Config()<BR>  XMC_CCU8_SLICE_Directi
1873:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1874:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1875:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_ConfigureEvent(XMC_CCU8_SLICE_t *const slice,
1876:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_t event,
1877:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                    const XMC_CCU8_SLICE_EVENT_CONFIG_t *config);
1878:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1879:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1880:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1881:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event The External Event which needs to be configured.
1882:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param input One of the 16 inputs meant to be mapped to the desired event
1883:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1884:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1885:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1886:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1887:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1888:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Selects an input for an external event, by configuring CC8yINS register.\n\n
1889:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is possible to select one of the possible 16 input signals for a given Event.
1890:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This configures the CC8yINS.EVxIS for the selected event.
1891:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1892:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1893:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartConfig()<BR>  XMC_CCU8_SLICE_StopConfig()<BR>  XMC_CCU8_SLICE_LoadConfig()<
1894:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_ModulationConfig()<BR> XMC_CCU8_SLICE_CountConfig()<BR>  XMC_CCU8_SLICE_GateConf
1895:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_Capture0Config()<BR>  XMC_CCU8_SLICE_Capture1Config()<BR> XMC_CCU8_SLICE_Directi
1896:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StatusBitOverrideConfig()<BR>  XMC_CCU8_SLICE_TrapConfig().
1897:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1898:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetInput(XMC_CCU8_SLICE_t *const slice,
1899:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_EVENT_t event,
1900:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                              const XMC_CCU8_SLICE_INPUT_t input);
1901:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1902:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1903:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1904:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be activated.
1905:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1906:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation
1907:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1908:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1909:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1910:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1911:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1912:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the trap feature, by setting CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TRAP
1913:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n
1914:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature where the PWM output can be forced inactive upon detection of a tr
1915:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can be the output of a sensing element which has just detected an abnormal electrical condition.
1916:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1917:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1918:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_TrapConfig()<BR>  XMC_CCU8_SLICE_DisableTrap()<BR>  XMC_CCU8_SLICE_ConfigureEven
1919:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInput().
1920:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1921:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_ma
1922:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
  74              	 .loc 1 1922 0
  75              	 .cfi_startproc
  76              	 
  77              	 
  78              	 
  79 0000 80B4     	 push {r7}
  80              	.LCFI6:
  81              	 .cfi_def_cfa_offset 4
  82              	 .cfi_offset 7,-4
  83 0002 83B0     	 sub sp,sp,#12
  84              	.LCFI7:
  85              	 .cfi_def_cfa_offset 16
  86 0004 00AF     	 add r7,sp,#0
  87              	.LCFI8:
  88              	 .cfi_def_cfa_register 7
  89 0006 7860     	 str r0,[r7,#4]
  90 0008 3960     	 str r1,[r7]
1923:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1924:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos;
  91              	 .loc 1 1924 0
  92 000a 7B68     	 ldr r3,[r7,#4]
  93 000c 5A69     	 ldr r2,[r3,#20]
  94 000e 3B68     	 ldr r3,[r7]
  95 0010 5B04     	 lsls r3,r3,#17
  96 0012 1A43     	 orrs r2,r2,r3
  97 0014 7B68     	 ldr r3,[r7,#4]
  98 0016 5A61     	 str r2,[r3,#20]
1925:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
  99              	 .loc 1 1925 0
 100 0018 0C37     	 adds r7,r7,#12
 101              	.LCFI9:
 102              	 .cfi_def_cfa_offset 4
 103 001a BD46     	 mov sp,r7
 104              	.LCFI10:
 105              	 .cfi_def_cfa_register 13
 106              	 
 107 001c 5DF8047B 	 ldr r7,[sp],#4
 108              	.LCFI11:
 109              	 .cfi_restore 7
 110              	 .cfi_def_cfa_offset 0
 111 0020 7047     	 bx lr
 112              	 .cfi_endproc
 113              	.LFE162:
 115 0022 00BF     	 .section .text.XMC_CCU8_SLICE_IsTimerRunning,"ax",%progbits
 116              	 .align 2
 117              	 .thumb
 118              	 .thumb_func
 120              	XMC_CCU8_SLICE_IsTimerRunning:
 121              	.LFB164:
1926:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1927:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1928:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1929:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param out_mask  Output signals for which the Trap function needs to be deactivated.
1930:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Use ::XMC_CCU8_SLICE_OUTPUT_t enum items to create a mask of choice,
1931:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   using a bit wise OR operation.
1932:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   Range: [0x1 to 0xF]
1933:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1934:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
1935:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1936:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1937:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the trap feature, by clearing CC8yTC.TRAPE0, CC8yTC.TRAPE1, CC8yTC.TRAPE2 and CC8yTC.TR
1938:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \a out_mask.\n\n.\n\n
1939:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will revert the changes done by XMC_CCU8_SLICE_EnableTrap().
1940:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This Ensures that the TRAP function has no effect on the output of the CCU8 slice.
1941:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1942:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1943:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableTrap().
1944:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1945:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableTrap(XMC_CCU8_SLICE_t *const slice, const uint32_t out_m
1946:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1947:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableTrap:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1948:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1949:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)out_mask << CCU8_CC8_TC_TRAPE0_Pos);
1950:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1951:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1952:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1953:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
1954:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1955:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the Timer is running else it returns \b false.
1956:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1957:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1958:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the timer (Either Running or stopped(idle)), by reading CC8yTCST.TRB bit.
1959:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1960:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1961:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer()<BR>  XMC_CCU8_SLICE_StopTimer().
1962:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1963:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsTimerRunning(const XMC_CCU8_SLICE_t *const slice)
1964:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 122              	 .loc 1 1964 0
 123              	 .cfi_startproc
 124              	 
 125              	 
 126              	 
 127 0000 80B4     	 push {r7}
 128              	.LCFI12:
 129              	 .cfi_def_cfa_offset 4
 130              	 .cfi_offset 7,-4
 131 0002 83B0     	 sub sp,sp,#12
 132              	.LCFI13:
 133              	 .cfi_def_cfa_offset 16
 134 0004 00AF     	 add r7,sp,#0
 135              	.LCFI14:
 136              	 .cfi_def_cfa_register 7
 137 0006 7860     	 str r0,[r7,#4]
1965:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerStatus:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
1966:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_TRB_Msk) == (uint32_t)CCU8_CC8_TCST_TRB_Msk);
 138              	 .loc 1 1966 0
 139 0008 7B68     	 ldr r3,[r7,#4]
 140 000a 9B68     	 ldr r3,[r3,#8]
 141 000c 03F00103 	 and r3,r3,#1
 142 0010 002B     	 cmp r3,#0
 143 0012 14BF     	 ite ne
 144 0014 0123     	 movne r3,#1
 145 0016 0023     	 moveq r3,#0
 146 0018 DBB2     	 uxtb r3,r3
1967:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 147              	 .loc 1 1967 0
 148 001a 1846     	 mov r0,r3
 149 001c 0C37     	 adds r7,r7,#12
 150              	.LCFI15:
 151              	 .cfi_def_cfa_offset 4
 152 001e BD46     	 mov sp,r7
 153              	.LCFI16:
 154              	 .cfi_def_cfa_register 13
 155              	 
 156 0020 5DF8047B 	 ldr r7,[sp],#4
 157              	.LCFI17:
 158              	 .cfi_restore 7
 159              	 .cfi_def_cfa_offset 0
 160 0024 7047     	 bx lr
 161              	 .cfi_endproc
 162              	.LFE164:
 164 0026 00BF     	 .section .text.XMC_CCU8_SLICE_StartTimer,"ax",%progbits
 165              	 .align 2
 166              	 .thumb
 167              	 .thumb_func
 169              	XMC_CCU8_SLICE_StartTimer:
 170              	.LFB168:
1968:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1969:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1970:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1971:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1972:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-1 is running else it returns
1973:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1974:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1975:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 1 (Either Running or stopped(idle)), by reading CC8y
1976:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-1.
1977:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1978:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1979:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr2Running().
1980:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1981:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr1Running(const XMC_CCU8_SLICE_t *const slice)
1982:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
1983:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr1Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
1984:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR1_Msk) == (uint32_t)CCU8_CC8_TCST_DTR1_Msk);
1985:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
1986:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
1987:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
1988:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Pointer to an instance of CC8 slice
1989:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
1990:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    bool returns \b true if the dead time counter of Compare channel-2 is running else it returns
1991:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1992:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
1993:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the state of the  Dead time counter 2 (Either Running or stopped(idle)), by reading CC8y
1994:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This returns the state of the dead time counter which is linked to Compare channel-2.
1995:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
1996:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
1997:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_IsDeadTimeCntr1Running().
1998:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
1999:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_IsDeadTimeCntr2Running(const XMC_CCU8_SLICE_t *const slice)
2000:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2001:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_IsDeadTimeCntr2Running:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2002:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (bool)(((slice->TCST) & CCU8_CC8_TCST_DTR2_Msk) == (uint32_t)CCU8_CC8_TCST_DTR2_Msk);
2003:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2004:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2005:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2006:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2007:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2008:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   ::XMC_CCU8_SLICE_TIMER_COUNT_DIR_t returns the direction in which the timer is counting.
2009:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2010:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2011:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the timer counting direction, by reading CC8yTCST.CDIR bit.\n\n
2012:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will return the direction in which the timer is currently
2013:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * incrementing(XMC_CCU8_SLICE_TIMER_COUNT_DIR_UP) or decrementing (XMC_CCU8_SLICE_TIMER_COUNT_DIR_
2014:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2015:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2016:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2017:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2018:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_DIR_t XMC_CCU8_SLICE_GetCountingDir(const XMC_CCU8_SLICE
2019:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2020:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetCountingDir:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2021:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_DIR_t)(((slice->TCST) & CCU8_CC8_TCST_CDIR_Msk) >> CCU8_CC8_T
2022:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2023:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2024:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2025:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2026:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2027:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2028:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2029:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Starts the timer counting operation, by setting CC8yTCSET.TRBS bit.\n\n
2030:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have configured the CC8 slice before starting its timer.
2031:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Before the Timer is started ensure that the clock is provided to the slice.
2032:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2033:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2034:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StopTimer().
2035:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2036:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StartTimer(XMC_CCU8_SLICE_t *const slice)
2037:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 171              	 .loc 1 2037 0
 172              	 .cfi_startproc
 173              	 
 174              	 
 175              	 
 176 0000 80B4     	 push {r7}
 177              	.LCFI18:
 178              	 .cfi_def_cfa_offset 4
 179              	 .cfi_offset 7,-4
 180 0002 83B0     	 sub sp,sp,#12
 181              	.LCFI19:
 182              	 .cfi_def_cfa_offset 16
 183 0004 00AF     	 add r7,sp,#0
 184              	.LCFI20:
 185              	 .cfi_def_cfa_register 7
 186 0006 7860     	 str r0,[r7,#4]
2038:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StartTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2039:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCSET = CCU8_CC8_TCSET_TRBS_Msk;
 187              	 .loc 1 2039 0
 188 0008 7B68     	 ldr r3,[r7,#4]
 189 000a 0122     	 movs r2,#1
 190 000c DA60     	 str r2,[r3,#12]
2040:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 191              	 .loc 1 2040 0
 192 000e 0C37     	 adds r7,r7,#12
 193              	.LCFI21:
 194              	 .cfi_def_cfa_offset 4
 195 0010 BD46     	 mov sp,r7
 196              	.LCFI22:
 197              	 .cfi_def_cfa_register 13
 198              	 
 199 0012 5DF8047B 	 ldr r7,[sp],#4
 200              	.LCFI23:
 201              	 .cfi_restore 7
 202              	 .cfi_def_cfa_offset 0
 203 0016 7047     	 bx lr
 204              	 .cfi_endproc
 205              	.LFE168:
 207              	 .section .text.XMC_CCU8_SLICE_StopTimer,"ax",%progbits
 208              	 .align 2
 209              	 .thumb
 210              	 .thumb_func
 212              	XMC_CCU8_SLICE_StopTimer:
 213              	.LFB169:
2041:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2042:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2043:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2044:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2045:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2046:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2047:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2048:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops the Timer.\n\n
2049:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Timer counting operation can be stopped by invoking this API, by setting CC8yTCCLR.TRBC bit.
2050:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2051:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2052:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2053:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2054:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopTimer(XMC_CCU8_SLICE_t *const slice)
2055:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 214              	 .loc 1 2055 0
 215              	 .cfi_startproc
 216              	 
 217              	 
 218              	 
 219 0000 80B4     	 push {r7}
 220              	.LCFI24:
 221              	 .cfi_def_cfa_offset 4
 222              	 .cfi_offset 7,-4
 223 0002 83B0     	 sub sp,sp,#12
 224              	.LCFI25:
 225              	 .cfi_def_cfa_offset 16
 226 0004 00AF     	 add r7,sp,#0
 227              	.LCFI26:
 228              	 .cfi_def_cfa_register 7
 229 0006 7860     	 str r0,[r7,#4]
2056:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2057:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TRBC_Msk;
 230              	 .loc 1 2057 0
 231 0008 7B68     	 ldr r3,[r7,#4]
 232 000a 0122     	 movs r2,#1
 233 000c 1A61     	 str r2,[r3,#16]
2058:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 234              	 .loc 1 2058 0
 235 000e 0C37     	 adds r7,r7,#12
 236              	.LCFI27:
 237              	 .cfi_def_cfa_offset 4
 238 0010 BD46     	 mov sp,r7
 239              	.LCFI28:
 240              	 .cfi_def_cfa_register 13
 241              	 
 242 0012 5DF8047B 	 ldr r7,[sp],#4
 243              	.LCFI29:
 244              	 .cfi_restore 7
 245              	 .cfi_def_cfa_offset 0
 246 0016 7047     	 bx lr
 247              	 .cfi_endproc
 248              	.LFE169:
 250              	 .section .text.XMC_CCU8_SLICE_ClearTimer,"ax",%progbits
 251              	 .align 2
 252              	 .thumb
 253              	 .thumb_func
 255              	XMC_CCU8_SLICE_ClearTimer:
 256              	.LFB170:
2059:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2060:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2061:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2062:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2063:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2064:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2065:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2066:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Resets the timer count to zero, by setting CC8yTCCLR.TCC bit.\n\n
2067:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A timer which has been stopped can still retain the last counted value.
2068:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After invoking this API the timer value will be cleared.
2069:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2070:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2071:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2072:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2073:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearTimer(XMC_CCU8_SLICE_t *const slice)
2074:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 257              	 .loc 1 2074 0
 258              	 .cfi_startproc
 259              	 
 260              	 
 261              	 
 262 0000 80B4     	 push {r7}
 263              	.LCFI30:
 264              	 .cfi_def_cfa_offset 4
 265              	 .cfi_offset 7,-4
 266 0002 83B0     	 sub sp,sp,#12
 267              	.LCFI31:
 268              	 .cfi_def_cfa_offset 16
 269 0004 00AF     	 add r7,sp,#0
 270              	.LCFI32:
 271              	 .cfi_def_cfa_register 7
 272 0006 7860     	 str r0,[r7,#4]
2075:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2076:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = (uint32_t) CCU8_CC8_TCCLR_TCC_Msk;
 273              	 .loc 1 2076 0
 274 0008 7B68     	 ldr r3,[r7,#4]
 275 000a 0222     	 movs r2,#2
 276 000c 1A61     	 str r2,[r3,#16]
2077:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 277              	 .loc 1 2077 0
 278 000e 0C37     	 adds r7,r7,#12
 279              	.LCFI33:
 280              	 .cfi_def_cfa_offset 4
 281 0010 BD46     	 mov sp,r7
 282              	.LCFI34:
 283              	 .cfi_def_cfa_register 13
 284              	 
 285 0012 5DF8047B 	 ldr r7,[sp],#4
 286              	.LCFI35:
 287              	 .cfi_restore 7
 288              	 .cfi_def_cfa_offset 0
 289 0016 7047     	 bx lr
 290              	 .cfi_endproc
 291              	.LFE170:
 293              	 .section .text.XMC_CCU8_SLICE_GetTimerPeriodMatch,"ax",%progbits
 294              	 .align 2
 295              	 .thumb
 296              	 .thumb_func
 298              	XMC_CCU8_SLICE_GetTimerPeriodMatch:
 299              	.LFB175:
2078:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2079:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2080:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2081:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2082:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2083:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2084:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2085:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Stops and resets the timer count to zero, by setting CC8yTCCLR.TCC and CC8yTCCLR.TRBC bit.\n\n
2086:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2087:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2088:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_StartTimer().
2089:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2090:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_StopClearTimer(XMC_CCU8_SLICE_t *const slice)
2091:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2092:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_StopClearTimer:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2093:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TCCLR = CCU8_CC8_TCCLR_TRBC_Msk | CCU8_CC8_TCCLR_TCC_Msk;
2094:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2095:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2096:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2097:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2098:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2099:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    ::XMC_CCU8_SLICE_MODE_t returns XMC_CCU8_SLICE_MODE_COMPARE if the slice is operating in comp
2100:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                          returns XMC_CCU8_SLICE_MODE_CAPTURE if the slice is operating in captur
2101:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2102:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2103:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the current mode of operation in the slice (either Capture mode or Compare mode), by r
2104:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * CC8yTC.CMOD bit.\n\n
2105:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Ensure that before invoking this API the CCU8 slice should be configured otherwise the output of
2106:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * invalid.
2107:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2108:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2109:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2110:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2111:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_MODE_t XMC_CCU8_SLICE_GetSliceMode(const XMC_CCU8_SLICE_t *const sli
2112:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2113:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetSliceMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2114:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_MODE_t)(((slice->TC) & CCU8_CC8_TC_CMOD_Msk) >> CCU8_CC8_TC_CMOD_Pos));
2115:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2116:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2117:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2118:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2119:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired repetition mode (Either single shot or Continuous)
2120:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2121:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2122:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2123:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2124:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the Timer to either Single shot mode or continuous mode, by configuring CC8yTC.TSSM b
2125:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count up to the terminal count as specified in the period register and stops imme
2126:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot. In the continuous mode of operation, the timer starts counting
2127:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * reaching the terminal count.
2128:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2129:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2130:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerRepeatMode().
2131:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2132:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerRepeatMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_RE
2133:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2134:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2135:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2136:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2137:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_REPEAT if continu
2138:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_REPEAT_MODE_SINGLE if single sh
2139:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2140:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2141:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the Timer repeat mode, either Single shot mode or continuous mode, by reading CC8yTC.T
2142:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The timer will count upto the terminal count as specified in the period register and stops immed
2143:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * mode has been set to single shot mode. In the continuous mode of operation, the timer starts cou
2144:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * all over again after reaching the terminal count.
2145:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2146:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2147:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerRepeatMode().
2148:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2149:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t XMC_CCU8_SLICE_GetTimerRepeatMode(
2150:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2151:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2152:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerRepeatMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice
2153:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_REPEAT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TSSM_Msk) >> CCU8_CC8_TC_
2154:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2155:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2156:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2157:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mode Desired counting mode (Either Edge Aligned or Center Aligned)
2158:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2159:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2160:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2161:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2162:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Configures the timer counting mode either Edge Aligned or Center Aligned, by configuring CC8yTC.
2163:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * In the edge aligned mode, the timer counts from 0 to the terminal count. Once the timer count ha
2164:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * compare value, the timer status output asserts itself. It will now deassert only after the timer
2165:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * terminal count.\n In the center aligned mode, the timer first counts from 0 to the terminal coun
2166:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * During this upward and downward counting, the timer status output stays asserted as long as the 
2167:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * greater than the compare value.
2168:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2169:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2170:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerCountingMode().
2171:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2172:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCountingMode(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_TIMER_
2173:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2174:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2175:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2176:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2177:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_SLICE_TIMER_COUNT_MODE_t returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_EA if edge aligned 
2178:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                                     returns XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA if center aligned
2179:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2180:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2181:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer counting mode either Edge aligned or Center Aligned, by reading CC8yTC.TCM bit.\
2182:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2183:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2184:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCountingMode().
2185:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2186:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_TIMER_COUNT_MODE_t XMC_CCU8_SLICE_GetTimerCountingMode(
2187:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   const XMC_CCU8_SLICE_t *const slice)
2188:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2189:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCountingMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2190:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((XMC_CCU8_SLICE_TIMER_COUNT_MODE_t)(((slice->TC) & CCU8_CC8_TC_TCM_Msk) >> CCU8_CC8_TC_TC
2191:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2192:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2193:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2194:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_val Timer period value
2195:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *        Range: [0x0 to 0xFFFF]
2196:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2197:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2198:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2199:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2200:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer period, by writing CC8yPRS register.\n\n
2201:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The frequency of counting/ PWM frequency is determined by this value. The period value is writte
2202:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * register. Explicitly enable the shadow transfer for the the period value by calling
2203:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_EnableShadowTransfer() with appropriate mask. If shadow transfer is enabled and the tim
2204:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual period register.
2205:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2206:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2207:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerPeriodMatch().
2208:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2209:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerPeriodMatch(XMC_CCU8_SLICE_t *const slice, const uint16_t period_val);
2210:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2211:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2212:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2213:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2214:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer period value
2215:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2216:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2217:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2218:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer period value currently effective, by reading CC8yPR register.\n\n
2219:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being used for the PWM period.
2220:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2221:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2222:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerPeriodMatch() would set the new period value to a shadow register.
2223:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual period register if the shadow transfer r
2224:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerPeri
2225:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2226:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2227:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2228:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerPeriodMatch().
2229:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2230:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerPeriodMatch(const XMC_CCU8_SLICE_t *const slice)
2231:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 300              	 .loc 1 2231 0
 301              	 .cfi_startproc
 302              	 
 303              	 
 304              	 
 305 0000 80B4     	 push {r7}
 306              	.LCFI36:
 307              	 .cfi_def_cfa_offset 4
 308              	 .cfi_offset 7,-4
 309 0002 83B0     	 sub sp,sp,#12
 310              	.LCFI37:
 311              	 .cfi_def_cfa_offset 16
 312 0004 00AF     	 add r7,sp,#0
 313              	.LCFI38:
 314              	 .cfi_def_cfa_register 7
 315 0006 7860     	 str r0,[r7,#4]
2232:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerPeriodMatch:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slic
2233:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->PR);
 316              	 .loc 1 2233 0
 317 0008 7B68     	 ldr r3,[r7,#4]
 318 000a 1B6B     	 ldr r3,[r3,#48]
 319 000c 9BB2     	 uxth r3,r3
2234:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 320              	 .loc 1 2234 0
 321 000e 1846     	 mov r0,r3
 322 0010 0C37     	 adds r7,r7,#12
 323              	.LCFI39:
 324              	 .cfi_def_cfa_offset 4
 325 0012 BD46     	 mov sp,r7
 326              	.LCFI40:
 327              	 .cfi_def_cfa_register 13
 328              	 
 329 0014 5DF8047B 	 ldr r7,[sp],#4
 330              	.LCFI41:
 331              	 .cfi_restore 7
 332              	 .cfi_def_cfa_offset 0
 333 0018 7047     	 bx lr
 334              	 .cfi_endproc
 335              	.LFE175:
 337 001a 00BF     	 .section .text.XMC_CCU8_EnableShadowTransfer,"ax",%progbits
 338              	 .align 2
 339              	 .thumb
 340              	 .thumb_func
 342              	XMC_CCU8_EnableShadowTransfer:
 343              	.LFB180:
2235:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2236:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2237:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to which the \b compare_val has to programmed.
2238:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2239:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2240:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2241:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2242:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2243:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare value, by writing CC8yCR1S and CC8yCR2S registers.\n\n
2244:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  The PWM duty cycle is determined by this value.\n\n
2245:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2246:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with
2247:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * appropriate mask.If shadow transfer is enabled and the timer is running,
2248:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a period match transfers the value from the shadow register to the actual compare register.
2249:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2250:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2251:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2252:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2253:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetTimerCompareMatch(XMC_CCU8_SLICE_t *const slice,
2254:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel,
2255:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const uint16_t compare_val);
2256:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2257:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2258:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2259:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2260:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2261:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2262:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2263:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2264:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare1 value, by writing CC8yCR1S register.\n\n
2265:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2266:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2267:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2268:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2269:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2270:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2271:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2272:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2273:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2274:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice, con
2275:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2276:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2277:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR1S = (uint32_t) compare_val;
2278:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2279:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2280:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2281:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2282:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param compare_val Timer compare value
2283:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2284:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2285:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2286:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2287:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the timer compare2 value, by writing CC8yCR2S register.\n\n
2288:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The PWM duty cycle is determined by this value.\n\n
2289:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is written to a shadow register. Explicitly enable the shadow transfer for
2290:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the the period/compare value by calling XMC_CCU8_EnableShadowTransfer() with appropriate mask.
2291:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If shadow transfer is enabled and the timer is running, a period match transfers the value from
2292:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the shadow register to the actual compare register.
2293:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2294:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2295:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_EnableShadowTransfer().
2296:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2297:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice, con
2298:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2299:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2300:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->CR2S = (uint32_t) compare_val;
2301:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2302:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2303:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2304:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2305:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param channel Select the compare channel to retrieve from.
2306:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2307:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer compare value
2308:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2309:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2310:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2311:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the timer compare value currently effective, by reading CC8yCR1S and CC8yCR2S register
2312:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the timer is active then the value being returned is currently being for the PWM duty cycle( 
2313:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2314:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2315:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The XMC_CCU8_SLICE_SetTimerCompareMatch() would set the new compare value to a shadow register.
2316:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would only transfer the new values into the actual compare register if the shadow transfer 
2317:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * is enabled and if a period match occurs. Hence a consecutive call to XMC_CCU8_SLICE_GetTimerComp
2318:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * would not reflect the new values until the shadow transfer completes.
2319:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2320:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2321:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatch().
2322:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2323:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** uint16_t XMC_CCU8_SLICE_GetTimerCompareMatch(const XMC_CCU8_SLICE_t *const slice,
2324:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel);
2325:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2326:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2327:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2328:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return
2329:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2330:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2331:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2332:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR1 register.\n\n
2333:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2334:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2335:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel1().
2336:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2337:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel1(XMC_CCU8_SLICE_t *const slice)
2338:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2339:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerCompareMatchChannel1:Invalid Slice Pointer", XMC_CCU8_IsValidS
2340:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR1;
2341:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2342:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2343:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2344:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2345:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return Timer compare value
2346:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint16_t Timer compare value
2347:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2348:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2349:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Gets the timer compare1 value, by reading CC8yCR2 register.\n\n
2350:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2351:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2352:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerCompareMatchChannel2().
2353:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2354:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerCompareMatchChannel2(XMC_CCU8_SLICE_t *const slice)
2355:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2356:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerCompareMatchChannel2:Invalid Slice Pointer", XMC_CCU8_IsValidS
2357:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return slice->CR2;
2358:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2359:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2360:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2361:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2362:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param shadow_transfer_msk Shadow transfer request mask for various transfers.
2363:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            Use ::XMC_CCU8_SHADOW_TRANSFER_t enum items to create a mask of choic
2364:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                            using a bit wise OR operation.
2365:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2366:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2367:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2368:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2369:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Requests of shadow transfer for Period, Compare, Passive level, dither and prescaler, by configu
2370:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the GCSS register.\n\n
2371:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The transfer from the shadow registers to the actual registers is done in the immediate next occ
2372:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * shadow transfer trigger after the API is called.
2373:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2374:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Any call to XMC_CCU8_SLICE_SetTimerPeriodMatch()<BR>  XMC_CCU8_SLICE_SetTimerCompareMatch()<BR>
2375:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_XMC_CCU8_SLICE_SetPrescaler()<BR> XMC_CCU8_SLICE_CompareInit()<BR> XMC_CCU8_SLICE_CaptureIni
2376:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * must be succeeded by this API.
2377:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2378:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2379:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2380:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2381:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_EnableShadowTransfer(XMC_CCU8_MODULE_t *const module, const uint32_t 
2382:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 344              	 .loc 1 2382 0
 345              	 .cfi_startproc
 346              	 
 347              	 
 348              	 
 349 0000 80B4     	 push {r7}
 350              	.LCFI42:
 351              	 .cfi_def_cfa_offset 4
 352              	 .cfi_offset 7,-4
 353 0002 83B0     	 sub sp,sp,#12
 354              	.LCFI43:
 355              	 .cfi_def_cfa_offset 16
 356 0004 00AF     	 add r7,sp,#0
 357              	.LCFI44:
 358              	 .cfi_def_cfa_register 7
 359 0006 7860     	 str r0,[r7,#4]
 360 0008 3960     	 str r1,[r7]
2383:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_EnableShadowTransfer:Invalid module Pointer", XMC_CCU8_IsValidModule(module)
2384:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   module->GCSS = (uint32_t)shadow_transfer_msk;
 361              	 .loc 1 2384 0
 362 000a 7B68     	 ldr r3,[r7,#4]
 363 000c 3A68     	 ldr r2,[r7]
 364 000e 1A61     	 str r2,[r3,#16]
2385:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 365              	 .loc 1 2385 0
 366 0010 0C37     	 adds r7,r7,#12
 367              	.LCFI45:
 368              	 .cfi_def_cfa_offset 4
 369 0012 BD46     	 mov sp,r7
 370              	.LCFI46:
 371              	 .cfi_def_cfa_register 13
 372              	 
 373 0014 5DF8047B 	 ldr r7,[sp],#4
 374              	.LCFI47:
 375              	 .cfi_restore 7
 376              	 .cfi_def_cfa_offset 0
 377 0018 7047     	 bx lr
 378              	 .cfi_endproc
 379              	.LFE180:
 381 001a 00BF     	 .section .text.XMC_CCU8_SLICE_GetTimerValue,"ax",%progbits
 382              	 .align 2
 383              	 .thumb
 384              	 .thumb_func
 386              	XMC_CCU8_SLICE_GetTimerValue:
 387              	.LFB181:
2386:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2387:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2388:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2389:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2390:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *   uint16_t returns the current timer value
2391:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *            Range: [0x0 to 0xFFFF]
2392:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2393:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2394:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest timer value, from CC8yTIMER register.\n\n
2395:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2396:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2397:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetTimerValue().
2398:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2399:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE uint16_t XMC_CCU8_SLICE_GetTimerValue(const XMC_CCU8_SLICE_t *const slice)
2400:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 388              	 .loc 1 2400 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392              	 
 393 0000 80B4     	 push {r7}
 394              	.LCFI48:
 395              	 .cfi_def_cfa_offset 4
 396              	 .cfi_offset 7,-4
 397 0002 83B0     	 sub sp,sp,#12
 398              	.LCFI49:
 399              	 .cfi_def_cfa_offset 16
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI50:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
2401:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2402:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return ((uint16_t) slice->TIMER);
 404              	 .loc 1 2402 0
 405 0008 7B68     	 ldr r3,[r7,#4]
 406 000a 1B6F     	 ldr r3,[r3,#112]
 407 000c 9BB2     	 uxth r3,r3
2403:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 408              	 .loc 1 2403 0
 409 000e 1846     	 mov r0,r3
 410 0010 0C37     	 adds r7,r7,#12
 411              	.LCFI51:
 412              	 .cfi_def_cfa_offset 4
 413 0012 BD46     	 mov sp,r7
 414              	.LCFI52:
 415              	 .cfi_def_cfa_register 13
 416              	 
 417 0014 5DF8047B 	 ldr r7,[sp],#4
 418              	.LCFI53:
 419              	 .cfi_restore 7
 420              	 .cfi_def_cfa_offset 0
 421 0018 7047     	 bx lr
 422              	 .cfi_endproc
 423              	.LFE181:
 425 001a 00BF     	 .section .text.XMC_CCU8_SLICE_EnableEvent,"ax",%progbits
 426              	 .align 2
 427              	 .thumb
 428              	 .thumb_func
 430              	XMC_CCU8_SLICE_EnableEvent:
 431              	.LFB191:
2404:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2405:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2406:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param timer_val The new timer value that has to be loaded into the TIMER register.
2407:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Range: [0x0 to 0xFFFF]
2408:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2409:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2410:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2411:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2412:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Loads a new timer value, by setting CC8yTIMER register.\n\n
2413:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2414:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2415:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Request to load is ignored if the timer is running.
2416:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2417:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2418:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetTimerValue().
2419:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2420:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetTimerValue(XMC_CCU8_SLICE_t *const slice, const uint16_t tim
2421:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2422:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetTimerValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2423:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TIMER = (uint32_t) timer_val;
2424:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2425:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2426:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2427:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param period_dither Boolean instruction on dithering of period match
2428:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param duty_dither Boolean instruction on dithering of compare match
2429:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param spread Dither compare value
2430:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2431:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2432:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2433:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2434:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables dithering of PWM frequency and duty cycle, by configuring CC8yTC.DITHE and CC8yDITS bits
2435:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Some control loops are slow in updating PWM frequency and duty cycle. In such a case, a Bresenha
2436:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * can help reduce long term errors. Dithering can be applied to period and duty individually,
2437:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * this can be selected using the parameter \b period_dither and \b duty_dither.
2438:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The \b spread would provide the dither compare value. If the dither counter value is less than t
2439:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the period/compare values would be dithered according to the dither mode selected. This API woul
2440:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * XMC_CCU8_SLICE_SetDitherCompareValue().
2441:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2442:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Note:</b><br>
2443:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * After this API call, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask
2444:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to transfer the dither value.
2445:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2446:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2447:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableDithering().
2448:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2449:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_EnableDithering(XMC_CCU8_SLICE_t *const slice,
2450:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool period_dither,
2451:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const bool duty_dither,
2452:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****                                     const uint8_t spread);
2453:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2454:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2455:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2456:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2457:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2458:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2459:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2460:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables dithering of PWM frequency and duty cycle, by clearing CC8yTC.DITHE bits.\n\n
2461:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This disables the Dither mode that was set in XMC_CCU8_SLICE_EnableDithering().
2462:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This API will not clear the dither compare value.
2463:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2464:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2465:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2466:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2467:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableDithering(XMC_CCU8_SLICE_t *const slice)
2468:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2469:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableDithering:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice))
2470:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_DITHE_Msk);
2471:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2472:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2473:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2474:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2475:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2476:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2477:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2478:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2479:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the floating prescaler, by setting CC8yTC.FPE bit.\n\n
2480:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider starts with an initial value and increments upon every period match. It ke
2481:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * until a ceiling (prescaler compare value) is hit and thereafter rolls back to the original presc
2482:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * It is necessary to have programmed an initial divider value and a compare value before the featu
2483:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2484:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2485:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue()<BR>  XMC_CCU8_SLICE_DisableFloatingPrescaler(
2486:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_XMC_CCU8_SLICE_SetPrescaler().
2487:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2488:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2489:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2490:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2491:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t) CCU8_CC8_TC_FPE_Msk;
2492:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2493:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2494:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2495:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2496:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2497:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2498:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2499:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2500:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the floating prescaler, by clearing CC8yTC.FPE bit.\n\n
2501:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This would return the prescaler to the normal mode.
2502:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler that would be applied is the value present in CC8yPSC.
2503:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2504:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2505:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableFloatingPrescaler().
2506:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2507:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableFloatingPrescaler(XMC_CCU8_SLICE_t *const slice)
2508:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2509:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableFloatingPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice
2510:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t) CCU8_CC8_TC_FPE_Msk);
2511:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2512:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2513:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2514:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2515:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param comp_val Dither compare value
2516:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2517:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2518:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2519:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2520:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2521:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Sets the dither spread/compare value, by setting CC8yDITS.DCVS bits.\n\n
2522:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * This value is the cornerstone of PWM dithering feature. Dithering is applied/done when the value
2523:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * dithering counter is less than this compare/spread value. For all dithering counter values great
2524:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the spread value, there is no dithering. After setting the value XMC_CCU8_EnableShadowTransfer()
2525:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * called with appropriate mask.
2526:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2527:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   * \par<b>Related APIs:</b><br>
2528:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableDithering().
2529:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2530:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetDitherCompareValue(XMC_CCU8_SLICE_t *const slice, const uint
2531:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2532:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2533:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetDitherCompareValue:Invalid Dither compare value", (comp_val <= 15U)
2534:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2535:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->DITS = comp_val;
2536:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2537:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2538:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2539:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2540:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param div_val Prescaler divider value. Accepts enum :: XMC_CCU8_SLICE_PRESCALER_t
2541:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2542:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2543:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2544:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2545:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2546:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider, by configuring the CC8yPSC and CC8yFPC registers.
2547:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The prescaler divider may only be programmed after the prescaler run bit has been cleared
2548:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * by calling XMC_CCU8_StopPrescaler().
2549:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2550:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2551:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue().
2552:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2553:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SLICE_SetPrescaler(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_PRESCALER_t di
2554:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2555:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2556:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2557:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2558:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    XMC_CCU8_SLICE_PRESCALER_t Prescaler divider value. <BR>
2559:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2560:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2561:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns current prescaler value.\n\n
2562:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Used to detrmine the clock frequency of the CCU8 slice XMC_SCU_CLOCK_GetCcuClockFrequency() / XM
2563:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2564:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2565:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2566:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2567:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE XMC_CCU8_SLICE_PRESCALER_t XMC_CCU8_SLICE_GetPrescaler(XMC_CCU8_SLICE_t *const slic
2568:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2569:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetPrescaler:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2570:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2571:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (XMC_CCU8_SLICE_PRESCALER_t)slice->PSC;
2572:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2573:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2574:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2575:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2576:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param cmp_val Prescaler divider compare value
2577:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                 Range: [0x0 to 0xF]
2578:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2579:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2580:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2581:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2582:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Programs the slice specific prescaler divider compare value, by configuring CC8yFPCS register.\n
2583:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The compare value is applicable only in floating mode of operation. The prescaler divider starts
2584:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * value and increments to the compare value steadily upon every period match. Once prescaler divid
2585:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * equals the prescaler divider compare value, the value in the former resets back to the PVAL (fro
2586:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * the value, XMC_CCU8_EnableShadowTransfer() has to be called with appropriate mask.
2587:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2588:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2589:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetPrescaler().
2590:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2591:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue(XMC_CCU8_SLICE_t *const slice,
2592:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const uint8_t cmp_val)
2593:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2594:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetFloatingPrescalerCompareValue:Invalid Slice Pointer", XMC_CCU8_IsVa
2595:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   /* First, write to the shadow register */
2596:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->FPCS = (uint32_t) cmp_val;
2597:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2598:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2599:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2600:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2601:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode is needed.
2602:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2603:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2604:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2605:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2606:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the multichannel mode, by setting CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch_n
2607:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The output state of the Timer slices can be controlled in parallel by a single input signal.
2608:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * A particularly useful feature in motor control applications where the PWM output of multiple sli
2609:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * be gated and ungated by multi-channel gating inputs connected to the slices. A peripheral like P
2610:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * motor knows exactly which of the power drive switches are to be turned on and off at any instant
2611:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * a gating bus (known as multi-channel inputs) control which of the slices output stays gated/unga
2612:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2613:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2614:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultiChannelMode()<BR>  XMC_CCU8_SetMultiChannelShadowTransferMode().
2615:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2616:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2617:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t ch_num)
2618:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2619:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(s
2620:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CHA
2621:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2622:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC |= (uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num;
2623:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2624:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2625:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2626:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2627:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param ch_num Compare channel for which the multi-channel mode needs to be disabled.
2628:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2629:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2630:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2631:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2632:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the multichannel mode, by clearing CC8yTC.MCME1 or CC8yTC.MCME1 bits based on the \a ch
2633:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Returns the slices to the normal operation mode. This takes the slice number as input and
2634:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * configures the multi channel mode for it.
2635:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2636:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2637:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableMultiChannelMode().
2638:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2639:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultiChannelMode(XMC_CCU8_SLICE_t *const slice,
2640:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_COMPARE_CHANNEL_t ch_num)
2641:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2642:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(
2643:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultiChannelMode:Invalid Channel", XMC_CCU8_SLICE_CHECK_COMP_CH
2644:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2645:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->TC &= ~((uint32_t)CCU8_CC8_TC_MCME1_Msk << ch_num);
2646:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2647:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2648:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2649:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param module Constant pointer to CCU8 module
2650:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice_mode_msk Slices for which the configuration has to be applied.
2651:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                       Use ::XMC_CCU8_MULTI_CHANNEL_SHADOW_TRANSFER_t enum items to create a mask
2652:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                             using a bit wise OR operation.
2653:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2654:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2655:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2656:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2657:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the Multi-channel shadow transfer request trigger signal either by software or hardware 
2658:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * GCTRL.MSE0, GCTRL.MSE1, GCTRL.MSE2, and GCTRL.MSE3 based on the mask.\n\n
2659:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The shadow transfer would take place either if it was requested by software or by the CCU8x.MCSS
2660:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2661:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2662:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  None.
2663:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** */
2664:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** void XMC_CCU8_SetMultiChannelShadowTransferMode(XMC_CCU8_MODULE_t *const module, const uint32_t sli
2665:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2666:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2667:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2668:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param reg_num The capture register from which the captured value is to be retrieved
2669:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                Range: [0,3]
2670:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2671:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    uint32_t  Returns the Capture register value.
2672:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *              Range: [0 to 0x1FFFFF]
2673:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2674:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2675:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves timer value which has been captured in the Capture registers, by reading CC8yCV[\b reg
2676:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The signal whose timing characteristics are to be measured must be mapped to an event which in t
2677:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to the capture function. Based on the capture criteria, the timer values are captured into captu
2678:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * characteristics of the input signal may then be derived/inferred from the captured values. The f
2679:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * to find out if there is a new captured value present.
2680:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2681:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2682:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetLastCapturedTimerValue().
2683:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2684:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** uint32_t XMC_CCU8_SLICE_GetCaptureRegisterValue(const XMC_CCU8_SLICE_t *const slice, const uint8_t 
2685:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2686:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2687:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2688:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param set  The capture register set, which must be evaluated
2689:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param val_ptr Out Parameter of the API.Stores the captured timer value into this out parameter.
2690:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2691:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  ::XMC_CCU8_STATUS_t Returns XMC_CCU8_STATUS_OK if there was new value present in the capture re
2692:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                   returns XMC_CCU8_STATUS_ERROR if there was no new value present in the capture
2693:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2694:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2695:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieves the latest captured timer value, by reading CC8yCV registers.\n\n
2696:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Retrieve the timer value last stored by the slice. When separate capture events are used,
2697:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * users must specify the capture set to evaluate. If single capture event mode is used, all 8 capt
2698:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * evaluated.\n
2699:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * The lowest register is evaluated first followed by the next higher ordered register and this con
2700:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * capture registers have been evaluated.
2701:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2702:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2703:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_GetCaptureregisterValue().
2704:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2705:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** XMC_CCU8_STATUS_t XMC_CCU8_SLICE_GetLastCapturedTimerValue(const XMC_CCU8_SLICE_t *const slice,
2706:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     const XMC_CCU8_SLICE_CAP_REG_SET_t set,
2707:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****     uint32_t *val_ptr);
2708:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2709:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2710:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2711:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2712:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2713:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2714:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2715:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2716:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the event, by configuring CC8yINTE register.\n\
2717:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2718:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the event. Binding with SR is perform
2719:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2720:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2721:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableMultipleEvents()<BR>  XMC_CCU8_SLIC
2722:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2723:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2724:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE
2725:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 432              	 .loc 1 2725 0
 433              	 .cfi_startproc
 434              	 
 435              	 
 436              	 
 437 0000 80B4     	 push {r7}
 438              	.LCFI54:
 439              	 .cfi_def_cfa_offset 4
 440              	 .cfi_offset 7,-4
 441 0002 83B0     	 sub sp,sp,#12
 442              	.LCFI55:
 443              	 .cfi_def_cfa_offset 16
 444 0004 00AF     	 add r7,sp,#0
 445              	.LCFI56:
 446              	 .cfi_def_cfa_register 7
 447 0006 7860     	 str r0,[r7,#4]
 448 0008 0B46     	 mov r3,r1
 449 000a FB70     	 strb r3,[r7,#3]
2726:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2727:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2728:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2729:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE |= ((uint32_t) 1) << ((uint32_t) event);
 450              	 .loc 1 2729 0
 451 000c 7B68     	 ldr r3,[r7,#4]
 452 000e D3F8A420 	 ldr r2,[r3,#164]
 453 0012 FB78     	 ldrb r3,[r7,#3]
 454 0014 0121     	 movs r1,#1
 455 0016 01FA03F3 	 lsl r3,r1,r3
 456 001a 1A43     	 orrs r2,r2,r3
 457 001c 7B68     	 ldr r3,[r7,#4]
 458 001e C3F8A420 	 str r2,[r3,#164]
2730:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 459              	 .loc 1 2730 0
 460 0022 0C37     	 adds r7,r7,#12
 461              	.LCFI57:
 462              	 .cfi_def_cfa_offset 4
 463 0024 BD46     	 mov sp,r7
 464              	.LCFI58:
 465              	 .cfi_def_cfa_register 13
 466              	 
 467 0026 5DF8047B 	 ldr r7,[sp],#4
 468              	.LCFI59:
 469              	 .cfi_restore 7
 470              	 .cfi_def_cfa_offset 0
 471 002a 7047     	 bx lr
 472              	 .cfi_endproc
 473              	.LFE191:
 475              	 .section .text.XMC_CCU8_SLICE_ClearEvent,"ax",%progbits
 476              	 .align 2
 477              	 .thumb
 478              	 .thumb_func
 480              	XMC_CCU8_SLICE_ClearEvent:
 481              	.LFB196:
2731:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2732:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2733:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2734:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2735:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2736:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *                  using a bit wise OR operation.
2737:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2738:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2739:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2740:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2741:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Enables the generation of an interrupt pulse for the required events, by configuring CC8yINTE re
2742:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2743:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API merely enables the events. Binding with SR is perfor
2744:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2745:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2746:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_Disable
2747:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2748:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2749:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_EnableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint1
2750:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2751:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_EnableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sli
2752:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE = (uint32_t) mask;
2753:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2754:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2755:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2756:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2757:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2758:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2759:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2760:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2761:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2762:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Disables the generation of an interrupt pulse for the event, by clearing CC8yINTE register.\n\n
2763:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Prevents the event from being asserted.
2764:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2765:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2766:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2767:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableMultipleEvents().
2768:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2769:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLIC
2770:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2771:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2772:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event))
2773:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2774:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~(((uint32_t) 1) << ((uint32_t) event));
2775:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2776:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2777:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2778:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2779:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param mask Event mask such that multiple events can be enabled.
2780:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             Use ::XMC_CCU8_SLICE_MULTI_IRQ_ID_t enum items to create a mask of choice,
2781:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *             using a bit wise OR operation.
2782:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2783:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2784:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2785:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2786:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Disables the generation of an interrupt pulse for the required events, by clearing CC8yINTE reg
2787:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  Prevents selected events of the slice from being asserted.
2788:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2789:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2790:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2791:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_DisableEvent().
2792:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2793:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_DisableMultipleEvents(XMC_CCU8_SLICE_t *const slice, const uint
2794:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2795:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_DisableMultipleEvents:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(sl
2796:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->INTE &= ~((uint32_t) mask);
2797:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2798:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2799:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2800:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2801:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event whose assertion can potentially lead to an interrupt
2802:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2803:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2804:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2805:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2806:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Manually asserts the requested event, by setting CC8ySWS register.\n\n
2807:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * For an event to lead to an interrupt, it must first be enabled and bound to a service request li
2808:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * NVIC node must be enabled as well. This API manually asserts the requested event.
2809:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2810:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2811:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_SetInterruptNode()<BR>  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_EnableM
2812:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2813:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_SetEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_IR
2814:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
2815:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2816:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_SetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2817:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2818:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWS = ((uint32_t) 1) << ((uint32_t) event);
2819:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
2820:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2821:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2822:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2823:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Asserted event which must be acknowledged.
2824:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <BR>
2825:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *    None<BR>
2826:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2827:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2828:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Acknowledges an asserted event, by setting CC8ySWR with respective event flag.\n\n
2829:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2830:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2831:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent()<BR>  XMC_CCU8_SLICE_GetEvent().
2832:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2833:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2834:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE void XMC_CCU8_SLICE_ClearEvent(XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SLICE_
2835:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 482              	 .loc 1 2835 0
 483              	 .cfi_startproc
 484              	 
 485              	 
 486              	 
 487 0000 80B4     	 push {r7}
 488              	.LCFI60:
 489              	 .cfi_def_cfa_offset 4
 490              	 .cfi_offset 7,-4
 491 0002 83B0     	 sub sp,sp,#12
 492              	.LCFI61:
 493              	 .cfi_def_cfa_offset 16
 494 0004 00AF     	 add r7,sp,#0
 495              	.LCFI62:
 496              	 .cfi_def_cfa_register 7
 497 0006 7860     	 str r0,[r7,#4]
 498 0008 0B46     	 mov r3,r1
 499 000a FB70     	 strb r3,[r7,#3]
2836:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2837:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_ClearEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2838:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   slice->SWR = ((uint32_t) 1) << ((uint32_t) event);
 500              	 .loc 1 2838 0
 501 000c FB78     	 ldrb r3,[r7,#3]
 502 000e 0122     	 movs r2,#1
 503 0010 9A40     	 lsls r2,r2,r3
 504 0012 7B68     	 ldr r3,[r7,#4]
 505 0014 C3F8B020 	 str r2,[r3,#176]
2839:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 506              	 .loc 1 2839 0
 507 0018 0C37     	 adds r7,r7,#12
 508              	.LCFI63:
 509              	 .cfi_def_cfa_offset 4
 510 001a BD46     	 mov sp,r7
 511              	.LCFI64:
 512              	 .cfi_def_cfa_register 13
 513              	 
 514 001c 5DF8047B 	 ldr r7,[sp],#4
 515              	.LCFI65:
 516              	 .cfi_restore 7
 517              	 .cfi_def_cfa_offset 0
 518 0020 7047     	 bx lr
 519              	 .cfi_endproc
 520              	.LFE196:
 522 0022 00BF     	 .section .text.XMC_CCU8_SLICE_GetEvent,"ax",%progbits
 523              	 .align 2
 524              	 .thumb
 525              	 .thumb_func
 527              	XMC_CCU8_SLICE_GetEvent:
 528              	.LFB197:
2840:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** 
2841:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** /**
2842:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param slice Constant pointer to CC8 Slice
2843:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @param event Event to be evaluated for assertion
2844:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * @return <br>
2845:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *         bool  Returns true if event is set else false is returned.
2846:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2847:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Description:</b><br>
2848:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Evaluates if a given event is asserted or not, by reading CC8yINTS register.\n\n
2849:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * Return true if the event is asserted. For a event to be asserted it has to be
2850:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * first enabled. Only if that event is enabled the call to this API is valid.
2851:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * If the Event is enabled and has not yet occurred then a false is returned.
2852:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *
2853:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  * \par<b>Related APIs:</b><br>
2854:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  *  XMC_CCU8_SLICE_EnableEvent()<BR>  XMC_CCU8_SLICE_SetEvent().
2855:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****  */
2856:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** __STATIC_INLINE bool XMC_CCU8_SLICE_GetEvent(const XMC_CCU8_SLICE_t *const slice, const XMC_CCU8_SL
2857:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** {
 529              	 .loc 1 2857 0
 530              	 .cfi_startproc
 531              	 
 532              	 
 533              	 
 534 0000 80B4     	 push {r7}
 535              	.LCFI66:
 536              	 .cfi_def_cfa_offset 4
 537              	 .cfi_offset 7,-4
 538 0002 83B0     	 sub sp,sp,#12
 539              	.LCFI67:
 540              	 .cfi_def_cfa_offset 16
 541 0004 00AF     	 add r7,sp,#0
 542              	.LCFI68:
 543              	 .cfi_def_cfa_register 7
 544 0006 7860     	 str r0,[r7,#4]
 545 0008 0B46     	 mov r3,r1
 546 000a FB70     	 strb r3,[r7,#3]
2858:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid Slice Pointer", XMC_CCU8_IsValidSlice(slice));
2859:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   XMC_ASSERT("XMC_CCU8_SLICE_GetEvent:Invalid SR event", XMC_CCU8_SLICE_CHECK_INTERRUPT(event));
2860:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h ****   return (((uint32_t)(slice->INTS & ((uint32_t)1 << event))) != 0U);
 547              	 .loc 1 2860 0
 548 000c 7B68     	 ldr r3,[r7,#4]
 549 000e D3F8A020 	 ldr r2,[r3,#160]
 550 0012 FB78     	 ldrb r3,[r7,#3]
 551 0014 22FA03F3 	 lsr r3,r2,r3
 552 0018 03F00103 	 and r3,r3,#1
 553 001c 002B     	 cmp r3,#0
 554 001e 14BF     	 ite ne
 555 0020 0123     	 movne r3,#1
 556 0022 0023     	 moveq r3,#0
 557 0024 DBB2     	 uxtb r3,r3
2861:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc\xmc_ccu8.h **** }
 558              	 .loc 1 2861 0
 559 0026 1846     	 mov r0,r3
 560 0028 0C37     	 adds r7,r7,#12
 561              	.LCFI69:
 562              	 .cfi_def_cfa_offset 4
 563 002a BD46     	 mov sp,r7
 564              	.LCFI70:
 565              	 .cfi_def_cfa_register 13
 566              	 
 567 002c 5DF8047B 	 ldr r7,[sp],#4
 568              	.LCFI71:
 569              	 .cfi_restore 7
 570              	 .cfi_def_cfa_offset 0
 571 0030 7047     	 bx lr
 572              	 .cfi_endproc
 573              	.LFE197:
 575 0032 00BF     	 .section .text.PWM_CCU8_GetAppVersion,"ax",%progbits
 576              	 .align 2
 577              	 .global PWM_CCU8_GetAppVersion
 578              	 .thumb
 579              	 .thumb_func
 581              	PWM_CCU8_GetAppVersion:
 582              	.LFB241:
 583              	 .file 2 "../Dave/Generated/PWM_CCU8/pwm_ccu8.c"
   1:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**
   2:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @file pwm_ccu8.c
   3:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @date 2019-09-23
   4:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   5:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * NOTE:
   6:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
   8:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @cond
   9:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  10:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PWM_CCU8 v4.1.32 - PWM APP using one timer slice of CCU8, with external events and dead time sup
  11:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *                   to generate up to 4 PWM outputs.
  12:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  13:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Copyright (c) 2015 - 2020, Infineon Technologies AG
  14:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * All rights reserved.
  15:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  16:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * following conditions are met:
  18:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  19:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer.
  21:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  22:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   disclaimer in the documentation and/or other materials provided with the distribution.
  24:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  25:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  28:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  36:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  39:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  40:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * Change History
  41:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * --------------
  42:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  43:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-02-14:
  44:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Initial version for DAVEv4
  45:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  46:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-05-20:
  47:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - PWM_CCU8_AcknowledgeInterrupt() api is renamed as PWM_CCU8_ClearEvent().
  48:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  49:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-06-20:
  50:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Copyright information updated.
  51:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  52:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2015-08-13:
  53:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of compare channel in external load event using API "XMC_CCU8_
  54:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of shadow transfer mode using API "XMC_CCU8_SLICE_SetShadowTra
  55:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for selection of immediate shadow transfer using
  56:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer" in XMC14* devices
  57:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Added support for automatic shadow transfer using
  58:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *       API "XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest" in XMC14* devices
  59:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  60:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-03-21:
  61:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Bug Fix: Trap enable configuration is corrected in PWM_CCU8_lConfigure_Events() API.
  62:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  63:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2016-10-28:
  64:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Changed PWM_CCU8_Stop() to set the ST output to the passive value after stopping the timer
  65:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  66:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * 2019-09-23:
  67:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *     - Fixed escaping of '%' in XMC_DEBUG()
  68:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  69:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * @endcond
  70:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  *
  71:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  */
  72:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  73:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  74:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * HEADER FILES
  75:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  76:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #include "pwm_ccu8.h"
  77:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  78:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  79:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * PRIVATE FUNCTION PROTOTYPES
  80:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  81:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App Interrupts */
  82:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr);
  83:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  84:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App events and configurations */
  85:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr);
  86:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  87:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* Initialize the App pin configurations */
  88:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr);
  89:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  90:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  91:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * MACROS
  92:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  93:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  94:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  95:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL DATA
  96:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
  97:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
  98:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
  99:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * LOCAL ROUTINES
 100:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
 101:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 102:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 103:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  * API IMPLEMENTATION
 104:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****  **************************************************************************************************
 105:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 106:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* API to retrieve App version info */
 107:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** DAVE_APP_VERSION_t PWM_CCU8_GetAppVersion(void)
 108:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 584              	 .loc 2 108 0
 585              	 .cfi_startproc
 586              	 
 587              	 
 588              	 
 589 0000 80B4     	 push {r7}
 590              	.LCFI72:
 591              	 .cfi_def_cfa_offset 4
 592              	 .cfi_offset 7,-4
 593 0002 83B0     	 sub sp,sp,#12
 594              	.LCFI73:
 595              	 .cfi_def_cfa_offset 16
 596 0004 00AF     	 add r7,sp,#0
 597              	.LCFI74:
 598              	 .cfi_def_cfa_register 7
 109:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   DAVE_APP_VERSION_t version;
 110:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 111:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.major = PWM_CCU8_MAJOR_VERSION;
 599              	 .loc 2 111 0
 600 0006 0423     	 movs r3,#4
 601 0008 3B70     	 strb r3,[r7]
 112:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.minor = PWM_CCU8_MINOR_VERSION;
 602              	 .loc 2 112 0
 603 000a 0123     	 movs r3,#1
 604 000c 7B70     	 strb r3,[r7,#1]
 113:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   version.patch = PWM_CCU8_PATCH_VERSION;
 605              	 .loc 2 113 0
 606 000e 2023     	 movs r3,#32
 607 0010 BB70     	 strb r3,[r7,#2]
 114:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 115:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return version;
 608              	 .loc 2 115 0
 609 0012 3B1D     	 adds r3,r7,#4
 610 0014 3A46     	 mov r2,r7
 611 0016 1268     	 ldr r2,[r2]
 612 0018 1146     	 mov r1,r2
 613 001a 1980     	 strh r1,[r3]
 614 001c 0233     	 adds r3,r3,#2
 615 001e 120C     	 lsrs r2,r2,#16
 616 0020 1A70     	 strb r2,[r3]
 617 0022 0023     	 movs r3,#0
 618 0024 3A79     	 ldrb r2,[r7,#4]
 619 0026 62F30703 	 bfi r3,r2,#0,#8
 620 002a 7A79     	 ldrb r2,[r7,#5]
 621 002c 62F30F23 	 bfi r3,r2,#8,#8
 622 0030 BA79     	 ldrb r2,[r7,#6]
 623 0032 62F31743 	 bfi r3,r2,#16,#8
 116:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 624              	 .loc 2 116 0
 625 0036 1846     	 mov r0,r3
 626 0038 0C37     	 adds r7,r7,#12
 627              	.LCFI75:
 628              	 .cfi_def_cfa_offset 4
 629 003a BD46     	 mov sp,r7
 630              	.LCFI76:
 631              	 .cfi_def_cfa_register 13
 632              	 
 633 003c 5DF8047B 	 ldr r7,[sp],#4
 634              	.LCFI77:
 635              	 .cfi_restore 7
 636              	 .cfi_def_cfa_offset 0
 637 0040 7047     	 bx lr
 638              	 .cfi_endproc
 639              	.LFE241:
 641 0042 00BF     	 .section .text.PWM_CCU8_Init,"ax",%progbits
 642              	 .align 2
 643              	 .global PWM_CCU8_Init
 644              	 .thumb
 645              	 .thumb_func
 647              	PWM_CCU8_Init:
 648              	.LFB242:
 117:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 118:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /* This function initializes the app */
 119:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Init(PWM_CCU8_t* handle_ptr)
 120:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 649              	 .loc 2 120 0
 650              	 .cfi_startproc
 651              	 
 652              	 
 653 0000 80B5     	 push {r7,lr}
 654              	.LCFI78:
 655              	 .cfi_def_cfa_offset 8
 656              	 .cfi_offset 7,-8
 657              	 .cfi_offset 14,-4
 658 0002 86B0     	 sub sp,sp,#24
 659              	.LCFI79:
 660              	 .cfi_def_cfa_offset 32
 661 0004 00AF     	 add r7,sp,#0
 662              	.LCFI80:
 663              	 .cfi_def_cfa_register 7
 664 0006 7860     	 str r0,[r7,#4]
 121:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 122:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   GLOBAL_CCU8_STATUS_t status_ccu8_global;
 123:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_module;
 124:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t prescalar;
 125:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 126:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 665              	 .loc 2 126 0
 666 0008 0123     	 movs r3,#1
 667 000a FB75     	 strb r3,[r7,#23]
 127:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_ccu8_global = GLOBAL_CCU8_STATUS_FAILURE;
 668              	 .loc 2 127 0
 669 000c 0123     	 movs r3,#1
 670 000e BB75     	 strb r3,[r7,#22]
 128:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Init:handle_ptr is NULL", (handle_ptr != NULL));
 129:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 130:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED == handle_ptr->state)
 671              	 .loc 2 130 0
 672 0010 7B68     	 ldr r3,[r7,#4]
 673 0012 1B7F     	 ldrb r3,[r3,#28]
 674 0014 002B     	 cmp r3,#0
 675 0016 40F09A80 	 bne .L20
 131:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 132:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize consumed Apps */
 133:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status_ccu8_global = GLOBAL_CCU8_Init(handle_ptr->config_ptr->global_ccu8_handle);
 676              	 .loc 2 133 0
 677 001a 7B68     	 ldr r3,[r7,#4]
 678 001c 1B68     	 ldr r3,[r3]
 679 001e D3F88830 	 ldr r3,[r3,#136]
 680 0022 1846     	 mov r0,r3
 681 0024 FFF7FEFF 	 bl GLOBAL_CCU8_Init
 682 0028 0346     	 mov r3,r0
 683 002a BB75     	 strb r3,[r7,#22]
 134:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 135:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* Initialize CCU8x_CC8y slice */
 136:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (GLOBAL_CCU8_STATUS_SUCCESS == status_ccu8_global)
 684              	 .loc 2 136 0
 685 002c BB7D     	 ldrb r3,[r7,#22]
 686 002e 002B     	 cmp r3,#0
 687 0030 40F08980 	 bne .L21
 137:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 138:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_Init:Initilizing slice");
 139:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 140:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure CCU8x_CC8y slice as timer */
 141:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_CompareInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ccu8_cc8_slice
 688              	 .loc 2 141 0
 689 0034 7B68     	 ldr r3,[r7,#4]
 690 0036 9A68     	 ldr r2,[r3,#8]
 691 0038 7B68     	 ldr r3,[r7,#4]
 692 003a 1B68     	 ldr r3,[r3]
 693 003c 5B6C     	 ldr r3,[r3,#68]
 694 003e 1046     	 mov r0,r2
 695 0040 1946     	 mov r1,r3
 696 0042 FFF7FEFF 	 bl XMC_CCU8_SLICE_CompareInit
 142:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set period match value of the timer  */
 143:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->period
 697              	 .loc 2 143 0
 698 0046 7B68     	 ldr r3,[r7,#4]
 699 0048 9A68     	 ldr r2,[r3,#8]
 700 004a 7B68     	 ldr r3,[r7,#4]
 701 004c 1B68     	 ldr r3,[r3]
 702 004e 5B88     	 ldrh r3,[r3,#2]
 703 0050 1046     	 mov r0,r2
 704 0052 1946     	 mov r1,r3
 705 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 144:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 145:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 1 */
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 706              	 .loc 2 146 0
 707 0058 7B68     	 ldr r3,[r7,#4]
 708 005a 9A68     	 ldr r2,[r3,#8]
 147:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 709              	 .loc 2 147 0
 710 005c 7B68     	 ldr r3,[r7,#4]
 711 005e 1B68     	 ldr r3,[r3]
 146:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare1_value);
 712              	 .loc 2 146 0
 713 0060 9B88     	 ldrh r3,[r3,#4]
 714 0062 1046     	 mov r0,r2
 715 0064 0021     	 movs r1,#0
 716 0066 1A46     	 mov r2,r3
 717 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 148:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Set timer compare match value for channel 2 */
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHANNE
 718              	 .loc 2 149 0
 719 006c 7B68     	 ldr r3,[r7,#4]
 720 006e 9A68     	 ldr r2,[r3,#8]
 150:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 721              	 .loc 2 150 0
 722 0070 7B68     	 ldr r3,[r7,#4]
 723 0072 1B68     	 ldr r3,[r3]
 149:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                           (uint16_t) handle_ptr->config_ptr->compare2_value);
 724              	 .loc 2 149 0
 725 0074 DB88     	 ldrh r3,[r3,#6]
 726 0076 1046     	 mov r0,r2
 727 0078 0121     	 movs r1,#1
 728 007a 1A46     	 mov r2,r3
 729 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 151:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((1U == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch1_enable) || (1U
 730              	 .loc 2 152 0
 731 0080 7B68     	 ldr r3,[r7,#4]
 732 0082 1B68     	 ldr r3,[r3]
 733 0084 5B6C     	 ldr r3,[r3,#68]
 734 0086 DB78     	 ldrb r3,[r3,#3]
 735 0088 03F00203 	 and r3,r3,#2
 736 008c DBB2     	 uxtb r3,r3
 737 008e 002B     	 cmp r3,#0
 738 0090 08D1     	 bne .L22
 153:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 739              	 .loc 2 153 0 discriminator 1
 740 0092 7B68     	 ldr r3,[r7,#4]
 741 0094 1B68     	 ldr r3,[r3]
 742 0096 5B6C     	 ldr r3,[r3,#68]
 743 0098 DB78     	 ldrb r3,[r3,#3]
 744 009a 03F00403 	 and r3,r3,#4
 745 009e DBB2     	 uxtb r3,r3
 152:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           == handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->mcm_ch2_enable))
 746              	 .loc 2 152 0 discriminator 1
 747 00a0 002B     	 cmp r3,#0
 748 00a2 08D0     	 beq .L23
 749              	.L22:
 154:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 155:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SetMultiChannelShadowTransferMode(handle_ptr->ccu8_module_ptr,
 750              	 .loc 2 155 0
 751 00a4 7B68     	 ldr r3,[r7,#4]
 752 00a6 5A68     	 ldr r2,[r3,#4]
 156:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 753              	 .loc 2 156 0
 754 00a8 7B68     	 ldr r3,[r7,#4]
 755 00aa 1B68     	 ldr r3,[r3]
 756 00ac DB6B     	 ldr r3,[r3,#60]
 155:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    (uint32_t) handle_ptr->config_ptr->mcm_shadow_tx
 757              	 .loc 2 155 0
 758 00ae 1046     	 mov r0,r2
 759 00b0 1946     	 mov r1,r3
 760 00b2 FFF7FEFF 	 bl XMC_CCU8_SetMultiChannelShadowTransferMode
 761              	.L23:
 157:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 158:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 159:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES != XMC45) /*STC register not available on XMC45xx devices */
 160:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetShadowTransferMode(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->shad
 161:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 162:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 163:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #if (UC_SERIES == XMC14) /*below feature available in XMC14xx devices */
 164:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_WriteImmediateAfterShadowTransfer(handle_ptr->ccu8_slice_ptr,
 165:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                        handle_ptr->config_ptr->immediate_write);
 166:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableAutomaticShadowTransferRequest(handle_ptr->ccu8_slice_ptr,
 167:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                           handle_ptr->config_ptr->automatic_shadow_
 168:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if((bool)true == handle_ptr->config_ptr->cascaded_shadow_txfr_enable)
 169:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 170:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_EnableCascadedShadowTransfer(handle_ptr->ccu8_slice_ptr);
 171:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 172:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** #endif
 173:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 174:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Transfer value from shadow timer registers to actual timer registers */
 175:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 762              	 .loc 2 175 0
 763 00b6 7B68     	 ldr r3,[r7,#4]
 764 00b8 5A68     	 ldr r2,[r3,#4]
 765 00ba 7B68     	 ldr r3,[r7,#4]
 766 00bc 1B69     	 ldr r3,[r3,#16]
 767 00be 1046     	 mov r0,r2
 768 00c0 1946     	 mov r1,r3
 769 00c2 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 176:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk
 770              	 .loc 2 176 0
 771 00c6 7B68     	 ldr r3,[r7,#4]
 772 00c8 5A68     	 ldr r2,[r3,#4]
 773 00ca 7B68     	 ldr r3,[r7,#4]
 774 00cc 5B69     	 ldr r3,[r3,#20]
 775 00ce 1046     	 mov r0,r2
 776 00d0 1946     	 mov r1,r3
 777 00d2 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 177:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 178:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_DeadTimeInit(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->dt_config_ptr
 778              	 .loc 2 178 0
 779 00d6 7B68     	 ldr r3,[r7,#4]
 780 00d8 9A68     	 ldr r2,[r3,#8]
 781 00da 7B68     	 ldr r3,[r7,#4]
 782 00dc 1B68     	 ldr r3,[r3]
 783 00de 1B6C     	 ldr r3,[r3,#64]
 784 00e0 1046     	 mov r0,r2
 785 00e2 1946     	 mov r1,r3
 786 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_DeadTimeInit
 179:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 180:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Configure events */
 181:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lConfigure_Events(handle_ptr);
 787              	 .loc 2 181 0
 788 00e8 7868     	 ldr r0,[r7,#4]
 789 00ea FFF7FEFF 	 bl PWM_CCU8_lConfigure_Events
 182:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 183:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Enable the interrupts */
 184:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_Interrupt(handle_ptr);
 790              	 .loc 2 184 0
 791 00ee 7868     	 ldr r0,[r7,#4]
 792 00f0 FFF7FEFF 	 bl PWM_CCU8_lInit_Interrupt
 185:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 186:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*Initializes the GPIO*/
 187:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       PWM_CCU8_lInit_GPIO(handle_ptr);
 793              	 .loc 2 187 0
 794 00f4 7868     	 ldr r0,[r7,#4]
 795 00f6 FFF7FEFF 	 bl PWM_CCU8_lInit_GPIO
 188:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 189:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = handle_ptr->config_ptr->global_ccu8_handle->module_frequency;
 796              	 .loc 2 189 0
 797 00fa 7B68     	 ldr r3,[r7,#4]
 798 00fc 1B68     	 ldr r3,[r3]
 799 00fe D3F88830 	 ldr r3,[r3,#136]
 800 0102 1B68     	 ldr r3,[r3]
 801 0104 3B61     	 str r3,[r7,#16]
 190:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       prescalar = (uint32_t) handle_ptr->config_ptr->ccu8_cc8_slice_timer_ptr->prescaler_initval;
 802              	 .loc 2 190 0
 803 0106 7B68     	 ldr r3,[r7,#4]
 804 0108 1B68     	 ldr r3,[r3]
 805 010a 5B6C     	 ldr r3,[r3,#68]
 806 010c 1B7B     	 ldrb r3,[r3,#12]
 807 010e C3F30303 	 ubfx r3,r3,#0,#4
 808 0112 DBB2     	 uxtb r3,r3
 809 0114 FB60     	 str r3,[r7,#12]
 191:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_module = frequency_module / ((uint32_t) 1 << prescalar);
 810              	 .loc 2 191 0
 811 0116 FB68     	 ldr r3,[r7,#12]
 812 0118 3A69     	 ldr r2,[r7,#16]
 813 011a 22FA03F3 	 lsr r3,r2,r3
 814 011e 3B61     	 str r3,[r7,#16]
 192:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->frequency_tclk = frequency_module;
 815              	 .loc 2 192 0
 816 0120 7B68     	 ldr r3,[r7,#4]
 817 0122 3A69     	 ldr r2,[r7,#16]
 818 0124 1A62     	 str r2,[r3,#32]
 193:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 194:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_INITIALIZED;
 819              	 .loc 2 194 0
 820 0126 7B68     	 ldr r3,[r7,#4]
 821 0128 0122     	 movs r2,#1
 822 012a 1A77     	 strb r2,[r3,#28]
 195:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 823              	 .loc 2 195 0
 824 012c 0023     	 movs r3,#0
 825 012e FB75     	 strb r3,[r7,#23]
 196:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 197:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Start the PWM generation if start at initialization is enabled */
 198:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((bool) true == handle_ptr->config_ptr->start_control)
 826              	 .loc 2 198 0
 827 0130 7B68     	 ldr r3,[r7,#4]
 828 0132 1B68     	 ldr r3,[r3]
 829 0134 1B78     	 ldrb r3,[r3]
 830 0136 002B     	 cmp r3,#0
 831 0138 0BD0     	 beq .L26
 199:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 200:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_Start(handle_ptr);
 832              	 .loc 2 200 0
 833 013a 7868     	 ldr r0,[r7,#4]
 834 013c FFF7FEFF 	 bl PWM_CCU8_Start
 835 0140 0346     	 mov r3,r0
 836 0142 FB75     	 strb r3,[r7,#23]
 837 0144 05E0     	 b .L26
 838              	.L21:
 201:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 202:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 203:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 204:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 205:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 206:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       handle_ptr->state = PWM_CCU8_STATE_UNINITIALIZED;
 839              	 .loc 2 206 0
 840 0146 7B68     	 ldr r3,[r7,#4]
 841 0148 0022     	 movs r2,#0
 842 014a 1A77     	 strb r2,[r3,#28]
 843 014c 01E0     	 b .L26
 844              	.L20:
 207:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 208:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 209:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 210:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   else
 211:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 212:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_ALREADY_INITIALIZED;
 845              	 .loc 2 212 0
 846 014e 0223     	 movs r3,#2
 847 0150 FB75     	 strb r3,[r7,#23]
 848              	.L26:
 213:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init:PWM_CCU8_STATUS_ALREADY_INITIALIZED");
 214:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 215:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 216:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 849              	 .loc 2 216 0
 850 0152 FB7D     	 ldrb r3,[r7,#23]
 217:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Init() api */
 851              	 .loc 2 217 0
 852 0154 1846     	 mov r0,r3
 853 0156 1837     	 adds r7,r7,#24
 854              	.LCFI81:
 855              	 .cfi_def_cfa_offset 8
 856 0158 BD46     	 mov sp,r7
 857              	.LCFI82:
 858              	 .cfi_def_cfa_register 13
 859              	 
 860 015a 80BD     	 pop {r7,pc}
 861              	 .cfi_endproc
 862              	.LFE242:
 864              	 .section .text.PWM_CCU8_lInit_Interrupt,"ax",%progbits
 865              	 .align 2
 866              	 .thumb
 867              	 .thumb_func
 869              	PWM_CCU8_lInit_Interrupt:
 870              	.LFB243:
 218:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 219:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_Interrupt(PWM_CCU8_t* handle_ptr)
 220:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 871              	 .loc 2 220 0
 872              	 .cfi_startproc
 873              	 
 874              	 
 875 0000 80B5     	 push {r7,lr}
 876              	.LCFI83:
 877              	 .cfi_def_cfa_offset 8
 878              	 .cfi_offset 7,-8
 879              	 .cfi_offset 14,-4
 880 0002 82B0     	 sub sp,sp,#8
 881              	.LCFI84:
 882              	 .cfi_def_cfa_offset 16
 883 0004 00AF     	 add r7,sp,#0
 884              	.LCFI85:
 885              	 .cfi_def_cfa_register 7
 886 0006 7860     	 str r0,[r7,#4]
 221:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 222:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Enable events. Bind event to corresponding service request node. */
 223:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 224:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH,
 887              	 .loc 2 224 0
 888 0008 7B68     	 ldr r3,[r7,#4]
 889 000a 9A68     	 ldr r2,[r3,#8]
 225:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 890              	 .loc 2 225 0
 891 000c 7B68     	 ldr r3,[r7,#4]
 892 000e 1B68     	 ldr r3,[r3]
 224:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_per_match);
 893              	 .loc 2 224 0
 894 0010 5B7C     	 ldrb r3,[r3,#17]
 895 0012 1046     	 mov r0,r2
 896 0014 0021     	 movs r1,#0
 897 0016 1A46     	 mov r2,r3
 898 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 226:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 899              	 .loc 2 226 0
 900 001c 7B68     	 ldr r3,[r7,#4]
 901 001e 9A68     	 ldr r2,[r3,#8]
 227:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_up);
 902              	 .loc 2 227 0
 903 0020 7B68     	 ldr r3,[r7,#4]
 904 0022 1B68     	 ldr r3,[r3]
 226:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 905              	 .loc 2 226 0
 906 0024 9B7C     	 ldrb r3,[r3,#18]
 907 0026 1046     	 mov r0,r2
 908 0028 0221     	 movs r1,#2
 909 002a 1A46     	 mov r2,r3
 910 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 228:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 911              	 .loc 2 228 0
 912 0030 7B68     	 ldr r3,[r7,#4]
 913 0032 9A68     	 ldr r2,[r3,#8]
 229:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp1_match_down);
 914              	 .loc 2 229 0
 915 0034 7B68     	 ldr r3,[r7,#4]
 916 0036 1B68     	 ldr r3,[r3]
 228:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 917              	 .loc 2 228 0
 918 0038 DB7C     	 ldrb r3,[r3,#19]
 919 003a 1046     	 mov r0,r2
 920 003c 0321     	 movs r1,#3
 921 003e 1A46     	 mov r2,r3
 922 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 230:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 923              	 .loc 2 230 0
 924 0044 7B68     	 ldr r3,[r7,#4]
 925 0046 9A68     	 ldr r2,[r3,#8]
 231:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_up);
 926              	 .loc 2 231 0
 927 0048 7B68     	 ldr r3,[r7,#4]
 928 004a 1B68     	 ldr r3,[r3]
 230:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_U
 929              	 .loc 2 230 0
 930 004c 1B7D     	 ldrb r3,[r3,#20]
 931 004e 1046     	 mov r0,r2
 932 0050 0421     	 movs r1,#4
 933 0052 1A46     	 mov r2,r3
 934 0054 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 232:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 935              	 .loc 2 232 0
 936 0058 7B68     	 ldr r3,[r7,#4]
 937 005a 9A68     	 ldr r2,[r3,#8]
 233:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_cmp2_match_down);
 938              	 .loc 2 233 0
 939 005c 7B68     	 ldr r3,[r7,#4]
 940 005e 1B68     	 ldr r3,[r3]
 232:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_D
 941              	 .loc 2 232 0
 942 0060 5B7D     	 ldrb r3,[r3,#21]
 943 0062 1046     	 mov r0,r2
 944 0064 0521     	 movs r1,#5
 945 0066 1A46     	 mov r2,r3
 946 0068 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 234:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 947              	 .loc 2 234 0
 948 006c 7B68     	 ldr r3,[r7,#4]
 949 006e 9A68     	 ldr r2,[r3,#8]
 235:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_one_match_down);
 950              	 .loc 2 235 0
 951 0070 7B68     	 ldr r3,[r7,#4]
 952 0072 1B68     	 ldr r3,[r3]
 234:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH,
 953              	 .loc 2 234 0
 954 0074 9B7D     	 ldrb r3,[r3,#22]
 955 0076 1046     	 mov r0,r2
 956 0078 0121     	 movs r1,#1
 957 007a 1A46     	 mov r2,r3
 958 007c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 236:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 959              	 .loc 2 236 0
 960 0080 7B68     	 ldr r3,[r7,#4]
 961 0082 9A68     	 ldr r2,[r3,#8]
 237:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e0);
 962              	 .loc 2 237 0
 963 0084 7B68     	 ldr r3,[r7,#4]
 964 0086 1B68     	 ldr r3,[r3]
 236:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0,
 965              	 .loc 2 236 0
 966 0088 DB7D     	 ldrb r3,[r3,#23]
 967 008a 1046     	 mov r0,r2
 968 008c 0821     	 movs r1,#8
 969 008e 1A46     	 mov r2,r3
 970 0090 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 238:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 971              	 .loc 2 238 0
 972 0094 7B68     	 ldr r3,[r7,#4]
 973 0096 9A68     	 ldr r2,[r3,#8]
 239:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e1);
 974              	 .loc 2 239 0
 975 0098 7B68     	 ldr r3,[r7,#4]
 976 009a 1B68     	 ldr r3,[r3]
 238:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1,
 977              	 .loc 2 238 0
 978 009c 1B7E     	 ldrb r3,[r3,#24]
 979 009e 1046     	 mov r0,r2
 980 00a0 0921     	 movs r1,#9
 981 00a2 1A46     	 mov r2,r3
 982 00a4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 240:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 983              	 .loc 2 240 0
 984 00a8 7B68     	 ldr r3,[r7,#4]
 985 00aa 9A68     	 ldr r2,[r3,#8]
 241:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                   handle_ptr->config_ptr->sr_e2);
 986              	 .loc 2 241 0
 987 00ac 7B68     	 ldr r3,[r7,#4]
 988 00ae 1B68     	 ldr r3,[r3]
 240:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetInterruptNode(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2,
 989              	 .loc 2 240 0
 990 00b0 5B7E     	 ldrb r3,[r3,#25]
 991 00b2 1046     	 mov r0,r2
 992 00b4 0A21     	 movs r1,#10
 993 00b6 1A46     	 mov r2,r3
 994 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetInterruptNode
 242:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 243:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_per_match)
 995              	 .loc 2 243 0
 996 00bc 7B68     	 ldr r3,[r7,#4]
 997 00be 1B68     	 ldr r3,[r3]
 998 00c0 1B7A     	 ldrb r3,[r3,#8]
 999 00c2 002B     	 cmp r3,#0
 1000 00c4 05D0     	 beq .L29
 244:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 245:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt period match enable");
 246:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_PERIOD_MATCH);
 1001              	 .loc 2 246 0
 1002 00c6 7B68     	 ldr r3,[r7,#4]
 1003 00c8 9B68     	 ldr r3,[r3,#8]
 1004 00ca 1846     	 mov r0,r3
 1005 00cc 0021     	 movs r1,#0
 1006 00ce FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1007              	.L29:
 247:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 248:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 249:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_up)
 1008              	 .loc 2 249 0
 1009 00d2 7B68     	 ldr r3,[r7,#4]
 1010 00d4 1B68     	 ldr r3,[r3]
 1011 00d6 5B7A     	 ldrb r3,[r3,#9]
 1012 00d8 002B     	 cmp r3,#0
 1013 00da 05D0     	 beq .L30
 250:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 251:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 up enable");
 252:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1014              	 .loc 2 252 0
 1015 00dc 7B68     	 ldr r3,[r7,#4]
 1016 00de 9B68     	 ldr r3,[r3,#8]
 1017 00e0 1846     	 mov r0,r3
 1018 00e2 0221     	 movs r1,#2
 1019 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1020              	.L30:
 253:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 254:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 255:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp1_match_down)
 1021              	 .loc 2 255 0
 1022 00e8 7B68     	 ldr r3,[r7,#4]
 1023 00ea 1B68     	 ldr r3,[r3]
 1024 00ec 9B7A     	 ldrb r3,[r3,#10]
 1025 00ee 002B     	 cmp r3,#0
 1026 00f0 05D0     	 beq .L31
 256:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 257:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch1 down enable");
 258:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1027              	 .loc 2 258 0
 1028 00f2 7B68     	 ldr r3,[r7,#4]
 1029 00f4 9B68     	 ldr r3,[r3,#8]
 1030 00f6 1846     	 mov r0,r3
 1031 00f8 0321     	 movs r1,#3
 1032 00fa FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1033              	.L31:
 259:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 260:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 261:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_up)
 1034              	 .loc 2 261 0
 1035 00fe 7B68     	 ldr r3,[r7,#4]
 1036 0100 1B68     	 ldr r3,[r3]
 1037 0102 DB7A     	 ldrb r3,[r3,#11]
 1038 0104 002B     	 cmp r3,#0
 1039 0106 05D0     	 beq .L32
 262:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 263:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 up enable");
 264:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_UP_C
 1040              	 .loc 2 264 0
 1041 0108 7B68     	 ldr r3,[r7,#4]
 1042 010a 9B68     	 ldr r3,[r3,#8]
 1043 010c 1846     	 mov r0,r3
 1044 010e 0421     	 movs r1,#4
 1045 0110 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1046              	.L32:
 265:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 266:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 267:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_cmp2_match_down)
 1047              	 .loc 2 267 0
 1048 0114 7B68     	 ldr r3,[r7,#4]
 1049 0116 1B68     	 ldr r3,[r3]
 1050 0118 1B7B     	 ldrb r3,[r3,#12]
 1051 011a 002B     	 cmp r3,#0
 1052 011c 05D0     	 beq .L33
 268:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 269:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt compare match ch2 down enable");
 270:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_COMPARE_MATCH_DOWN
 1053              	 .loc 2 270 0
 1054 011e 7B68     	 ldr r3,[r7,#4]
 1055 0120 9B68     	 ldr r3,[r3,#8]
 1056 0122 1846     	 mov r0,r3
 1057 0124 0521     	 movs r1,#5
 1058 0126 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1059              	.L33:
 271:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 272:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 273:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_one_match_down)
 1060              	 .loc 2 273 0
 1061 012a 7B68     	 ldr r3,[r7,#4]
 1062 012c 1B68     	 ldr r3,[r3]
 1063 012e 5B7B     	 ldrb r3,[r3,#13]
 1064 0130 002B     	 cmp r3,#0
 1065 0132 05D0     	 beq .L34
 274:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 275:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt one match enable");
 276:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_ONE_MATCH);
 1066              	 .loc 2 276 0
 1067 0134 7B68     	 ldr r3,[r7,#4]
 1068 0136 9B68     	 ldr r3,[r3,#8]
 1069 0138 1846     	 mov r0,r3
 1070 013a 0121     	 movs r1,#1
 1071 013c FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1072              	.L34:
 277:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 278:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 279:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e0)
 1073              	 .loc 2 279 0
 1074 0140 7B68     	 ldr r3,[r7,#4]
 1075 0142 1B68     	 ldr r3,[r3]
 1076 0144 9B7B     	 ldrb r3,[r3,#14]
 1077 0146 002B     	 cmp r3,#0
 1078 0148 05D0     	 beq .L35
 280:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 281:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 0 enable");
 282:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT0);
 1079              	 .loc 2 282 0
 1080 014a 7B68     	 ldr r3,[r7,#4]
 1081 014c 9B68     	 ldr r3,[r3,#8]
 1082 014e 1846     	 mov r0,r3
 1083 0150 0821     	 movs r1,#8
 1084 0152 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1085              	.L35:
 283:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 284:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 285:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e1)
 1086              	 .loc 2 285 0
 1087 0156 7B68     	 ldr r3,[r7,#4]
 1088 0158 1B68     	 ldr r3,[r3]
 1089 015a DB7B     	 ldrb r3,[r3,#15]
 1090 015c 002B     	 cmp r3,#0
 1091 015e 05D0     	 beq .L36
 286:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 287:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 1 enable");
 288:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT1);
 1092              	 .loc 2 288 0
 1093 0160 7B68     	 ldr r3,[r7,#4]
 1094 0162 9B68     	 ldr r3,[r3,#8]
 1095 0164 1846     	 mov r0,r3
 1096 0166 0921     	 movs r1,#9
 1097 0168 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1098              	.L36:
 289:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 290:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 291:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->int_e2)
 1099              	 .loc 2 291 0
 1100 016c 7B68     	 ldr r3,[r7,#4]
 1101 016e 1B68     	 ldr r3,[r3]
 1102 0170 1B7C     	 ldrb r3,[r3,#16]
 1103 0172 002B     	 cmp r3,#0
 1104 0174 05D0     	 beq .L28
 292:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 293:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Init: Interrupt event 2 enable");
 294:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_EnableEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 1105              	 .loc 2 294 0
 1106 0176 7B68     	 ldr r3,[r7,#4]
 1107 0178 9B68     	 ldr r3,[r3,#8]
 1108 017a 1846     	 mov r0,r3
 1109 017c 0A21     	 movs r1,#10
 1110 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableEvent
 1111              	.L28:
 295:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 296:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1112              	 .loc 2 296 0
 1113 0182 0837     	 adds r7,r7,#8
 1114              	.LCFI86:
 1115              	 .cfi_def_cfa_offset 8
 1116 0184 BD46     	 mov sp,r7
 1117              	.LCFI87:
 1118              	 .cfi_def_cfa_register 13
 1119              	 
 1120 0186 80BD     	 pop {r7,pc}
 1121              	 .cfi_endproc
 1122              	.LFE243:
 1124              	 .section .text.PWM_CCU8_lInit_GPIO,"ax",%progbits
 1125              	 .align 2
 1126              	 .thumb
 1127              	 .thumb_func
 1129              	PWM_CCU8_lInit_GPIO:
 1130              	.LFB244:
 297:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lInit_GPIO(PWM_CCU8_t* handle_ptr)
 298:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1131              	 .loc 2 298 0
 1132              	 .cfi_startproc
 1133              	 
 1134              	 
 1135 0000 80B5     	 push {r7,lr}
 1136              	.LCFI88:
 1137              	 .cfi_def_cfa_offset 8
 1138              	 .cfi_offset 7,-8
 1139              	 .cfi_offset 14,-4
 1140 0002 82B0     	 sub sp,sp,#8
 1141              	.LCFI89:
 1142              	 .cfi_def_cfa_offset 16
 1143 0004 00AF     	 add r7,sp,#0
 1144              	.LCFI90:
 1145              	 .cfi_def_cfa_register 7
 1146 0006 7860     	 str r0,[r7,#4]
 299:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out0_enable)
 1147              	 .loc 2 299 0
 1148 0008 7B68     	 ldr r3,[r7,#4]
 1149 000a 1B68     	 ldr r3,[r3]
 1150 000c 93F84830 	 ldrb r3,[r3,#72]
 1151 0010 002B     	 cmp r3,#0
 1152 0012 0ED0     	 beq .L39
 300:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 301:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out0_ptr, handle_ptr->config_ptr->gpio_ch1_out0_
 1153              	 .loc 2 301 0
 1154 0014 7B68     	 ldr r3,[r7,#4]
 1155 0016 1B68     	 ldr r3,[r3]
 1156 0018 D96C     	 ldr r1,[r3,#76]
 1157 001a 7B68     	 ldr r3,[r7,#4]
 1158 001c 1B68     	 ldr r3,[r3]
 1159 001e 93F85020 	 ldrb r2,[r3,#80]
 302:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1160              	 .loc 2 302 0
 1161 0022 7B68     	 ldr r3,[r7,#4]
 1162 0024 1B68     	 ldr r3,[r3]
 301:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out0_config_ptr);
 1163              	 .loc 2 301 0
 1164 0026 5B6D     	 ldr r3,[r3,#84]
 1165 0028 0846     	 mov r0,r1
 1166 002a 1146     	 mov r1,r2
 1167 002c 1A46     	 mov r2,r3
 1168 002e FFF7FEFF 	 bl XMC_GPIO_Init
 1169              	.L39:
 303:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 304:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 305:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch1_out1_enable)
 1170              	 .loc 2 305 0
 1171 0032 7B68     	 ldr r3,[r7,#4]
 1172 0034 1B68     	 ldr r3,[r3]
 1173 0036 93F85830 	 ldrb r3,[r3,#88]
 1174 003a 002B     	 cmp r3,#0
 1175 003c 0ED0     	 beq .L40
 306:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 307:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch1_out1_ptr, handle_ptr->config_ptr->gpio_ch1_out1_
 1176              	 .loc 2 307 0
 1177 003e 7B68     	 ldr r3,[r7,#4]
 1178 0040 1B68     	 ldr r3,[r3]
 1179 0042 D96D     	 ldr r1,[r3,#92]
 1180 0044 7B68     	 ldr r3,[r7,#4]
 1181 0046 1B68     	 ldr r3,[r3]
 1182 0048 93F86020 	 ldrb r2,[r3,#96]
 308:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1183              	 .loc 2 308 0
 1184 004c 7B68     	 ldr r3,[r7,#4]
 1185 004e 1B68     	 ldr r3,[r3]
 307:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch1_out1_config_ptr);
 1186              	 .loc 2 307 0
 1187 0050 5B6E     	 ldr r3,[r3,#100]
 1188 0052 0846     	 mov r0,r1
 1189 0054 1146     	 mov r1,r2
 1190 0056 1A46     	 mov r2,r3
 1191 0058 FFF7FEFF 	 bl XMC_GPIO_Init
 1192              	.L40:
 309:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 310:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 311:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out2_enable)
 1193              	 .loc 2 311 0
 1194 005c 7B68     	 ldr r3,[r7,#4]
 1195 005e 1B68     	 ldr r3,[r3]
 1196 0060 93F86830 	 ldrb r3,[r3,#104]
 1197 0064 002B     	 cmp r3,#0
 1198 0066 0ED0     	 beq .L41
 312:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 313:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out2_ptr, handle_ptr->config_ptr->gpio_ch2_out2_
 1199              	 .loc 2 313 0
 1200 0068 7B68     	 ldr r3,[r7,#4]
 1201 006a 1B68     	 ldr r3,[r3]
 1202 006c D96E     	 ldr r1,[r3,#108]
 1203 006e 7B68     	 ldr r3,[r7,#4]
 1204 0070 1B68     	 ldr r3,[r3]
 1205 0072 93F87020 	 ldrb r2,[r3,#112]
 314:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1206              	 .loc 2 314 0
 1207 0076 7B68     	 ldr r3,[r7,#4]
 1208 0078 1B68     	 ldr r3,[r3]
 313:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out2_config_ptr);
 1209              	 .loc 2 313 0
 1210 007a 5B6F     	 ldr r3,[r3,#116]
 1211 007c 0846     	 mov r0,r1
 1212 007e 1146     	 mov r1,r2
 1213 0080 1A46     	 mov r2,r3
 1214 0082 FFF7FEFF 	 bl XMC_GPIO_Init
 1215              	.L41:
 315:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 316:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 317:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((bool) true == handle_ptr->config_ptr->gpio_ch2_out3_enable)
 1216              	 .loc 2 317 0
 1217 0086 7B68     	 ldr r3,[r7,#4]
 1218 0088 1B68     	 ldr r3,[r3]
 1219 008a 93F87830 	 ldrb r3,[r3,#120]
 1220 008e 002B     	 cmp r3,#0
 1221 0090 0FD0     	 beq .L38
 318:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 319:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_GPIO_Init(handle_ptr->config_ptr->gpio_ch2_out3_ptr, handle_ptr->config_ptr->gpio_ch2_out3_
 1222              	 .loc 2 319 0
 1223 0092 7B68     	 ldr r3,[r7,#4]
 1224 0094 1B68     	 ldr r3,[r3]
 1225 0096 D96F     	 ldr r1,[r3,#124]
 1226 0098 7B68     	 ldr r3,[r7,#4]
 1227 009a 1B68     	 ldr r3,[r3]
 1228 009c 93F88020 	 ldrb r2,[r3,#128]
 320:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1229              	 .loc 2 320 0
 1230 00a0 7B68     	 ldr r3,[r7,#4]
 1231 00a2 1B68     	 ldr r3,[r3]
 319:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                   handle_ptr->config_ptr->gpio_ch2_out3_config_ptr);
 1232              	 .loc 2 319 0
 1233 00a4 D3F88430 	 ldr r3,[r3,#132]
 1234 00a8 0846     	 mov r0,r1
 1235 00aa 1146     	 mov r1,r2
 1236 00ac 1A46     	 mov r2,r3
 1237 00ae FFF7FEFF 	 bl XMC_GPIO_Init
 1238              	.L38:
 321:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 322:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1239              	 .loc 2 322 0
 1240 00b2 0837     	 adds r7,r7,#8
 1241              	.LCFI91:
 1242              	 .cfi_def_cfa_offset 8
 1243 00b4 BD46     	 mov sp,r7
 1244              	.LCFI92:
 1245              	 .cfi_def_cfa_register 13
 1246              	 
 1247 00b6 80BD     	 pop {r7,pc}
 1248              	 .cfi_endproc
 1249              	.LFE244:
 1251              	 .section .text.PWM_CCU8_lConfigure_Events,"ax",%progbits
 1252              	 .align 2
 1253              	 .thumb
 1254              	 .thumb_func
 1256              	PWM_CCU8_lConfigure_Events:
 1257              	.LFB245:
 323:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 324:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** static void PWM_CCU8_lConfigure_Events(PWM_CCU8_t* handle_ptr)
 325:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1258              	 .loc 2 325 0
 1259              	 .cfi_startproc
 1260              	 
 1261              	 
 1262 0000 80B5     	 push {r7,lr}
 1263              	.LCFI93:
 1264              	 .cfi_def_cfa_offset 8
 1265              	 .cfi_offset 7,-8
 1266              	 .cfi_offset 14,-4
 1267 0002 84B0     	 sub sp,sp,#16
 1268              	.LCFI94:
 1269              	 .cfi_def_cfa_offset 24
 1270 0004 02AF     	 add r7,sp,#8
 1271              	.LCFI95:
 1272              	 .cfi_def_cfa 7,16
 1273 0006 7860     	 str r0,[r7,#4]
 326:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 0 */
 327:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_0,
 1274              	 .loc 2 327 0
 1275 0008 7B68     	 ldr r3,[r7,#4]
 1276 000a 9A68     	 ldr r2,[r3,#8]
 328:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1277              	 .loc 2 328 0
 1278 000c 7B68     	 ldr r3,[r7,#4]
 1279 000e 1B68     	 ldr r3,[r3]
 327:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event0_config_ptr);
 1280              	 .loc 2 327 0
 1281 0010 DB69     	 ldr r3,[r3,#28]
 1282 0012 1046     	 mov r0,r2
 1283 0014 0121     	 movs r1,#1
 1284 0016 1A46     	 mov r2,r3
 1285 0018 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 329:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 330:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 1 */
 331:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_1,
 1286              	 .loc 2 331 0
 1287 001c 7B68     	 ldr r3,[r7,#4]
 1288 001e 9A68     	 ldr r2,[r3,#8]
 332:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1289              	 .loc 2 332 0
 1290 0020 7B68     	 ldr r3,[r7,#4]
 1291 0022 1B68     	 ldr r3,[r3]
 331:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event1_config_ptr);
 1292              	 .loc 2 331 0
 1293 0024 1B6A     	 ldr r3,[r3,#32]
 1294 0026 1046     	 mov r0,r2
 1295 0028 0221     	 movs r1,#2
 1296 002a 1A46     	 mov r2,r3
 1297 002c FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 333:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 334:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Configure slice to a external event 2 */
 335:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ConfigureEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_EVENT_2,
 1298              	 .loc 2 335 0
 1299 0030 7B68     	 ldr r3,[r7,#4]
 1300 0032 9A68     	 ldr r2,[r3,#8]
 336:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1301              	 .loc 2 336 0
 1302 0034 7B68     	 ldr r3,[r7,#4]
 1303 0036 1B68     	 ldr r3,[r3]
 335:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                 handle_ptr->config_ptr->event2_config_ptr);
 1304              	 .loc 2 335 0
 1305 0038 5B6A     	 ldr r3,[r3,#36]
 1306 003a 1046     	 mov r0,r2
 1307 003c 0321     	 movs r1,#3
 1308 003e 1A46     	 mov r2,r3
 1309 0040 FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureEvent
 337:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 338:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal controls start of the timer */
 339:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_start_event)
 1310              	 .loc 2 339 0
 1311 0044 7B68     	 ldr r3,[r7,#4]
 1312 0046 1B68     	 ldr r3,[r3]
 1313 0048 93F82830 	 ldrb r3,[r3,#40]
 1314 004c 002B     	 cmp r3,#0
 1315 004e 0ED0     	 beq .L44
 340:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 341:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StartConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_start_event,
 1316              	 .loc 2 341 0
 1317 0050 7B68     	 ldr r3,[r7,#4]
 1318 0052 9968     	 ldr r1,[r3,#8]
 1319 0054 7B68     	 ldr r3,[r7,#4]
 1320 0056 1B68     	 ldr r3,[r3]
 1321 0058 93F82820 	 ldrb r2,[r3,#40]
 342:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1322              	 .loc 2 342 0
 1323 005c 7B68     	 ldr r3,[r7,#4]
 1324 005e 1B68     	 ldr r3,[r3]
 341:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                handle_ptr->config_ptr->ext_start_mode);
 1325              	 .loc 2 341 0
 1326 0060 93F82930 	 ldrb r3,[r3,#41]
 1327 0064 0846     	 mov r0,r1
 1328 0066 1146     	 mov r1,r2
 1329 0068 1A46     	 mov r2,r3
 1330 006a FFF7FEFF 	 bl XMC_CCU8_SLICE_StartConfig
 1331              	.L44:
 343:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 344:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 345:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer */
 346:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_stop_event)
 1332              	 .loc 2 346 0
 1333 006e 7B68     	 ldr r3,[r7,#4]
 1334 0070 1B68     	 ldr r3,[r3]
 1335 0072 93F82A30 	 ldrb r3,[r3,#42]
 1336 0076 002B     	 cmp r3,#0
 1337 0078 0ED0     	 beq .L45
 347:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 348:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_stop_event,
 1338              	 .loc 2 348 0
 1339 007a 7B68     	 ldr r3,[r7,#4]
 1340 007c 9968     	 ldr r1,[r3,#8]
 1341 007e 7B68     	 ldr r3,[r7,#4]
 1342 0080 1B68     	 ldr r3,[r3]
 1343 0082 93F82A20 	 ldrb r2,[r3,#42]
 349:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1344              	 .loc 2 349 0
 1345 0086 7B68     	 ldr r3,[r7,#4]
 1346 0088 1B68     	 ldr r3,[r3]
 348:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_stop_mode);
 1347              	 .loc 2 348 0
 1348 008a 93F82B30 	 ldrb r3,[r3,#43]
 1349 008e 0846     	 mov r0,r1
 1350 0090 1146     	 mov r1,r2
 1351 0092 1A46     	 mov r2,r3
 1352 0094 FFF7FEFF 	 bl XMC_CCU8_SLICE_StopConfig
 1353              	.L45:
 350:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 351:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 352:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can change the timer counting direction */
 353:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_dir_event)
 1354              	 .loc 2 353 0
 1355 0098 7B68     	 ldr r3,[r7,#4]
 1356 009a 1B68     	 ldr r3,[r3]
 1357 009c 93F82C30 	 ldrb r3,[r3,#44]
 1358 00a0 002B     	 cmp r3,#0
 1359 00a2 09D0     	 beq .L46
 354:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 355:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_DirectionConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_di
 1360              	 .loc 2 355 0
 1361 00a4 7B68     	 ldr r3,[r7,#4]
 1362 00a6 9A68     	 ldr r2,[r3,#8]
 1363 00a8 7B68     	 ldr r3,[r7,#4]
 1364 00aa 1B68     	 ldr r3,[r3]
 1365 00ac 93F82C30 	 ldrb r3,[r3,#44]
 1366 00b0 1046     	 mov r0,r2
 1367 00b2 1946     	 mov r1,r3
 1368 00b4 FFF7FEFF 	 bl XMC_CCU8_SLICE_DirectionConfig
 1369              	.L46:
 356:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 357:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal can stop the timer and the timer value remains same */
 358:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_gate_event)
 1370              	 .loc 2 358 0
 1371 00b8 7B68     	 ldr r3,[r7,#4]
 1372 00ba 1B68     	 ldr r3,[r3]
 1373 00bc 93F82D30 	 ldrb r3,[r3,#45]
 1374 00c0 002B     	 cmp r3,#0
 1375 00c2 09D0     	 beq .L47
 359:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 360:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_GateConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_gate_event);
 1376              	 .loc 2 360 0
 1377 00c4 7B68     	 ldr r3,[r7,#4]
 1378 00c6 9A68     	 ldr r2,[r3,#8]
 1379 00c8 7B68     	 ldr r3,[r7,#4]
 1380 00ca 1B68     	 ldr r3,[r3]
 1381 00cc 93F82D30 	 ldrb r3,[r3,#45]
 1382 00d0 1046     	 mov r0,r2
 1383 00d2 1946     	 mov r1,r3
 1384 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_GateConfig
 1385              	.L47:
 361:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 362:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer increments on external signal */
 363:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_count_event)
 1386              	 .loc 2 363 0
 1387 00d8 7B68     	 ldr r3,[r7,#4]
 1388 00da 1B68     	 ldr r3,[r3]
 1389 00dc 93F82E30 	 ldrb r3,[r3,#46]
 1390 00e0 002B     	 cmp r3,#0
 1391 00e2 09D0     	 beq .L48
 364:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 365:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_CountConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_count_event)
 1392              	 .loc 2 365 0
 1393 00e4 7B68     	 ldr r3,[r7,#4]
 1394 00e6 9A68     	 ldr r2,[r3,#8]
 1395 00e8 7B68     	 ldr r3,[r7,#4]
 1396 00ea 1B68     	 ldr r3,[r3]
 1397 00ec 93F82E30 	 ldrb r3,[r3,#46]
 1398 00f0 1046     	 mov r0,r2
 1399 00f2 1946     	 mov r1,r3
 1400 00f4 FFF7FEFF 	 bl XMC_CCU8_SLICE_CountConfig
 1401              	.L48:
 366:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 367:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* Timer gets loaded with compare register value or period register value on external signal */
 368:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_load_event)
 1402              	 .loc 2 368 0
 1403 00f8 7B68     	 ldr r3,[r7,#4]
 1404 00fa 1B68     	 ldr r3,[r3]
 1405 00fc 93F82F30 	 ldrb r3,[r3,#47]
 1406 0100 002B     	 cmp r3,#0
 1407 0102 13D0     	 beq .L49
 369:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 370:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_event);
 1408              	 .loc 2 370 0
 1409 0104 7B68     	 ldr r3,[r7,#4]
 1410 0106 9A68     	 ldr r2,[r3,#8]
 1411 0108 7B68     	 ldr r3,[r7,#4]
 1412 010a 1B68     	 ldr r3,[r3]
 1413 010c 93F82F30 	 ldrb r3,[r3,#47]
 1414 0110 1046     	 mov r0,r2
 1415 0112 1946     	 mov r1,r3
 1416 0114 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadConfig
 371:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_LoadSelector(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_load_select
 1417              	 .loc 2 371 0
 1418 0118 7B68     	 ldr r3,[r7,#4]
 1419 011a 9A68     	 ldr r2,[r3,#8]
 1420 011c 7B68     	 ldr r3,[r7,#4]
 1421 011e 1B68     	 ldr r3,[r3]
 1422 0120 93F83030 	 ldrb r3,[r3,#48]
 1423 0124 1046     	 mov r0,r2
 1424 0126 1946     	 mov r1,r3
 1425 0128 FFF7FEFF 	 bl XMC_CCU8_SLICE_LoadSelector
 1426              	.L49:
 372:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 373:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* External signal PWM signal (ST bit) output gets modulated by external signal */
 374:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_mod_event)
 1427              	 .loc 2 374 0
 1428 012c 7B68     	 ldr r3,[r7,#4]
 1429 012e 1B68     	 ldr r3,[r3]
 1430 0130 93F83130 	 ldrb r3,[r3,#49]
 1431 0134 002B     	 cmp r3,#0
 1432 0136 11D0     	 beq .L50
 375:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ModulationConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_mod_eve
 1433              	 .loc 2 376 0
 1434 0138 7B68     	 ldr r3,[r7,#4]
 1435 013a 9868     	 ldr r0,[r3,#8]
 1436 013c 7B68     	 ldr r3,[r7,#4]
 1437 013e 1B68     	 ldr r3,[r3]
 1438 0140 93F83110 	 ldrb r1,[r3,#49]
 377:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1439              	 .loc 2 377 0
 1440 0144 7B68     	 ldr r3,[r7,#4]
 1441 0146 1B68     	 ldr r3,[r3]
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1442              	 .loc 2 376 0
 1443 0148 93F83220 	 ldrb r2,[r3,#50]
 378:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_sync);
 1444              	 .loc 2 378 0
 1445 014c 7B68     	 ldr r3,[r7,#4]
 1446 014e 1B68     	 ldr r3,[r3]
 376:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                     handle_ptr->config_ptr->ext_mod_mode, XMC_CCU8_SLICE_MODULATION
 1447              	 .loc 2 376 0
 1448 0150 93F83330 	 ldrb r3,[r3,#51]
 1449 0154 0093     	 str r3,[sp]
 1450 0156 0323     	 movs r3,#3
 1451 0158 FFF7FEFF 	 bl XMC_CCU8_SLICE_ModulationConfig
 1452              	.L50:
 379:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 380:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 381:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   /* PWM signal (ST bit) output gets modulated by external signal */
 382:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (XMC_CCU8_SLICE_EVENT_2 == handle_ptr->config_ptr->ext_trap_event)
 1453              	 .loc 2 382 0
 1454 015c 7B68     	 ldr r3,[r7,#4]
 1455 015e 1B68     	 ldr r3,[r3]
 1456 0160 93F83730 	 ldrb r3,[r3,#55]
 1457 0164 032B     	 cmp r3,#3
 1458 0166 1AD1     	 bne .L51
 383:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 384:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_TrapConfig(handle_ptr->ccu8_slice_ptr, handle_ptr->config_ptr->ext_trap_exit,
 1459              	 .loc 2 384 0
 1460 0168 7B68     	 ldr r3,[r7,#4]
 1461 016a 9968     	 ldr r1,[r3,#8]
 1462 016c 7B68     	 ldr r3,[r7,#4]
 1463 016e 1B68     	 ldr r3,[r3]
 1464 0170 93F83920 	 ldrb r2,[r3,#57]
 385:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1465              	 .loc 2 385 0
 1466 0174 7B68     	 ldr r3,[r7,#4]
 1467 0176 1B68     	 ldr r3,[r3]
 384:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                               handle_ptr->config_ptr->ext_trap_sync);
 1468              	 .loc 2 384 0
 1469 0178 93F83830 	 ldrb r3,[r3,#56]
 1470 017c 0846     	 mov r0,r1
 1471 017e 1146     	 mov r1,r2
 1472 0180 1A46     	 mov r2,r3
 1473 0182 FFF7FEFF 	 bl XMC_CCU8_SLICE_TrapConfig
 386:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((bool) true == handle_ptr->config_ptr->ext_trap_enable)
 1474              	 .loc 2 386 0
 1475 0186 7B68     	 ldr r3,[r7,#4]
 1476 0188 1B68     	 ldr r3,[r3]
 1477 018a 93F83630 	 ldrb r3,[r3,#54]
 1478 018e 002B     	 cmp r3,#0
 1479 0190 05D0     	 beq .L51
 387:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 388:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_EnableTrap(
 1480              	 .loc 2 388 0
 1481 0192 7B68     	 ldr r3,[r7,#4]
 1482 0194 9B68     	 ldr r3,[r3,#8]
 1483 0196 1846     	 mov r0,r3
 1484 0198 0F21     	 movs r1,#15
 1485 019a FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableTrap
 1486              	.L51:
 389:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           handle_ptr->ccu8_slice_ptr,
 390:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           (uint32_t)(XMC_CCU8_SLICE_OUTPUT_0 | XMC_CCU8_SLICE_OUTPUT_1 | XMC_CCU8_SLICE_OUTPUT_2 | 
 391:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 		  );
 392:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 393:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 394:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((XMC_CCU8_SLICE_EVENT_NONE != handle_ptr->config_ptr->ext_override_edge_event) || (XMC_CCU8_S
 1487              	 .loc 2 395 0
 1488 019e 7B68     	 ldr r3,[r7,#4]
 1489 01a0 1B68     	 ldr r3,[r3]
 1490 01a2 93F83430 	 ldrb r3,[r3,#52]
 1491 01a6 002B     	 cmp r3,#0
 1492 01a8 05D1     	 bne .L52
 396:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1493              	 .loc 2 396 0 discriminator 1
 1494 01aa 7B68     	 ldr r3,[r7,#4]
 1495 01ac 1B68     	 ldr r3,[r3]
 1496 01ae 93F83530 	 ldrb r3,[r3,#53]
 395:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       != handle_ptr->config_ptr->ext_override_level_event))
 1497              	 .loc 2 395 0 discriminator 1
 1498 01b2 002B     	 cmp r3,#0
 1499 01b4 11D0     	 beq .L43
 1500              	.L52:
 397:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent(handle_ptr->ccu8_slice_ptr,
 1501              	 .loc 2 398 0
 1502 01b6 7B68     	 ldr r3,[r7,#4]
 1503 01b8 9968     	 ldr r1,[r3,#8]
 399:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1504              	 .loc 2 399 0
 1505 01ba 7B68     	 ldr r3,[r7,#4]
 1506 01bc 1B68     	 ldr r3,[r3]
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1507              	 .loc 2 398 0
 1508 01be 1A6A     	 ldr r2,[r3,#32]
 400:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event2_config_ptr);
 1509              	 .loc 2 400 0
 1510 01c0 7B68     	 ldr r3,[r7,#4]
 1511 01c2 1B68     	 ldr r3,[r3]
 398:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                    handle_ptr->config_ptr->event1_config_ptr,
 1512              	 .loc 2 398 0
 1513 01c4 5B6A     	 ldr r3,[r3,#36]
 1514 01c6 0846     	 mov r0,r1
 1515 01c8 1146     	 mov r1,r2
 1516 01ca 1A46     	 mov r2,r3
 1517 01cc FFF7FEFF 	 bl XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
 401:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StatusBitOverrideConfig(handle_ptr->ccu8_slice_ptr);
 1518              	 .loc 2 401 0
 1519 01d0 7B68     	 ldr r3,[r7,#4]
 1520 01d2 9B68     	 ldr r3,[r3,#8]
 1521 01d4 1846     	 mov r0,r3
 1522 01d6 FFF7FEFF 	 bl XMC_CCU8_SLICE_StatusBitOverrideConfig
 1523              	.L43:
 402:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 403:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 404:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }
 1524              	 .loc 2 404 0
 1525 01da 0837     	 adds r7,r7,#8
 1526              	.LCFI96:
 1527              	 .cfi_def_cfa_offset 8
 1528 01dc BD46     	 mov sp,r7
 1529              	.LCFI97:
 1530              	 .cfi_def_cfa_register 13
 1531              	 
 1532 01de 80BD     	 pop {r7,pc}
 1533              	 .cfi_endproc
 1534              	.LFE245:
 1536              	 .section .text.PWM_CCU8_Start,"ax",%progbits
 1537              	 .align 2
 1538              	 .global PWM_CCU8_Start
 1539              	 .thumb
 1540              	 .thumb_func
 1542              	PWM_CCU8_Start:
 1543              	.LFB246:
 405:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 406:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Starts the CCU8_CC8 slice. This needs to be called even if external start is configured.*/
 407:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Start(PWM_CCU8_t* handle_ptr)
 408:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1544              	 .loc 2 408 0
 1545              	 .cfi_startproc
 1546              	 
 1547              	 
 1548 0000 80B5     	 push {r7,lr}
 1549              	.LCFI98:
 1550              	 .cfi_def_cfa_offset 8
 1551              	 .cfi_offset 7,-8
 1552              	 .cfi_offset 14,-4
 1553 0002 84B0     	 sub sp,sp,#16
 1554              	.LCFI99:
 1555              	 .cfi_def_cfa_offset 24
 1556 0004 00AF     	 add r7,sp,#0
 1557              	.LCFI100:
 1558              	 .cfi_def_cfa_register 7
 1559 0006 7860     	 str r0,[r7,#4]
 409:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 410:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 411:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1560              	 .loc 2 411 0
 1561 0008 0123     	 movs r3,#1
 1562 000a FB73     	 strb r3,[r7,#15]
 412:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Start:handle_ptr NULL", (handle_ptr != NULL));
 413:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if ((PWM_CCU8_STATE_INITIALIZED == handle_ptr->state) || (PWM_CCU8_STATE_STOPPED == handle_ptr->s
 1563              	 .loc 2 413 0
 1564 000c 7B68     	 ldr r3,[r7,#4]
 1565 000e 1B7F     	 ldrb r3,[r3,#28]
 1566 0010 012B     	 cmp r3,#1
 1567 0012 03D0     	 beq .L55
 1568              	 .loc 2 413 0 is_stmt 0 discriminator 1
 1569 0014 7B68     	 ldr r3,[r7,#4]
 1570 0016 1B7F     	 ldrb r3,[r3,#28]
 1571 0018 032B     	 cmp r3,#3
 1572 001a 17D1     	 bne .L56
 1573              	.L55:
 414:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 415:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* clear IDLE mode for the slice; Start timer */
 416:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_EnableClock(handle_ptr->ccu8_module_ptr, handle_ptr->slice_number);
 1574              	 .loc 2 416 0 is_stmt 1
 1575 001c 7B68     	 ldr r3,[r7,#4]
 1576 001e 5A68     	 ldr r2,[r3,#4]
 1577 0020 7B68     	 ldr r3,[r7,#4]
 1578 0022 5B7B     	 ldrb r3,[r3,#13]
 1579 0024 1046     	 mov r0,r2
 1580 0026 1946     	 mov r1,r3
 1581 0028 FFF7FEFF 	 bl XMC_CCU8_EnableClock
 417:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 418:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (XMC_CCU8_SLICE_EVENT_NONE == handle_ptr->config_ptr->ext_start_event)
 1582              	 .loc 2 418 0
 1583 002c 7B68     	 ldr r3,[r7,#4]
 1584 002e 1B68     	 ldr r3,[r3]
 1585 0030 93F82830 	 ldrb r3,[r3,#40]
 1586 0034 002B     	 cmp r3,#0
 1587 0036 04D1     	 bne .L57
 419:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 420:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_StartTimer(handle_ptr->ccu8_slice_ptr);
 1588              	 .loc 2 420 0
 1589 0038 7B68     	 ldr r3,[r7,#4]
 1590 003a 9B68     	 ldr r3,[r3,#8]
 1591 003c 1846     	 mov r0,r3
 1592 003e FFF7FEFF 	 bl XMC_CCU8_SLICE_StartTimer
 1593              	.L57:
 421:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 422:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 423:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_RUNNING;
 1594              	 .loc 2 423 0
 1595 0042 7B68     	 ldr r3,[r7,#4]
 1596 0044 0222     	 movs r2,#2
 1597 0046 1A77     	 strb r2,[r3,#28]
 424:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1598              	 .loc 2 424 0
 1599 0048 0023     	 movs r3,#0
 1600 004a FB73     	 strb r3,[r7,#15]
 1601              	.L56:
 425:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Start:start PWM");
 426:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 427:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1602              	 .loc 2 427 0
 1603 004c FB7B     	 ldrb r3,[r7,#15]
 428:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Start() api */
 1604              	 .loc 2 428 0
 1605 004e 1846     	 mov r0,r3
 1606 0050 1037     	 adds r7,r7,#16
 1607              	.LCFI101:
 1608              	 .cfi_def_cfa_offset 8
 1609 0052 BD46     	 mov sp,r7
 1610              	.LCFI102:
 1611              	 .cfi_def_cfa_register 13
 1612              	 
 1613 0054 80BD     	 pop {r7,pc}
 1614              	 .cfi_endproc
 1615              	.LFE246:
 1617 0056 00BF     	 .section .text.PWM_CCU8_Stop,"ax",%progbits
 1618              	 .align 2
 1619              	 .global PWM_CCU8_Stop
 1620              	 .thumb
 1621              	 .thumb_func
 1623              	PWM_CCU8_Stop:
 1624              	.LFB247:
 429:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 430:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Stops the CCU8_CC8 slice. */
 431:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_Stop(PWM_CCU8_t* handle_ptr)
 432:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1625              	 .loc 2 432 0
 1626              	 .cfi_startproc
 1627              	 
 1628              	 
 1629 0000 80B5     	 push {r7,lr}
 1630              	.LCFI103:
 1631              	 .cfi_def_cfa_offset 8
 1632              	 .cfi_offset 7,-8
 1633              	 .cfi_offset 14,-4
 1634 0002 84B0     	 sub sp,sp,#16
 1635              	.LCFI104:
 1636              	 .cfi_def_cfa_offset 24
 1637 0004 00AF     	 add r7,sp,#0
 1638              	.LCFI105:
 1639              	 .cfi_def_cfa_register 7
 1640 0006 7860     	 str r0,[r7,#4]
 433:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 434:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 435:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1641              	 .loc 2 435 0
 1642 0008 0123     	 movs r3,#1
 1643 000a FB73     	 strb r3,[r7,#15]
 436:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_Stop:handle_ptr NULL", (handle_ptr != NULL));
 437:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1644              	 .loc 2 437 0
 1645 000c 7B68     	 ldr r3,[r7,#4]
 1646 000e 1B7F     	 ldrb r3,[r3,#28]
 1647 0010 002B     	 cmp r3,#0
 1648 0012 0ED0     	 beq .L60
 438:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 439:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_StopTimer(handle_ptr->ccu8_slice_ptr);
 1649              	 .loc 2 439 0
 1650 0014 7B68     	 ldr r3,[r7,#4]
 1651 0016 9B68     	 ldr r3,[r3,#8]
 1652 0018 1846     	 mov r0,r3
 1653 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_StopTimer
 440:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_CCU8_SLICE_ClearTimer(handle_ptr->ccu8_slice_ptr);
 1654              	 .loc 2 440 0
 1655 001e 7B68     	 ldr r3,[r7,#4]
 1656 0020 9B68     	 ldr r3,[r3,#8]
 1657 0022 1846     	 mov r0,r3
 1658 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearTimer
 441:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 442:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     handle_ptr->state = PWM_CCU8_STATE_STOPPED;
 1659              	 .loc 2 442 0
 1660 0028 7B68     	 ldr r3,[r7,#4]
 1661 002a 0322     	 movs r2,#3
 1662 002c 1A77     	 strb r2,[r3,#28]
 443:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     status = PWM_CCU8_STATUS_SUCCESS;
 1663              	 .loc 2 443 0
 1664 002e 0023     	 movs r3,#0
 1665 0030 FB73     	 strb r3,[r7,#15]
 1666              	.L60:
 444:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     XMC_DEBUG("PWM_CCU8_Stop:stop PWM");
 445:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 446:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1667              	 .loc 2 446 0
 1668 0032 FB7B     	 ldrb r3,[r7,#15]
 447:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 448:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_Stop() api */
 1669              	 .loc 2 448 0
 1670 0034 1846     	 mov r0,r3
 1671 0036 1037     	 adds r7,r7,#16
 1672              	.LCFI106:
 1673              	 .cfi_def_cfa_offset 8
 1674 0038 BD46     	 mov sp,r7
 1675              	.LCFI107:
 1676              	 .cfi_def_cfa_register 13
 1677              	 
 1678 003a 80BD     	 pop {r7,pc}
 1679              	 .cfi_endproc
 1680              	.LFE247:
 1682              	 .section .text.PWM_CCU8_GetTimerValue,"ax",%progbits
 1683              	 .align 2
 1684              	 .global PWM_CCU8_GetTimerValue
 1685              	 .thumb
 1686              	 .thumb_func
 1688              	PWM_CCU8_GetTimerValue:
 1689              	.LFB248:
 449:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 450:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the timer value of  CCU8_CC8 slice. */
 451:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** uint32_t PWM_CCU8_GetTimerValue(PWM_CCU8_t* handle_ptr)
 452:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1690              	 .loc 2 452 0
 1691              	 .cfi_startproc
 1692              	 
 1693              	 
 1694 0000 80B5     	 push {r7,lr}
 1695              	.LCFI108:
 1696              	 .cfi_def_cfa_offset 8
 1697              	 .cfi_offset 7,-8
 1698              	 .cfi_offset 14,-4
 1699 0002 84B0     	 sub sp,sp,#16
 1700              	.LCFI109:
 1701              	 .cfi_def_cfa_offset 24
 1702 0004 00AF     	 add r7,sp,#0
 1703              	.LCFI110:
 1704              	 .cfi_def_cfa_register 7
 1705 0006 7860     	 str r0,[r7,#4]
 453:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t timer_value;
 454:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerValue:handle_ptr NULL", (handle_ptr != NULL));
 455:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   timer_value = (uint32_t) XMC_CCU8_SLICE_GetTimerValue(handle_ptr->ccu8_slice_ptr);
 1706              	 .loc 2 455 0
 1707 0008 7B68     	 ldr r3,[r7,#4]
 1708 000a 9B68     	 ldr r3,[r3,#8]
 1709 000c 1846     	 mov r0,r3
 1710 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerValue
 1711 0012 0346     	 mov r3,r0
 1712 0014 FB60     	 str r3,[r7,#12]
 456:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_GetTimerValue:timer value");
 457:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (timer_value);
 1713              	 .loc 2 457 0
 1714 0016 FB68     	 ldr r3,[r7,#12]
 458:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_GetTimerValue() api */
 1715              	 .loc 2 458 0
 1716 0018 1846     	 mov r0,r3
 1717 001a 1037     	 adds r7,r7,#16
 1718              	.LCFI111:
 1719              	 .cfi_def_cfa_offset 8
 1720 001c BD46     	 mov sp,r7
 1721              	.LCFI112:
 1722              	 .cfi_def_cfa_register 13
 1723              	 
 1724 001e 80BD     	 pop {r7,pc}
 1725              	 .cfi_endproc
 1726              	.LFE248:
 1728              	 .section .text.PWM_CCU8_GetTimerStatus,"ax",%progbits
 1729              	 .align 2
 1730              	 .global PWM_CCU8_GetTimerStatus
 1731              	 .thumb
 1732              	 .thumb_func
 1734              	PWM_CCU8_GetTimerStatus:
 1735              	.LFB249:
 459:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 460:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the status of  CCU8_CC8 slice. */
 461:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetTimerStatus(PWM_CCU8_t* handle_ptr)
 462:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1736              	 .loc 2 462 0
 1737              	 .cfi_startproc
 1738              	 
 1739              	 
 1740 0000 80B5     	 push {r7,lr}
 1741              	.LCFI113:
 1742              	 .cfi_def_cfa_offset 8
 1743              	 .cfi_offset 7,-8
 1744              	 .cfi_offset 14,-4
 1745 0002 84B0     	 sub sp,sp,#16
 1746              	.LCFI114:
 1747              	 .cfi_def_cfa_offset 24
 1748 0004 00AF     	 add r7,sp,#0
 1749              	.LCFI115:
 1750              	 .cfi_def_cfa_register 7
 1751 0006 7860     	 str r0,[r7,#4]
 463:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status_timer;
 464:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetTimerStatus:handle_ptr NULL", (handle_ptr != NULL));
 465:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status_timer = XMC_CCU8_SLICE_IsTimerRunning(handle_ptr->ccu8_slice_ptr);
 1752              	 .loc 2 465 0
 1753 0008 7B68     	 ldr r3,[r7,#4]
 1754 000a 9B68     	 ldr r3,[r3,#8]
 1755 000c 1846     	 mov r0,r3
 1756 000e FFF7FEFF 	 bl XMC_CCU8_SLICE_IsTimerRunning
 1757 0012 0346     	 mov r3,r0
 1758 0014 FB73     	 strb r3,[r7,#15]
 466:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status_timer);
 1759              	 .loc 2 466 0
 1760 0016 FB7B     	 ldrb r3,[r7,#15]
 467:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 468:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetStatus() api */
 1761              	 .loc 2 468 0
 1762 0018 1846     	 mov r0,r3
 1763 001a 1037     	 adds r7,r7,#16
 1764              	.LCFI116:
 1765              	 .cfi_def_cfa_offset 8
 1766 001c BD46     	 mov sp,r7
 1767              	.LCFI117:
 1768              	 .cfi_def_cfa_register 13
 1769              	 
 1770 001e 80BD     	 pop {r7,pc}
 1771              	 .cfi_endproc
 1772              	.LFE249:
 1774              	 .section .text.PWM_CCU8_SetFreqSymmetric,"ax",%progbits
 1775              	 .align 2
 1776              	 .global PWM_CCU8_SetFreqSymmetric
 1777              	 .thumb
 1778              	 .thumb_func
 1780              	PWM_CCU8_SetFreqSymmetric:
 1781              	.LFB250:
 469:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 470:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 471:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Symmetric Mode. */
 472:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 473:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1782              	 .loc 2 473 0
 1783              	 .cfi_startproc
 1784              	 
 1785              	 
 1786 0000 80B5     	 push {r7,lr}
 1787              	.LCFI118:
 1788              	 .cfi_def_cfa_offset 8
 1789              	 .cfi_offset 7,-8
 1790              	 .cfi_offset 14,-4
 1791 0002 88B0     	 sub sp,sp,#32
 1792              	.LCFI119:
 1793              	 .cfi_def_cfa_offset 40
 1794 0004 00AF     	 add r7,sp,#0
 1795              	.LCFI120:
 1796              	 .cfi_def_cfa_register 7
 1797 0006 7860     	 str r0,[r7,#4]
 1798 0008 3960     	 str r1,[r7]
 474:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 475:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 476:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 477:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch1;
 478:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_ch2;
 479:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch1;
 480:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint16_t compare_ch2;
 481:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 482:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1799              	 .loc 2 482 0
 1800 000a 0123     	 movs r3,#1
 1801 000c FB77     	 strb r3,[r7,#31]
 483:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 1802              	 .loc 2 483 0
 1803 000e 0023     	 movs r3,#0
 1804 0010 7B61     	 str r3,[r7,#20]
 484:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 485:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1805              	 .loc 2 485 0
 1806 0012 7B68     	 ldr r3,[r7,#4]
 1807 0014 1B7F     	 ldrb r3,[r3,#28]
 1808 0016 002B     	 cmp r3,#0
 1809 0018 6BD0     	 beq .L67
 486:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 487:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 1810              	 .loc 2 487 0
 1811 001a 3B68     	 ldr r3,[r7]
 1812 001c 002B     	 cmp r3,#0
 1813 001e 68D0     	 beq .L67
 488:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 489:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 490:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 491:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 492:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 493:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 1814              	 .loc 2 493 0
 1815 0020 7B68     	 ldr r3,[r7,#4]
 1816 0022 1B6A     	 ldr r3,[r3,#32]
 1817 0024 7B61     	 str r3,[r7,#20]
 494:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 1818              	 .loc 2 494 0
 1819 0026 7A69     	 ldr r2,[r7,#20]
 1820 0028 3B68     	 ldr r3,[r7]
 1821 002a B2FBF3F3 	 udiv r3,r2,r3
 1822 002e BB61     	 str r3,[r7,#24]
 495:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 496:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 1823              	 .loc 2 496 0
 1824 0030 7B68     	 ldr r3,[r7,#4]
 1825 0032 1B68     	 ldr r3,[r3]
 1826 0034 5B6C     	 ldr r3,[r3,#68]
 1827 0036 1B78     	 ldrb r3,[r3]
 1828 0038 03F00103 	 and r3,r3,#1
 1829 003c DBB2     	 uxtb r3,r3
 1830 003e 002B     	 cmp r3,#0
 1831 0040 02D0     	 beq .L68
 497:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 498:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 1832              	 .loc 2 498 0
 1833 0042 BB69     	 ldr r3,[r7,#24]
 1834 0044 5B08     	 lsrs r3,r3,#1
 1835 0046 BB61     	 str r3,[r7,#24]
 1836              	.L68:
 499:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 500:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 501:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 1837              	 .loc 2 501 0
 1838 0048 BB69     	 ldr r3,[r7,#24]
 1839 004a 002B     	 cmp r3,#0
 1840 004c 51D0     	 beq .L67
 1841              	 .loc 2 501 0 is_stmt 0 discriminator 1
 1842 004e BB69     	 ldr r3,[r7,#24]
 1843 0050 B3F5803F 	 cmp r3,#65536
 1844 0054 4DD2     	 bcs .L67
 502:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 503:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 504:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = handle_ptr->sym_duty1;
 1845              	 .loc 2 504 0 is_stmt 1
 1846 0056 7B68     	 ldr r3,[r7,#4]
 1847 0058 5B6A     	 ldr r3,[r3,#36]
 1848 005a 3B61     	 str r3,[r7,#16]
 505:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = handle_ptr->sym_duty2;
 1849              	 .loc 2 505 0
 1850 005c 7B68     	 ldr r3,[r7,#4]
 1851 005e 9B6A     	 ldr r3,[r3,#40]
 1852 0060 FB60     	 str r3,[r7,#12]
 506:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 507:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1);
 1853              	 .loc 2 507 0
 1854 0062 3B69     	 ldr r3,[r7,#16]
 1855 0064 C3F51C53 	 rsb r3,r3,#9984
 1856 0068 1033     	 adds r3,r3,#16
 1857 006a 3B61     	 str r3,[r7,#16]
 508:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 * period;
 1858              	 .loc 2 508 0
 1859 006c 3B69     	 ldr r3,[r7,#16]
 1860 006e BA69     	 ldr r2,[r7,#24]
 1861 0070 02FB03F3 	 mul r3,r2,r3
 1862 0074 3B61     	 str r3,[r7,#16]
 509:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch1 = duty_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 1863              	 .loc 2 509 0
 1864 0076 3B69     	 ldr r3,[r7,#16]
 1865 0078 204A     	 ldr r2,.L70
 1866 007a A2FB0323 	 umull r2,r3,r2,r3
 1867 007e 5B0B     	 lsrs r3,r3,#13
 1868 0080 3B61     	 str r3,[r7,#16]
 510:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 511:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2);
 1869              	 .loc 2 511 0
 1870 0082 FB68     	 ldr r3,[r7,#12]
 1871 0084 C3F51C53 	 rsb r3,r3,#9984
 1872 0088 1033     	 adds r3,r3,#16
 1873 008a FB60     	 str r3,[r7,#12]
 512:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 * period;
 1874              	 .loc 2 512 0
 1875 008c FB68     	 ldr r3,[r7,#12]
 1876 008e BA69     	 ldr r2,[r7,#24]
 1877 0090 02FB03F3 	 mul r3,r2,r3
 1878 0094 FB60     	 str r3,[r7,#12]
 513:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         duty_ch2 = duty_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 1879              	 .loc 2 513 0
 1880 0096 FB68     	 ldr r3,[r7,#12]
 1881 0098 184A     	 ldr r2,.L70
 1882 009a A2FB0323 	 umull r2,r3,r2,r3
 1883 009e 5B0B     	 lsrs r3,r3,#13
 1884 00a0 FB60     	 str r3,[r7,#12]
 514:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 515:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = (uint16_t) duty_ch1;
 1885              	 .loc 2 515 0
 1886 00a2 3B69     	 ldr r3,[r7,#16]
 1887 00a4 7B81     	 strh r3,[r7,#10]
 516:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = (uint16_t) duty_ch2;
 1888              	 .loc 2 516 0
 1889 00a6 FB68     	 ldr r3,[r7,#12]
 1890 00a8 3B81     	 strh r3,[r7,#8]
 517:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 518:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 1891              	 .loc 2 518 0
 1892 00aa 7B68     	 ldr r3,[r7,#4]
 1893 00ac 9A68     	 ldr r2,[r3,#8]
 1894 00ae BB69     	 ldr r3,[r7,#24]
 1895 00b0 9BB2     	 uxth r3,r3
 1896 00b2 013B     	 subs r3,r3,#1
 1897 00b4 9BB2     	 uxth r3,r3
 1898 00b6 1046     	 mov r0,r2
 1899 00b8 1946     	 mov r1,r3
 1900 00ba FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 519:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1901              	 .loc 2 519 0
 1902 00be 7B68     	 ldr r3,[r7,#4]
 1903 00c0 9A68     	 ldr r2,[r3,#8]
 1904 00c2 7B89     	 ldrh r3,[r7,#10]
 1905 00c4 1046     	 mov r0,r2
 1906 00c6 0021     	 movs r1,#0
 1907 00c8 1A46     	 mov r2,r3
 1908 00ca FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 520:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 1909              	 .loc 2 520 0
 1910 00ce 7B68     	 ldr r3,[r7,#4]
 1911 00d0 9A68     	 ldr r2,[r3,#8]
 1912 00d2 3B89     	 ldrh r3,[r7,#8]
 1913 00d4 1046     	 mov r0,r2
 1914 00d6 0121     	 movs r1,#1
 1915 00d8 1A46     	 mov r2,r3
 1916 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 521:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 1917              	 .loc 2 521 0
 1918 00de 7B68     	 ldr r3,[r7,#4]
 1919 00e0 5A68     	 ldr r2,[r3,#4]
 1920 00e2 7B68     	 ldr r3,[r7,#4]
 1921 00e4 1B69     	 ldr r3,[r3,#16]
 1922 00e6 1046     	 mov r0,r2
 1923 00e8 1946     	 mov r1,r3
 1924 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 522:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set");
 523:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 1925              	 .loc 2 523 0
 1926 00ee 0023     	 movs r3,#0
 1927 00f0 FB77     	 strb r3,[r7,#31]
 1928              	.L67:
 524:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 525:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 526:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 527:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 1929              	 .loc 2 527 0
 1930 00f2 FB7F     	 ldrb r3,[r7,#31]
 528:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 529:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetFreqSymmetric() api */
 1931              	 .loc 2 529 0
 1932 00f4 1846     	 mov r0,r3
 1933 00f6 2037     	 adds r7,r7,#32
 1934              	.LCFI121:
 1935              	 .cfi_def_cfa_offset 8
 1936 00f8 BD46     	 mov sp,r7
 1937              	.LCFI122:
 1938              	 .cfi_def_cfa_register 13
 1939              	 
 1940 00fa 80BD     	 pop {r7,pc}
 1941              	.L71:
 1942              	 .align 2
 1943              	.L70:
 1944 00fc 5917B7D1 	 .word -776530087
 1945              	 .cfi_endproc
 1946              	.LFE250:
 1948              	 .section .text.PWM_CCU8_SetDutyCycleSymmetric,"ax",%progbits
 1949              	 .align 2
 1950              	 .global PWM_CCU8_SetDutyCycleSymmetric
 1951              	 .thumb
 1952              	 .thumb_func
 1954              	PWM_CCU8_SetDutyCycleSymmetric:
 1955              	.LFB251:
 530:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 531:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 532:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 533:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle (uint32_t) for CCU8_CC8 slice. */
 534:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHA
 535:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                  uint32_t duty_cycle)
 536:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 1956              	 .loc 2 536 0
 1957              	 .cfi_startproc
 1958              	 
 1959              	 
 1960 0000 80B5     	 push {r7,lr}
 1961              	.LCFI123:
 1962              	 .cfi_def_cfa_offset 8
 1963              	 .cfi_offset 7,-8
 1964              	 .cfi_offset 14,-4
 1965 0002 88B0     	 sub sp,sp,#32
 1966              	.LCFI124:
 1967              	 .cfi_def_cfa_offset 40
 1968 0004 00AF     	 add r7,sp,#0
 1969              	.LCFI125:
 1970              	 .cfi_def_cfa_register 7
 1971 0006 F860     	 str r0,[r7,#12]
 1972 0008 0B46     	 mov r3,r1
 1973 000a 7A60     	 str r2,[r7,#4]
 1974 000c FB72     	 strb r3,[r7,#11]
 537:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 538:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 539:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare;
 540:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 541:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 1975              	 .loc 2 541 0
 1976 000e 0123     	 movs r3,#1
 1977 0010 FB77     	 strb r3,[r7,#31]
 542:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 543:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 1978              	 .loc 2 543 0
 1979 0012 FB68     	 ldr r3,[r7,#12]
 1980 0014 1B7F     	 ldrb r3,[r3,#28]
 1981 0016 002B     	 cmp r3,#0
 1982 0018 36D0     	 beq .L73
 544:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 545:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     /* duty cycle has to be in between 0 and 100 */
 546:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((duty_cycle > PWM_CCU8_SYM_DUTY_MAX))
 1983              	 .loc 2 546 0
 1984 001a 7B68     	 ldr r3,[r7,#4]
 1985 001c 42F21072 	 movw r2,#10000
 1986 0020 9342     	 cmp r3,r2
 1987 0022 31D8     	 bhi .L73
 547:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 548:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:Cannot set duty cycle > 100%%");
 549:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 550:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 551:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 552:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr) + 1U;
 1988              	 .loc 2 552 0
 1989 0024 FB68     	 ldr r3,[r7,#12]
 1990 0026 9B68     	 ldr r3,[r3,#8]
 1991 0028 1846     	 mov r0,r3
 1992 002a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 1993 002e 0346     	 mov r3,r0
 1994 0030 0133     	 adds r3,r3,#1
 1995 0032 BB61     	 str r3,[r7,#24]
 553:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 554:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /* Duty Cycle(symmetric) = ((PR + 1)- CR) / (PR + 1) */
 555:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       compare = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 1996              	 .loc 2 555 0
 1997 0034 7B68     	 ldr r3,[r7,#4]
 1998 0036 C3F51C53 	 rsb r3,r3,#9984
 1999 003a 1033     	 adds r3,r3,#16
 2000 003c BA69     	 ldr r2,[r7,#24]
 2001 003e 02FB03F3 	 mul r3,r2,r3
 2002 0042 144A     	 ldr r2,.L77
 2003 0044 A2FB0323 	 umull r2,r3,r2,r3
 2004 0048 5B0B     	 lsrs r3,r3,#13
 2005 004a 7B61     	 str r3,[r7,#20]
 556:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 557:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, channel, (uint16_t) compare);
 2006              	 .loc 2 557 0
 2007 004c FB68     	 ldr r3,[r7,#12]
 2008 004e 9968     	 ldr r1,[r3,#8]
 2009 0050 7B69     	 ldr r3,[r7,#20]
 2010 0052 9BB2     	 uxth r3,r3
 2011 0054 FA7A     	 ldrb r2,[r7,#11]
 2012 0056 0846     	 mov r0,r1
 2013 0058 1146     	 mov r1,r2
 2014 005a 1A46     	 mov r2,r3
 2015 005c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 558:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2016              	 .loc 2 558 0
 2017 0060 FB68     	 ldr r3,[r7,#12]
 2018 0062 5A68     	 ldr r2,[r3,#4]
 2019 0064 FB68     	 ldr r3,[r7,#12]
 2020 0066 1B69     	 ldr r3,[r3,#16]
 2021 0068 1046     	 mov r0,r2
 2022 006a 1946     	 mov r1,r3
 2023 006c FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 559:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 560:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (XMC_CCU8_SLICE_COMPARE_CHANNEL_1 == channel)
 2024              	 .loc 2 560 0
 2025 0070 FB7A     	 ldrb r3,[r7,#11]
 2026 0072 002B     	 cmp r3,#0
 2027 0074 03D1     	 bne .L74
 561:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 562:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_cycle;
 2028              	 .loc 2 562 0
 2029 0076 FB68     	 ldr r3,[r7,#12]
 2030 0078 7A68     	 ldr r2,[r7,#4]
 2031 007a 5A62     	 str r2,[r3,#36]
 2032 007c 02E0     	 b .L75
 2033              	.L74:
 563:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 564:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 565:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 566:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_cycle;
 2034              	 .loc 2 566 0
 2035 007e FB68     	 ldr r3,[r7,#12]
 2036 0080 7A68     	 ldr r2,[r7,#4]
 2037 0082 9A62     	 str r2,[r3,#40]
 2038              	.L75:
 567:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 568:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 569:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetDutyCycleSymmetric:dutycycle set");
 570:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       status = PWM_CCU8_STATUS_SUCCESS;
 2039              	 .loc 2 570 0
 2040 0084 0023     	 movs r3,#0
 2041 0086 FB77     	 strb r3,[r7,#31]
 2042              	.L73:
 571:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 572:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 573:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2043              	 .loc 2 573 0
 2044 0088 FB7F     	 ldrb r3,[r7,#31]
 574:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_SetDutyCycleSymmetric() api */
 2045              	 .loc 2 574 0
 2046 008a 1846     	 mov r0,r3
 2047 008c 2037     	 adds r7,r7,#32
 2048              	.LCFI126:
 2049              	 .cfi_def_cfa_offset 8
 2050 008e BD46     	 mov sp,r7
 2051              	.LCFI127:
 2052              	 .cfi_def_cfa_register 13
 2053              	 
 2054 0090 80BD     	 pop {r7,pc}
 2055              	.L78:
 2056 0092 00BF     	 .align 2
 2057              	.L77:
 2058 0094 5917B7D1 	 .word -776530087
 2059              	 .cfi_endproc
 2060              	.LFE251:
 2062              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric,"ax",%progbits
 2063              	 .align 2
 2064              	 .global PWM_CCU8_SetFreqAndDutyCycleSymmetric
 2065              	 .thumb
 2066              	 .thumb_func
 2068              	PWM_CCU8_SetFreqAndDutyCycleSymmetric:
 2069              	.LFB252:
 575:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 576:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 577:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 578:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency and duty cycle for CCU8_CC8 slice Symmetric Mode. */
 579:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleSymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_h
 580:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                         uint32_t duty_ch2)
 581:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2070              	 .loc 2 581 0
 2071              	 .cfi_startproc
 2072              	 
 2073              	 
 2074 0000 80B5     	 push {r7,lr}
 2075              	.LCFI128:
 2076              	 .cfi_def_cfa_offset 8
 2077              	 .cfi_offset 7,-8
 2078              	 .cfi_offset 14,-4
 2079 0002 8AB0     	 sub sp,sp,#40
 2080              	.LCFI129:
 2081              	 .cfi_def_cfa_offset 48
 2082 0004 00AF     	 add r7,sp,#0
 2083              	.LCFI130:
 2084              	 .cfi_def_cfa_register 7
 2085 0006 F860     	 str r0,[r7,#12]
 2086 0008 B960     	 str r1,[r7,#8]
 2087 000a 7A60     	 str r2,[r7,#4]
 2088 000c 3B60     	 str r3,[r7]
 582:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 583:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 584:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 585:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 586:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 587:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 588:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 589:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2089              	 .loc 2 589 0
 2090 000e 0123     	 movs r3,#1
 2091 0010 87F82730 	 strb r3,[r7,#39]
 590:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2092              	 .loc 2 590 0
 2093 0014 0023     	 movs r3,#0
 2094 0016 FB61     	 str r3,[r7,#28]
 591:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleSymmetric:handle_ptr NULL", (handle_ptr != NULL));
 592:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2095              	 .loc 2 592 0
 2096 0018 FB68     	 ldr r3,[r7,#12]
 2097 001a 1B7F     	 ldrb r3,[r3,#28]
 2098 001c 002B     	 cmp r3,#0
 2099 001e 6CD0     	 beq .L80
 593:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 594:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2100              	 .loc 2 594 0
 2101 0020 BB68     	 ldr r3,[r7,#8]
 2102 0022 002B     	 cmp r3,#0
 2103 0024 69D0     	 beq .L80
 595:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 596:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:cannot set frequency 0Hz");
 597:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 598:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else if ((duty_ch1 > PWM_CCU8_SYM_DUTY_MAX) || (duty_ch2 > PWM_CCU8_SYM_DUTY_MAX))
 2104              	 .loc 2 598 0
 2105 0026 7B68     	 ldr r3,[r7,#4]
 2106 0028 42F21072 	 movw r2,#10000
 2107 002c 9342     	 cmp r3,r2
 2108 002e 64D8     	 bhi .L80
 2109              	 .loc 2 598 0 is_stmt 0 discriminator 1
 2110 0030 3B68     	 ldr r3,[r7]
 2111 0032 42F21072 	 movw r2,#10000
 2112 0036 9342     	 cmp r3,r2
 2113 0038 5FD8     	 bhi .L80
 599:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 600:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:duty > 100%%");
 601:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 602:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 603:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 604:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2114              	 .loc 2 604 0 is_stmt 1
 2115 003a FB68     	 ldr r3,[r7,#12]
 2116 003c 1B6A     	 ldr r3,[r3,#32]
 2117 003e FB61     	 str r3,[r7,#28]
 605:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2118              	 .loc 2 605 0
 2119 0040 FA69     	 ldr r2,[r7,#28]
 2120 0042 BB68     	 ldr r3,[r7,#8]
 2121 0044 B2FBF3F3 	 udiv r3,r2,r3
 2122 0048 3B62     	 str r3,[r7,#32]
 606:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 607:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2123              	 .loc 2 607 0
 2124 004a FB68     	 ldr r3,[r7,#12]
 2125 004c 1B68     	 ldr r3,[r3]
 2126 004e 5B6C     	 ldr r3,[r3,#68]
 2127 0050 1B78     	 ldrb r3,[r3]
 2128 0052 03F00103 	 and r3,r3,#1
 2129 0056 DBB2     	 uxtb r3,r3
 2130 0058 002B     	 cmp r3,#0
 2131 005a 02D0     	 beq .L81
 608:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 609:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2132              	 .loc 2 609 0
 2133 005c 3B6A     	 ldr r3,[r7,#32]
 2134 005e 5B08     	 lsrs r3,r3,#1
 2135 0060 3B62     	 str r3,[r7,#32]
 2136              	.L81:
 610:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 611:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 612:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2137              	 .loc 2 612 0
 2138 0062 3B6A     	 ldr r3,[r7,#32]
 2139 0064 002B     	 cmp r3,#0
 2140 0066 48D0     	 beq .L80
 2141              	 .loc 2 612 0 is_stmt 0 discriminator 1
 2142 0068 3B6A     	 ldr r3,[r7,#32]
 2143 006a B3F5803F 	 cmp r3,#65536
 2144 006e 44D2     	 bcs .L80
 613:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 614:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         /*Calculate the current duty cycle in no-timer concatenation mode*/
 615:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch1)) / PWM_CCU8_DUTY_FULL_SCALE)
 2145              	 .loc 2 615 0 is_stmt 1
 2146 0070 7B68     	 ldr r3,[r7,#4]
 2147 0072 C3F51C53 	 rsb r3,r3,#9984
 2148 0076 1033     	 adds r3,r3,#16
 2149 0078 3A6A     	 ldr r2,[r7,#32]
 2150 007a 02FB03F3 	 mul r3,r2,r3
 2151 007e 224A     	 ldr r2,.L83
 2152 0080 A2FB0323 	 umull r2,r3,r2,r3
 2153 0084 5B0B     	 lsrs r3,r3,#13
 2154 0086 BB61     	 str r3,[r7,#24]
 616:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (PWM_CCU8_DUTY_FULL_SCALE - duty_ch2)) / PWM_CCU8_DUTY_FULL_SCALE)
 2155              	 .loc 2 616 0
 2156 0088 3B68     	 ldr r3,[r7]
 2157 008a C3F51C53 	 rsb r3,r3,#9984
 2158 008e 1033     	 adds r3,r3,#16
 2159 0090 3A6A     	 ldr r2,[r7,#32]
 2160 0092 02FB03F3 	 mul r3,r2,r3
 2161 0096 1C4A     	 ldr r2,.L83
 2162 0098 A2FB0323 	 umull r2,r3,r2,r3
 2163 009c 5B0B     	 lsrs r3,r3,#13
 2164 009e 7B61     	 str r3,[r7,#20]
 617:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 618:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2165              	 .loc 2 618 0
 2166 00a0 FB68     	 ldr r3,[r7,#12]
 2167 00a2 9A68     	 ldr r2,[r3,#8]
 2168 00a4 3B6A     	 ldr r3,[r7,#32]
 2169 00a6 9BB2     	 uxth r3,r3
 2170 00a8 013B     	 subs r3,r3,#1
 2171 00aa 9BB2     	 uxth r3,r3
 2172 00ac 1046     	 mov r0,r2
 2173 00ae 1946     	 mov r1,r3
 2174 00b0 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 619:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2175              	 .loc 2 619 0
 2176 00b4 FB68     	 ldr r3,[r7,#12]
 2177 00b6 9A68     	 ldr r2,[r3,#8]
 2178 00b8 BB69     	 ldr r3,[r7,#24]
 2179 00ba 9BB2     	 uxth r3,r3
 2180 00bc 1046     	 mov r0,r2
 2181 00be 0021     	 movs r1,#0
 2182 00c0 1A46     	 mov r2,r3
 2183 00c2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 620:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 621:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2184              	 .loc 2 621 0
 2185 00c6 FB68     	 ldr r3,[r7,#12]
 2186 00c8 9A68     	 ldr r2,[r3,#8]
 2187 00ca 7B69     	 ldr r3,[r7,#20]
 2188 00cc 9BB2     	 uxth r3,r3
 2189 00ce 1046     	 mov r0,r2
 2190 00d0 0121     	 movs r1,#1
 2191 00d2 1A46     	 mov r2,r3
 2192 00d4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 622:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 623:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2193              	 .loc 2 623 0
 2194 00d8 FB68     	 ldr r3,[r7,#12]
 2195 00da 5A68     	 ldr r2,[r3,#4]
 2196 00dc FB68     	 ldr r3,[r7,#12]
 2197 00de 1B69     	 ldr r3,[r3,#16]
 2198 00e0 1046     	 mov r0,r2
 2199 00e2 1946     	 mov r1,r3
 2200 00e4 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 624:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 625:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty1 = duty_ch1;
 2201              	 .loc 2 625 0
 2202 00e8 FB68     	 ldr r3,[r7,#12]
 2203 00ea 7A68     	 ldr r2,[r7,#4]
 2204 00ec 5A62     	 str r2,[r3,#36]
 626:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->sym_duty2 = duty_ch2;
 2205              	 .loc 2 626 0
 2206 00ee FB68     	 ldr r3,[r7,#12]
 2207 00f0 3A68     	 ldr r2,[r7]
 2208 00f2 9A62     	 str r2,[r3,#40]
 627:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 628:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleSymmetric:frequency set");
 629:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2209              	 .loc 2 629 0
 2210 00f4 0023     	 movs r3,#0
 2211 00f6 87F82730 	 strb r3,[r7,#39]
 2212              	.L80:
 630:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 631:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 632:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 633:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2213              	 .loc 2 633 0
 2214 00fa 97F82730 	 ldrb r3,[r7,#39]
 634:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 635:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleSymmetric() api */
 2215              	 .loc 2 635 0
 2216 00fe 1846     	 mov r0,r3
 2217 0100 2837     	 adds r7,r7,#40
 2218              	.LCFI131:
 2219              	 .cfi_def_cfa_offset 8
 2220 0102 BD46     	 mov sp,r7
 2221              	.LCFI132:
 2222              	 .cfi_def_cfa_register 13
 2223              	 
 2224 0104 80BD     	 pop {r7,pc}
 2225              	.L84:
 2226 0106 00BF     	 .align 2
 2227              	.L83:
 2228 0108 5917B7D1 	 .word -776530087
 2229              	 .cfi_endproc
 2230              	.LFE252:
 2232              	 .section .text.PWM_CCU8_SetFreqAsymmetric,"ax",%progbits
 2233              	 .align 2
 2234              	 .global PWM_CCU8_SetFreqAsymmetric
 2235              	 .thumb
 2236              	 .thumb_func
 2238              	PWM_CCU8_SetFreqAsymmetric:
 2239              	.LFB253:
 636:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 637:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 638:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 639:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency for CCU8_CC8 slice Asymmetric Mode. */
 640:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_hz)
 641:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2240              	 .loc 2 641 0
 2241              	 .cfi_startproc
 2242              	 
 2243              	 
 2244 0000 80B5     	 push {r7,lr}
 2245              	.LCFI133:
 2246              	 .cfi_def_cfa_offset 8
 2247              	 .cfi_offset 7,-8
 2248              	 .cfi_offset 14,-4
 2249 0002 8AB0     	 sub sp,sp,#40
 2250              	.LCFI134:
 2251              	 .cfi_def_cfa_offset 48
 2252 0004 00AF     	 add r7,sp,#0
 2253              	.LCFI135:
 2254              	 .cfi_def_cfa_register 7
 2255 0006 7860     	 str r0,[r7,#4]
 2256 0008 3960     	 str r1,[r7]
 642:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 643:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 644:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 645:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t duty_cycle;
 646:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t shift;
 647:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 648:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 649:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 650:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2257              	 .loc 2 650 0
 2258 000a 0123     	 movs r3,#1
 2259 000c 87F82730 	 strb r3,[r7,#39]
 651:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2260              	 .loc 2 651 0
 2261 0010 0023     	 movs r3,#0
 2262 0012 3B62     	 str r3,[r7,#32]
 652:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 653:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2263              	 .loc 2 653 0
 2264 0014 7B68     	 ldr r3,[r7,#4]
 2265 0016 1B7F     	 ldrb r3,[r3,#28]
 2266 0018 002B     	 cmp r3,#0
 2267 001a 00F0AF80 	 beq .L86
 654:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 655:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2268              	 .loc 2 655 0
 2269 001e 3B68     	 ldr r3,[r7]
 2270 0020 002B     	 cmp r3,#0
 2271 0022 00F0AB80 	 beq .L86
 656:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 657:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetPwmFreq:cannot set frequency 0Hz");
 658:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 659:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 660:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 661:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2272              	 .loc 2 661 0
 2273 0026 7B68     	 ldr r3,[r7,#4]
 2274 0028 1B6A     	 ldr r3,[r3,#32]
 2275 002a 3B62     	 str r3,[r7,#32]
 662:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2276              	 .loc 2 662 0
 2277 002c 3A6A     	 ldr r2,[r7,#32]
 2278 002e 3B68     	 ldr r3,[r7]
 2279 0030 B2FBF3F3 	 udiv r3,r2,r3
 2280 0034 FB61     	 str r3,[r7,#28]
 663:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 664:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       duty_cycle = handle_ptr->asym_duty;
 2281              	 .loc 2 664 0
 2282 0036 7B68     	 ldr r3,[r7,#4]
 2283 0038 DB6A     	 ldr r3,[r3,#44]
 2284 003a BB61     	 str r3,[r7,#24]
 665:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       shift = handle_ptr->asym_shift;
 2285              	 .loc 2 665 0
 2286 003c 7B68     	 ldr r3,[r7,#4]
 2287 003e 1B6B     	 ldr r3,[r3,#48]
 2288 0040 7B61     	 str r3,[r7,#20]
 666:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 667:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2289              	 .loc 2 667 0
 2290 0042 7B68     	 ldr r3,[r7,#4]
 2291 0044 1B68     	 ldr r3,[r3]
 2292 0046 5B6C     	 ldr r3,[r3,#68]
 2293 0048 1B78     	 ldrb r3,[r3]
 2294 004a 03F00103 	 and r3,r3,#1
 2295 004e DBB2     	 uxtb r3,r3
 2296 0050 002B     	 cmp r3,#0
 2297 0052 50D0     	 beq .L87
 668:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 669:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = period >> 1U;/*divide by 2*/
 2298              	 .loc 2 669 0
 2299 0054 FB69     	 ldr r3,[r7,#28]
 2300 0056 5B08     	 lsrs r3,r3,#1
 2301 0058 FB61     	 str r3,[r7,#28]
 670:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 671:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2302              	 .loc 2 671 0
 2303 005a FB69     	 ldr r3,[r7,#28]
 2304 005c 002B     	 cmp r3,#0
 2305 005e 00F08D80 	 beq .L86
 2306              	 .loc 2 671 0 is_stmt 0 discriminator 1
 2307 0062 FB69     	 ldr r3,[r7,#28]
 2308 0064 B3F5803F 	 cmp r3,#65536
 2309 0068 80F08880 	 bcs .L86
 672:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 673:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = (2U * period * shift);
 2310              	 .loc 2 673 0 is_stmt 1
 2311 006c FB69     	 ldr r3,[r7,#28]
 2312 006e 7A69     	 ldr r2,[r7,#20]
 2313 0070 02FB03F3 	 mul r3,r2,r3
 2314 0074 5B00     	 lsls r3,r3,#1
 2315 0076 3B61     	 str r3,[r7,#16]
 674:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2316              	 .loc 2 674 0
 2317 0078 3B69     	 ldr r3,[r7,#16]
 2318 007a 434A     	 ldr r2,.L90
 2319 007c A2FB0323 	 umull r2,r3,r2,r3
 2320 0080 5B0B     	 lsrs r3,r3,#13
 2321 0082 3B61     	 str r3,[r7,#16]
 675:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = (2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle)));
 2322              	 .loc 2 675 0
 2323 0084 7A69     	 ldr r2,[r7,#20]
 2324 0086 BB69     	 ldr r3,[r7,#24]
 2325 0088 1344     	 add r3,r3,r2
 2326 008a C3F51C53 	 rsb r3,r3,#9984
 2327 008e 1033     	 adds r3,r3,#16
 2328 0090 FA69     	 ldr r2,[r7,#28]
 2329 0092 02FB03F3 	 mul r3,r2,r3
 2330 0096 5B00     	 lsls r3,r3,#1
 2331 0098 FB60     	 str r3,[r7,#12]
 676:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2332              	 .loc 2 676 0
 2333 009a FB68     	 ldr r3,[r7,#12]
 2334 009c 3A4A     	 ldr r2,.L90
 2335 009e A2FB0323 	 umull r2,r3,r2,r3
 2336 00a2 5B0B     	 lsrs r3,r3,#13
 2337 00a4 FB60     	 str r3,[r7,#12]
 677:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 678:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2338              	 .loc 2 678 0
 2339 00a6 7B68     	 ldr r3,[r7,#4]
 2340 00a8 9A68     	 ldr r2,[r3,#8]
 2341 00aa FB69     	 ldr r3,[r7,#28]
 2342 00ac 9BB2     	 uxth r3,r3
 2343 00ae 013B     	 subs r3,r3,#1
 2344 00b0 9BB2     	 uxth r3,r3
 2345 00b2 1046     	 mov r0,r2
 2346 00b4 1946     	 mov r1,r3
 2347 00b6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 679:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2348              	 .loc 2 679 0
 2349 00ba 7B68     	 ldr r3,[r7,#4]
 2350 00bc 9A68     	 ldr r2,[r3,#8]
 2351 00be 3B69     	 ldr r3,[r7,#16]
 2352 00c0 9BB2     	 uxth r3,r3
 2353 00c2 1046     	 mov r0,r2
 2354 00c4 0021     	 movs r1,#0
 2355 00c6 1A46     	 mov r2,r3
 2356 00c8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 680:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 681:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2357              	 .loc 2 681 0
 2358 00cc 7B68     	 ldr r3,[r7,#4]
 2359 00ce 9A68     	 ldr r2,[r3,#8]
 2360 00d0 FB68     	 ldr r3,[r7,#12]
 2361 00d2 9BB2     	 uxth r3,r3
 2362 00d4 1046     	 mov r0,r2
 2363 00d6 0121     	 movs r1,#1
 2364 00d8 1A46     	 mov r2,r3
 2365 00da FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 682:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 683:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2366              	 .loc 2 683 0
 2367 00de 7B68     	 ldr r3,[r7,#4]
 2368 00e0 5A68     	 ldr r2,[r3,#4]
 2369 00e2 7B68     	 ldr r3,[r7,#4]
 2370 00e4 1B69     	 ldr r3,[r3,#16]
 2371 00e6 1046     	 mov r0,r2
 2372 00e8 1946     	 mov r1,r3
 2373 00ea FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 684:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set center aligned mode");
 685:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2374              	 .loc 2 685 0
 2375 00ee 0023     	 movs r3,#0
 2376 00f0 87F82730 	 strb r3,[r7,#39]
 2377 00f4 42E0     	 b .L86
 2378              	.L87:
 686:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 687:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 688:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 689:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 690:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2379              	 .loc 2 690 0
 2380 00f6 FB69     	 ldr r3,[r7,#28]
 2381 00f8 B3F5803F 	 cmp r3,#65536
 2382 00fc 3ED2     	 bcs .L86
 691:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 692:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = period * shift;
 2383              	 .loc 2 692 0
 2384 00fe FB69     	 ldr r3,[r7,#28]
 2385 0100 7A69     	 ldr r2,[r7,#20]
 2386 0102 02FB03F3 	 mul r3,r2,r3
 2387 0106 3B61     	 str r3,[r7,#16]
 693:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch1 = compare_ch1 / PWM_CCU8_DUTY_FULL_SCALE;
 2388              	 .loc 2 693 0
 2389 0108 3B69     	 ldr r3,[r7,#16]
 2390 010a 1F4A     	 ldr r2,.L90
 2391 010c A2FB0323 	 umull r2,r3,r2,r3
 2392 0110 5B0B     	 lsrs r3,r3,#13
 2393 0112 3B61     	 str r3,[r7,#16]
 694:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = period * (shift + duty_cycle);
 2394              	 .loc 2 694 0
 2395 0114 7A69     	 ldr r2,[r7,#20]
 2396 0116 BB69     	 ldr r3,[r7,#24]
 2397 0118 1344     	 add r3,r3,r2
 2398 011a FA69     	 ldr r2,[r7,#28]
 2399 011c 02FB03F3 	 mul r3,r2,r3
 2400 0120 FB60     	 str r3,[r7,#12]
 695:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           compare_ch2 = compare_ch2 / PWM_CCU8_DUTY_FULL_SCALE;
 2401              	 .loc 2 695 0
 2402 0122 FB68     	 ldr r3,[r7,#12]
 2403 0124 184A     	 ldr r2,.L90
 2404 0126 A2FB0323 	 umull r2,r3,r2,r3
 2405 012a 5B0B     	 lsrs r3,r3,#13
 2406 012c FB60     	 str r3,[r7,#12]
 696:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 697:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U));
 2407              	 .loc 2 697 0
 2408 012e 7B68     	 ldr r3,[r7,#4]
 2409 0130 9A68     	 ldr r2,[r3,#8]
 2410 0132 FB69     	 ldr r3,[r7,#28]
 2411 0134 9BB2     	 uxth r3,r3
 2412 0136 013B     	 subs r3,r3,#1
 2413 0138 9BB2     	 uxth r3,r3
 2414 013a 1046     	 mov r0,r2
 2415 013c 1946     	 mov r1,r3
 2416 013e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 698:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2417              	 .loc 2 698 0
 2418 0142 7B68     	 ldr r3,[r7,#4]
 2419 0144 9A68     	 ldr r2,[r3,#8]
 2420 0146 3B69     	 ldr r3,[r7,#16]
 2421 0148 9BB2     	 uxth r3,r3
 2422 014a 1046     	 mov r0,r2
 2423 014c 0021     	 movs r1,#0
 2424 014e 1A46     	 mov r2,r3
 2425 0150 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 699:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch1);
 700:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CH
 2426              	 .loc 2 700 0
 2427 0154 7B68     	 ldr r3,[r7,#4]
 2428 0156 9A68     	 ldr r2,[r3,#8]
 2429 0158 FB68     	 ldr r3,[r7,#12]
 2430 015a 9BB2     	 uxth r3,r3
 2431 015c 1046     	 mov r0,r2
 2432 015e 0121     	 movs r1,#1
 2433 0160 1A46     	 mov r2,r3
 2434 0162 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 701:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                               (uint16_t) compare_ch2);
 702:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2435              	 .loc 2 702 0
 2436 0166 7B68     	 ldr r3,[r7,#4]
 2437 0168 5A68     	 ldr r2,[r3,#4]
 2438 016a 7B68     	 ldr r3,[r7,#4]
 2439 016c 1B69     	 ldr r3,[r3,#16]
 2440 016e 1046     	 mov r0,r2
 2441 0170 1946     	 mov r1,r3
 2442 0172 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 703:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetPwmFreq:frequency set edge aligned mode");
 704:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           status = PWM_CCU8_STATUS_SUCCESS;
 2443              	 .loc 2 704 0
 2444 0176 0023     	 movs r3,#0
 2445 0178 87F82730 	 strb r3,[r7,#39]
 2446              	.L86:
 705:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 706:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 707:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 708:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 709:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2447              	 .loc 2 709 0
 2448 017c 97F82730 	 ldrb r3,[r7,#39]
 710:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAsymmetric() api */
 2449              	 .loc 2 710 0
 2450 0180 1846     	 mov r0,r3
 2451 0182 2837     	 adds r7,r7,#40
 2452              	.LCFI136:
 2453              	 .cfi_def_cfa_offset 8
 2454 0184 BD46     	 mov sp,r7
 2455              	.LCFI137:
 2456              	 .cfi_def_cfa_register 13
 2457              	 
 2458 0186 80BD     	 pop {r7,pc}
 2459              	.L91:
 2460              	 .align 2
 2461              	.L90:
 2462 0188 5917B7D1 	 .word -776530087
 2463              	 .cfi_endproc
 2464              	.LFE253:
 2466              	 .section .text.PWM_CCU8_SetDutyCycleAsymmetric,"ax",%progbits
 2467              	 .align 2
 2468              	 .global PWM_CCU8_SetDutyCycleAsymmetric
 2469              	 .thumb
 2470              	 .thumb_func
 2472              	PWM_CCU8_SetDutyCycleAsymmetric:
 2473              	.LFB254:
 711:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 712:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 713:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 714:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the duty cycle and shift (uint32_t) for CCU8_CC8 slice in Asymmetric mode. */
 715:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*(shift + duty_cycle <= 100)  and (shift + duty_cycle >= 50) */
 716:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t shift, uint32_t 
 717:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2474              	 .loc 2 717 0
 2475              	 .cfi_startproc
 2476              	 
 2477              	 
 2478 0000 80B5     	 push {r7,lr}
 2479              	.LCFI138:
 2480              	 .cfi_def_cfa_offset 8
 2481              	 .cfi_offset 7,-8
 2482              	 .cfi_offset 14,-4
 2483 0002 88B0     	 sub sp,sp,#32
 2484              	.LCFI139:
 2485              	 .cfi_def_cfa_offset 40
 2486 0004 00AF     	 add r7,sp,#0
 2487              	.LCFI140:
 2488              	 .cfi_def_cfa_register 7
 2489 0006 F860     	 str r0,[r7,#12]
 2490 0008 B960     	 str r1,[r7,#8]
 2491 000a 7A60     	 str r2,[r7,#4]
 718:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 719:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 720:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 721:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 722:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 723:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2492              	 .loc 2 723 0
 2493 000c 0123     	 movs r3,#1
 2494 000e FB77     	 strb r3,[r7,#31]
 724:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 725:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2495              	 .loc 2 725 0
 2496 0010 FB68     	 ldr r3,[r7,#12]
 2497 0012 1B7F     	 ldrb r3,[r3,#28]
 2498 0014 002B     	 cmp r3,#0
 2499 0016 00F0A680 	 beq .L93
 726:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 727:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_tim
 2500              	 .loc 2 727 0
 2501 001a FB68     	 ldr r3,[r7,#12]
 2502 001c 1B68     	 ldr r3,[r3]
 2503 001e 5B6C     	 ldr r3,[r3,#68]
 2504 0020 1B78     	 ldrb r3,[r3]
 2505 0022 03F00103 	 and r3,r3,#1
 2506 0026 DBB2     	 uxtb r3,r3
 2507 0028 002B     	 cmp r3,#0
 2508 002a 58D0     	 beq .L94
 728:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 729:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*center aligned mode*/
 730:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_CA
 2509              	 .loc 2 730 0
 2510 002c BA68     	 ldr r2,[r7,#8]
 2511 002e 7B68     	 ldr r3,[r7,#4]
 2512 0030 1344     	 add r3,r3,r2
 2513 0032 42F21072 	 movw r2,#10000
 2514 0036 9342     	 cmp r3,r2
 2515 0038 00F29580 	 bhi .L93
 2516              	 .loc 2 730 0 is_stmt 0 discriminator 1
 2517 003c BA68     	 ldr r2,[r7,#8]
 2518 003e 7B68     	 ldr r3,[r7,#4]
 2519 0040 1344     	 add r3,r3,r2
 2520 0042 41F28732 	 movw r2,#4999
 2521 0046 9342     	 cmp r3,r2
 2522 0048 40F28D80 	 bls .L93
 731:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 732:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50%% < (shift + d
 733:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 734:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2523              	 .loc 2 734 0 is_stmt 1
 2524 004c BB68     	 ldr r3,[r7,#8]
 2525 004e 41F28732 	 movw r2,#4999
 2526 0052 9342     	 cmp r3,r2
 2527 0054 00F28780 	 bhi .L93
 735:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 736:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%%");
 737:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 738:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 739:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 740:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2528              	 .loc 2 740 0
 2529 0058 FB68     	 ldr r3,[r7,#12]
 2530 005a 9B68     	 ldr r3,[r3,#8]
 2531 005c 1846     	 mov r0,r3
 2532 005e FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2533 0062 0346     	 mov r3,r0
 2534 0064 BB61     	 str r3,[r7,#24]
 741:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 742:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2535              	 .loc 2 742 0
 2536 0066 BB69     	 ldr r3,[r7,#24]
 2537 0068 BA68     	 ldr r2,[r7,#8]
 2538 006a 02FB03F3 	 mul r3,r2,r3
 2539 006e 5B00     	 lsls r3,r3,#1
 2540 0070 3F4A     	 ldr r2,.L97
 2541 0072 A2FB0323 	 umull r2,r3,r2,r3
 2542 0076 5B0B     	 lsrs r3,r3,#13
 2543 0078 7B61     	 str r3,[r7,#20]
 743:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8
 2544              	 .loc 2 743 0
 2545 007a BA68     	 ldr r2,[r7,#8]
 2546 007c 7B68     	 ldr r3,[r7,#4]
 2547 007e 1344     	 add r3,r3,r2
 2548 0080 C3F51C53 	 rsb r3,r3,#9984
 2549 0084 1033     	 adds r3,r3,#16
 2550 0086 BA69     	 ldr r2,[r7,#24]
 2551 0088 02FB03F3 	 mul r3,r2,r3
 2552 008c 5B00     	 lsls r3,r3,#1
 2553 008e 384A     	 ldr r2,.L97
 2554 0090 A2FB0323 	 umull r2,r3,r2,r3
 2555 0094 5B0B     	 lsrs r3,r3,#13
 2556 0096 3B61     	 str r3,[r7,#16]
 744:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 745:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2557              	 .loc 2 745 0
 2558 0098 FB68     	 ldr r3,[r7,#12]
 2559 009a 9A68     	 ldr r2,[r3,#8]
 2560 009c 7B69     	 ldr r3,[r7,#20]
 2561 009e 9BB2     	 uxth r3,r3
 2562 00a0 1046     	 mov r0,r2
 2563 00a2 0021     	 movs r1,#0
 2564 00a4 1A46     	 mov r2,r3
 2565 00a6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 746:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 747:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2566              	 .loc 2 747 0
 2567 00aa FB68     	 ldr r3,[r7,#12]
 2568 00ac 9A68     	 ldr r2,[r3,#8]
 2569 00ae 3B69     	 ldr r3,[r7,#16]
 2570 00b0 9BB2     	 uxth r3,r3
 2571 00b2 1046     	 mov r0,r2
 2572 00b4 0121     	 movs r1,#1
 2573 00b6 1A46     	 mov r2,r3
 2574 00b8 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 748:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 749:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2575              	 .loc 2 749 0
 2576 00bc FB68     	 ldr r3,[r7,#12]
 2577 00be 5A68     	 ldr r2,[r3,#4]
 2578 00c0 FB68     	 ldr r3,[r7,#12]
 2579 00c2 1B69     	 ldr r3,[r3,#16]
 2580 00c4 1046     	 mov r0,r2
 2581 00c6 1946     	 mov r1,r3
 2582 00c8 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 750:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 751:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2583              	 .loc 2 751 0
 2584 00cc FB68     	 ldr r3,[r7,#12]
 2585 00ce 7A68     	 ldr r2,[r7,#4]
 2586 00d0 DA62     	 str r2,[r3,#44]
 752:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2587              	 .loc 2 752 0
 2588 00d2 FB68     	 ldr r3,[r7,#12]
 2589 00d4 BA68     	 ldr r2,[r7,#8]
 2590 00d6 1A63     	 str r2,[r3,#48]
 753:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 754:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set center aligned mode");
 755:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2591              	 .loc 2 755 0
 2592 00d8 0023     	 movs r3,#0
 2593 00da FB77     	 strb r3,[r7,#31]
 2594 00dc 43E0     	 b .L93
 2595              	.L94:
 756:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 757:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 758:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 759:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 760:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 761:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       /*edge aligned mode*/
 762:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2596              	 .loc 2 762 0
 2597 00de BA68     	 ldr r2,[r7,#8]
 2598 00e0 7B68     	 ldr r3,[r7,#4]
 2599 00e2 1344     	 add r3,r3,r2
 2600 00e4 42F21072 	 movw r2,#10000
 2601 00e8 9342     	 cmp r3,r2
 2602 00ea 3CD8     	 bhi .L93
 763:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 764:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_cycle
 765:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 766:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 767:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 768:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         period = (uint32_t) XMC_CCU8_SLICE_GetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr);
 2603              	 .loc 2 768 0
 2604 00ec FB68     	 ldr r3,[r7,#12]
 2605 00ee 9B68     	 ldr r3,[r3,#8]
 2606 00f0 1846     	 mov r0,r3
 2607 00f2 FFF7FEFF 	 bl XMC_CCU8_SLICE_GetTimerPeriodMatch
 2608 00f6 0346     	 mov r3,r0
 2609 00f8 BB61     	 str r3,[r7,#24]
 769:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 770:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2610              	 .loc 2 770 0
 2611 00fa BB69     	 ldr r3,[r7,#24]
 2612 00fc BA68     	 ldr r2,[r7,#8]
 2613 00fe 02FB03F3 	 mul r3,r2,r3
 2614 0102 1B4A     	 ldr r2,.L97
 2615 0104 A2FB0323 	 umull r2,r3,r2,r3
 2616 0108 5B0B     	 lsrs r3,r3,#13
 2617 010a 7B61     	 str r3,[r7,#20]
 771:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2618              	 .loc 2 771 0
 2619 010c BA68     	 ldr r2,[r7,#8]
 2620 010e 7B68     	 ldr r3,[r7,#4]
 2621 0110 1344     	 add r3,r3,r2
 2622 0112 BA69     	 ldr r2,[r7,#24]
 2623 0114 02FB03F3 	 mul r3,r2,r3
 2624 0118 154A     	 ldr r2,.L97
 2625 011a A2FB0323 	 umull r2,r3,r2,r3
 2626 011e 5B0B     	 lsrs r3,r3,#13
 2627 0120 3B61     	 str r3,[r7,#16]
 772:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 773:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2628              	 .loc 2 773 0
 2629 0122 FB68     	 ldr r3,[r7,#12]
 2630 0124 9A68     	 ldr r2,[r3,#8]
 2631 0126 7B69     	 ldr r3,[r7,#20]
 2632 0128 9BB2     	 uxth r3,r3
 2633 012a 1046     	 mov r0,r2
 2634 012c 0021     	 movs r1,#0
 2635 012e 1A46     	 mov r2,r3
 2636 0130 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 774:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch1);
 775:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_CHAN
 2637              	 .loc 2 775 0
 2638 0134 FB68     	 ldr r3,[r7,#12]
 2639 0136 9A68     	 ldr r2,[r3,#8]
 2640 0138 3B69     	 ldr r3,[r7,#16]
 2641 013a 9BB2     	 uxth r3,r3
 2642 013c 1046     	 mov r0,r2
 2643 013e 0121     	 movs r1,#1
 2644 0140 1A46     	 mov r2,r3
 2645 0142 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 776:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                             (uint16_t) compare_ch2);
 777:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk);
 2646              	 .loc 2 777 0
 2647 0146 FB68     	 ldr r3,[r7,#12]
 2648 0148 5A68     	 ldr r2,[r3,#4]
 2649 014a FB68     	 ldr r3,[r7,#12]
 2650 014c 1B69     	 ldr r3,[r3,#16]
 2651 014e 1046     	 mov r0,r2
 2652 0150 1946     	 mov r1,r3
 2653 0152 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 778:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 779:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_duty = duty_cycle;
 2654              	 .loc 2 779 0
 2655 0156 FB68     	 ldr r3,[r7,#12]
 2656 0158 7A68     	 ldr r2,[r7,#4]
 2657 015a DA62     	 str r2,[r3,#44]
 780:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         handle_ptr->asym_shift = shift;
 2658              	 .loc 2 780 0
 2659 015c FB68     	 ldr r3,[r7,#12]
 2660 015e BA68     	 ldr r2,[r7,#8]
 2661 0160 1A63     	 str r2,[r3,#48]
 781:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 782:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:dutycycle set edge aligned mode");
 783:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         status = PWM_CCU8_STATUS_SUCCESS;
 2662              	 .loc 2 783 0
 2663 0162 0023     	 movs r3,#0
 2664 0164 FB77     	 strb r3,[r7,#31]
 2665              	.L93:
 784:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 785:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 786:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 787:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2666              	 .loc 2 787 0
 2667 0166 FB7F     	 ldrb r3,[r7,#31]
 788:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDutyCycleAsymmetric() api */
 2668              	 .loc 2 788 0
 2669 0168 1846     	 mov r0,r3
 2670 016a 2037     	 adds r7,r7,#32
 2671              	.LCFI141:
 2672              	 .cfi_def_cfa_offset 8
 2673 016c BD46     	 mov sp,r7
 2674              	.LCFI142:
 2675              	 .cfi_def_cfa_register 13
 2676              	 
 2677 016e 80BD     	 pop {r7,pc}
 2678              	.L98:
 2679              	 .align 2
 2680              	.L97:
 2681 0170 5917B7D1 	 .word -776530087
 2682              	 .cfi_endproc
 2683              	.LFE254:
 2685              	 .section .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric,"ax",%progbits
 2686              	 .align 2
 2687              	 .global PWM_CCU8_SetFreqAndDutyCycleAsymmetric
 2688              	 .thumb
 2689              	 .thumb_func
 2691              	PWM_CCU8_SetFreqAndDutyCycleAsymmetric:
 2692              	.LFB255:
 789:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 790:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 791:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 792:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the frequency, (uint32_t)shift and (uint32_t)duty cycle for CCU8_CC8 slice Asymmetric Mode. 
 793:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** PWM_CCU8_STATUS_t PWM_CCU8_SetFreqAndDutyCycleAsymmetric(PWM_CCU8_t* handle_ptr, uint32_t pwm_freq_
 794:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                          uint32_t duty_cycle)
 795:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2693              	 .loc 2 795 0
 2694              	 .cfi_startproc
 2695              	 
 2696              	 
 2697 0000 80B5     	 push {r7,lr}
 2698              	.LCFI143:
 2699              	 .cfi_def_cfa_offset 8
 2700              	 .cfi_offset 7,-8
 2701              	 .cfi_offset 14,-4
 2702 0002 8AB0     	 sub sp,sp,#40
 2703              	.LCFI144:
 2704              	 .cfi_def_cfa_offset 48
 2705 0004 00AF     	 add r7,sp,#0
 2706              	.LCFI145:
 2707              	 .cfi_def_cfa_register 7
 2708 0006 F860     	 str r0,[r7,#12]
 2709 0008 B960     	 str r1,[r7,#8]
 2710 000a 7A60     	 str r2,[r7,#4]
 2711 000c 3B60     	 str r3,[r7]
 796:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   PWM_CCU8_STATUS_t status;
 797:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t frequency_tclk;
 798:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t period;
 799:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch1;
 800:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   uint32_t compare_ch2;
 801:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 802:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = PWM_CCU8_STATUS_FAILURE;
 2712              	 .loc 2 802 0
 2713 000e 0123     	 movs r3,#1
 2714 0010 87F82730 	 strb r3,[r7,#39]
 803:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   frequency_tclk = 0U;
 2715              	 .loc 2 803 0
 2716 0014 0023     	 movs r3,#0
 2717 0016 3B62     	 str r3,[r7,#32]
 804:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:handle_ptr NULL", (handle_ptr != NULL));
 805:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   if (PWM_CCU8_STATE_UNINITIALIZED != handle_ptr->state)
 2718              	 .loc 2 805 0
 2719 0018 FB68     	 ldr r3,[r7,#12]
 2720 001a 1B7F     	 ldrb r3,[r3,#28]
 2721 001c 002B     	 cmp r3,#0
 2722 001e 00F0CA80 	 beq .L100
 806:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   {
 807:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     if (0U == pwm_freq_hz)
 2723              	 .loc 2 807 0
 2724 0022 BB68     	 ldr r3,[r7,#8]
 2725 0024 002B     	 cmp r3,#0
 2726 0026 00F0C680 	 beq .L100
 808:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 809:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:cannot set frequency 0Hz");
 810:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 811:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     else
 812:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     {
 813:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       frequency_tclk = handle_ptr->frequency_tclk;
 2727              	 .loc 2 813 0
 2728 002a FB68     	 ldr r3,[r7,#12]
 2729 002c 1B6A     	 ldr r3,[r3,#32]
 2730 002e 3B62     	 str r3,[r7,#32]
 814:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       period = frequency_tclk / pwm_freq_hz;
 2731              	 .loc 2 814 0
 2732 0030 3A6A     	 ldr r2,[r7,#32]
 2733 0032 BB68     	 ldr r3,[r7,#8]
 2734 0034 B2FBF3F3 	 udiv r3,r2,r3
 2735 0038 FB61     	 str r3,[r7,#28]
 815:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 816:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       if ((uint32_t) XMC_CCU8_SLICE_TIMER_COUNT_MODE_CA == handle_ptr->config_ptr->ccu8_cc8_slice_t
 2736              	 .loc 2 816 0
 2737 003a FB68     	 ldr r3,[r7,#12]
 2738 003c 1B68     	 ldr r3,[r3]
 2739 003e 5B6C     	 ldr r3,[r3,#68]
 2740 0040 1B78     	 ldrb r3,[r3]
 2741 0042 03F00103 	 and r3,r3,#1
 2742 0046 DBB2     	 uxtb r3,r3
 2743 0048 002B     	 cmp r3,#0
 2744 004a 68D0     	 beq .L101
 817:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 818:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (((shift + duty_cycle) > PWM_CCU8_ASYM_CA_MAX) || ((shift + duty_cycle) < PWM_CCU8_ASYM_
 2745              	 .loc 2 818 0
 2746 004c 7A68     	 ldr r2,[r7,#4]
 2747 004e 3B68     	 ldr r3,[r7]
 2748 0050 1344     	 add r3,r3,r2
 2749 0052 42F21072 	 movw r2,#10000
 2750 0056 9342     	 cmp r3,r2
 2751 0058 00F2AD80 	 bhi .L100
 2752              	 .loc 2 818 0 is_stmt 0 discriminator 1
 2753 005c 7A68     	 ldr r2,[r7,#4]
 2754 005e 3B68     	 ldr r3,[r7]
 2755 0060 1344     	 add r3,r3,r2
 2756 0062 41F28732 	 movw r2,#4999
 2757 0066 9342     	 cmp r3,r2
 2758 0068 40F2A580 	 bls .L100
 819:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 820:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode 50%% < (shift +
 821:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 822:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else if (shift >= PWM_CCU8_ASYM_CA_SHIFT_MAX)
 2759              	 .loc 2 822 0 is_stmt 1
 2760 006c 7B68     	 ldr r3,[r7,#4]
 2761 006e 41F28732 	 movw r2,#4999
 2762 0072 9342     	 cmp r3,r2
 2763 0074 00F29F80 	 bhi .L100
 823:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 824:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set center aligned mode shift > 50%%");
 825:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 826:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         else
 827:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 828:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           period = period >> 1U;/*divide by 2*/
 2764              	 .loc 2 828 0
 2765 0078 FB69     	 ldr r3,[r7,#28]
 2766 007a 5B08     	 lsrs r3,r3,#1
 2767 007c FB61     	 str r3,[r7,#28]
 829:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 830:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if ((period != 0U) && (period <= PWM_CCU8_MAX_TIMER_COUNT))
 2768              	 .loc 2 830 0
 2769 007e FB69     	 ldr r3,[r7,#28]
 2770 0080 002B     	 cmp r3,#0
 2771 0082 00F09880 	 beq .L100
 2772              	 .loc 2 830 0 is_stmt 0 discriminator 1
 2773 0086 FB69     	 ldr r3,[r7,#28]
 2774 0088 B3F5803F 	 cmp r3,#65536
 2775 008c 80F09380 	 bcs .L100
 831:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 832:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((2U * period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2776              	 .loc 2 832 0 is_stmt 1
 2777 0090 FB69     	 ldr r3,[r7,#28]
 2778 0092 7A68     	 ldr r2,[r7,#4]
 2779 0094 02FB03F3 	 mul r3,r2,r3
 2780 0098 5B00     	 lsls r3,r3,#1
 2781 009a 4A4A     	 ldr r2,.L104
 2782 009c A2FB0323 	 umull r2,r3,r2,r3
 2783 00a0 5B0B     	 lsrs r3,r3,#13
 2784 00a2 BB61     	 str r3,[r7,#24]
 833:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 834:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                 ((2U * period * (PWM_CCU8_DUTY_FULL_SCALE - (shift + duty_cycle))) / PWM_CCU8_DUTY_
 2785              	 .loc 2 834 0
 2786 00a4 7A68     	 ldr r2,[r7,#4]
 2787 00a6 3B68     	 ldr r3,[r7]
 2788 00a8 1344     	 add r3,r3,r2
 2789 00aa C3F51C53 	 rsb r3,r3,#9984
 2790 00ae 1033     	 adds r3,r3,#16
 2791 00b0 FA69     	 ldr r2,[r7,#28]
 2792 00b2 02FB03F3 	 mul r3,r2,r3
 2793 00b6 5B00     	 lsls r3,r3,#1
 833:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 =
 2794              	 .loc 2 833 0
 2795 00b8 424A     	 ldr r2,.L104
 2796 00ba A2FB0323 	 umull r2,r3,r2,r3
 2797 00be 5B0B     	 lsrs r3,r3,#13
 2798 00c0 7B61     	 str r3,[r7,#20]
 835:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 836:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2799              	 .loc 2 836 0
 2800 00c2 FB68     	 ldr r3,[r7,#12]
 2801 00c4 9A68     	 ldr r2,[r3,#8]
 2802 00c6 FB69     	 ldr r3,[r7,#28]
 2803 00c8 9BB2     	 uxth r3,r3
 2804 00ca 013B     	 subs r3,r3,#1
 2805 00cc 9BB2     	 uxth r3,r3
 2806 00ce 1046     	 mov r0,r2
 2807 00d0 1946     	 mov r1,r3
 2808 00d2 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 837:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2809              	 .loc 2 837 0
 2810 00d6 FB68     	 ldr r3,[r7,#12]
 2811 00d8 9A68     	 ldr r2,[r3,#8]
 2812 00da BB69     	 ldr r3,[r7,#24]
 2813 00dc 9BB2     	 uxth r3,r3
 2814 00de 1046     	 mov r0,r2
 2815 00e0 0021     	 movs r1,#0
 2816 00e2 1A46     	 mov r2,r3
 2817 00e4 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 838:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 839:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2818              	 .loc 2 839 0
 2819 00e8 FB68     	 ldr r3,[r7,#12]
 2820 00ea 9A68     	 ldr r2,[r3,#8]
 2821 00ec 7B69     	 ldr r3,[r7,#20]
 2822 00ee 9BB2     	 uxth r3,r3
 2823 00f0 1046     	 mov r0,r2
 2824 00f2 0121     	 movs r1,#1
 2825 00f4 1A46     	 mov r2,r3
 2826 00f6 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 840:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 841:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2827              	 .loc 2 841 0
 2828 00fa FB68     	 ldr r3,[r7,#12]
 2829 00fc 5A68     	 ldr r2,[r3,#4]
 2830 00fe FB68     	 ldr r3,[r7,#12]
 2831 0100 1B69     	 ldr r3,[r3,#16]
 2832 0102 1046     	 mov r0,r2
 2833 0104 1946     	 mov r1,r3
 2834 0106 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 842:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 843:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2835              	 .loc 2 843 0
 2836 010a FB68     	 ldr r3,[r7,#12]
 2837 010c 3A68     	 ldr r2,[r7]
 2838 010e DA62     	 str r2,[r3,#44]
 844:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2839              	 .loc 2 844 0
 2840 0110 FB68     	 ldr r3,[r7,#12]
 2841 0112 7A68     	 ldr r2,[r7,#4]
 2842 0114 1A63     	 str r2,[r3,#48]
 845:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 846:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set center aligned
 847:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2843              	 .loc 2 847 0
 2844 0116 0023     	 movs r3,#0
 2845 0118 87F82730 	 strb r3,[r7,#39]
 2846 011c 4BE0     	 b .L100
 2847              	.L101:
 848:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 849:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 850:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 851:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       else
 852:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       {
 853:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         if (period <= PWM_CCU8_MAX_TIMER_COUNT)
 2848              	 .loc 2 853 0
 2849 011e FB69     	 ldr r3,[r7,#28]
 2850 0120 B3F5803F 	 cmp r3,#65536
 2851 0124 47D2     	 bcs .L100
 854:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         {
 855:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           if (((shift + duty_cycle) > PWM_CCU8_ASYM_EA_MAX))
 2852              	 .loc 2 855 0
 2853 0126 7A68     	 ldr r2,[r7,#4]
 2854 0128 3B68     	 ldr r3,[r7]
 2855 012a 1344     	 add r3,r3,r2
 2856 012c 42F21072 	 movw r2,#10000
 2857 0130 9342     	 cmp r3,r2
 2858 0132 40D8     	 bhi .L100
 856:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 857:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetDutyCycleAsymmetric:Cannot set edge aligned mode (shift + duty_c
 858:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 859:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           else
 860:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           {
 861:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch1 = ((period * shift) / PWM_CCU8_DUTY_FULL_SCALE);
 2859              	 .loc 2 861 0
 2860 0134 FB69     	 ldr r3,[r7,#28]
 2861 0136 7A68     	 ldr r2,[r7,#4]
 2862 0138 02FB03F3 	 mul r3,r2,r3
 2863 013c 214A     	 ldr r2,.L104
 2864 013e A2FB0323 	 umull r2,r3,r2,r3
 2865 0142 5B0B     	 lsrs r3,r3,#13
 2866 0144 BB61     	 str r3,[r7,#24]
 862:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             compare_ch2 = ((period * (shift + duty_cycle)) / PWM_CCU8_DUTY_FULL_SCALE);
 2867              	 .loc 2 862 0
 2868 0146 7A68     	 ldr r2,[r7,#4]
 2869 0148 3B68     	 ldr r3,[r7]
 2870 014a 1344     	 add r3,r3,r2
 2871 014c FA69     	 ldr r2,[r7,#28]
 2872 014e 02FB03F3 	 mul r3,r2,r3
 2873 0152 1C4A     	 ldr r2,.L104
 2874 0154 A2FB0323 	 umull r2,r3,r2,r3
 2875 0158 5B0B     	 lsrs r3,r3,#13
 2876 015a 7B61     	 str r3,[r7,#20]
 863:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 864:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerPeriodMatch(handle_ptr->ccu8_slice_ptr, (uint16_t)(period - 1U))
 2877              	 .loc 2 864 0
 2878 015c FB68     	 ldr r3,[r7,#12]
 2879 015e 9A68     	 ldr r2,[r3,#8]
 2880 0160 FB69     	 ldr r3,[r7,#28]
 2881 0162 9BB2     	 uxth r3,r3
 2882 0164 013B     	 subs r3,r3,#1
 2883 0166 9BB2     	 uxth r3,r3
 2884 0168 1046     	 mov r0,r2
 2885 016a 1946     	 mov r1,r3
 2886 016c FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerPeriodMatch
 865:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2887              	 .loc 2 865 0
 2888 0170 FB68     	 ldr r3,[r7,#12]
 2889 0172 9A68     	 ldr r2,[r3,#8]
 2890 0174 BB69     	 ldr r3,[r7,#24]
 2891 0176 9BB2     	 uxth r3,r3
 2892 0178 1046     	 mov r0,r2
 2893 017a 0021     	 movs r1,#0
 2894 017c 1A46     	 mov r2,r3
 2895 017e FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 866:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch1);
 867:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_SLICE_SetTimerCompareMatch(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_COMPARE_
 2896              	 .loc 2 867 0
 2897 0182 FB68     	 ldr r3,[r7,#12]
 2898 0184 9A68     	 ldr r2,[r3,#8]
 2899 0186 7B69     	 ldr r3,[r7,#20]
 2900 0188 9BB2     	 uxth r3,r3
 2901 018a 1046     	 mov r0,r2
 2902 018c 0121     	 movs r1,#1
 2903 018e 1A46     	 mov r2,r3
 2904 0190 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetTimerCompareMatch
 868:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                                                 (uint16_t) compare_ch2);
 869:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->shadow_txfr_msk)
 2905              	 .loc 2 869 0
 2906 0194 FB68     	 ldr r3,[r7,#12]
 2907 0196 5A68     	 ldr r2,[r3,#4]
 2908 0198 FB68     	 ldr r3,[r7,#12]
 2909 019a 1B69     	 ldr r3,[r3,#16]
 2910 019c 1046     	 mov r0,r2
 2911 019e 1946     	 mov r1,r3
 2912 01a0 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 870:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 871:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_duty = duty_cycle;
 2913              	 .loc 2 871 0
 2914 01a4 FB68     	 ldr r3,[r7,#12]
 2915 01a6 3A68     	 ldr r2,[r7]
 2916 01a8 DA62     	 str r2,[r3,#44]
 872:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             handle_ptr->asym_shift = shift;
 2917              	 .loc 2 872 0
 2918 01aa FB68     	 ldr r3,[r7,#12]
 2919 01ac 7A68     	 ldr r2,[r7,#4]
 2920 01ae 1A63     	 str r2,[r3,#48]
 873:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 874:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             XMC_DEBUG("PWM_CCU8_SetFreqAndDutyCycleAsymmetric:frequency and duty set edge aligned m
 875:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****             status = PWM_CCU8_STATUS_SUCCESS;
 2921              	 .loc 2 875 0
 2922 01b0 0023     	 movs r3,#0
 2923 01b2 87F82730 	 strb r3,[r7,#39]
 2924              	.L100:
 876:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****           }
 877:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 878:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****         }
 879:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****       }
 880:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****     }
 881:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   }
 882:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 2925              	 .loc 2 882 0
 2926 01b6 97F82730 	 ldrb r3,[r7,#39]
 883:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetFreqAndDutyCycleAsymmetric() api */
 2927              	 .loc 2 883 0
 2928 01ba 1846     	 mov r0,r3
 2929 01bc 2837     	 adds r7,r7,#40
 2930              	.LCFI146:
 2931              	 .cfi_def_cfa_offset 8
 2932 01be BD46     	 mov sp,r7
 2933              	.LCFI147:
 2934              	 .cfi_def_cfa_register 13
 2935              	 
 2936 01c0 80BD     	 pop {r7,pc}
 2937              	.L105:
 2938 01c2 00BF     	 .align 2
 2939              	.L104:
 2940 01c4 5917B7D1 	 .word -776530087
 2941              	 .cfi_endproc
 2942              	.LFE255:
 2944              	 .section .text.PWM_CCU8_SetDither,"ax",%progbits
 2945              	 .align 2
 2946              	 .global PWM_CCU8_SetDither
 2947              	 .thumb
 2948              	 .thumb_func
 2950              	PWM_CCU8_SetDither:
 2951              	.LFB256:
 884:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 885:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /**************************************************************************************************
 886:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 887:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dither value, enables the dither. */
 888:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDither(PWM_CCU8_t* handle_ptr, bool dither_period, bool dither_comp, uint8_t dithe
 889:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 2952              	 .loc 2 889 0
 2953              	 .cfi_startproc
 2954              	 
 2955              	 
 2956 0000 80B5     	 push {r7,lr}
 2957              	.LCFI148:
 2958              	 .cfi_def_cfa_offset 8
 2959              	 .cfi_offset 7,-8
 2960              	 .cfi_offset 14,-4
 2961 0002 82B0     	 sub sp,sp,#8
 2962              	.LCFI149:
 2963              	 .cfi_def_cfa_offset 16
 2964 0004 00AF     	 add r7,sp,#0
 2965              	.LCFI150:
 2966              	 .cfi_def_cfa_register 7
 2967 0006 7860     	 str r0,[r7,#4]
 2968 0008 0846     	 mov r0,r1
 2969 000a 1146     	 mov r1,r2
 2970 000c 1A46     	 mov r2,r3
 2971 000e 0346     	 mov r3,r0
 2972 0010 FB70     	 strb r3,[r7,#3]
 2973 0012 0B46     	 mov r3,r1
 2974 0014 BB70     	 strb r3,[r7,#2]
 2975 0016 1346     	 mov r3,r2
 2976 0018 7B70     	 strb r3,[r7,#1]
 890:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 891:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDither:handle_ptr NULL", (handle_ptr != NULL));
 892:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_EnableDithering(handle_ptr->ccu8_slice_ptr, dither_period, dither_comp, dither_val
 2977              	 .loc 2 892 0
 2978 001a 7B68     	 ldr r3,[r7,#4]
 2979 001c 9868     	 ldr r0,[r3,#8]
 2980 001e F978     	 ldrb r1,[r7,#3]
 2981 0020 BA78     	 ldrb r2,[r7,#2]
 2982 0022 7B78     	 ldrb r3,[r7,#1]
 2983 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_EnableDithering
 893:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_EnableShadowTransfer(handle_ptr->ccu8_module_ptr, handle_ptr->dither_shadow_txfr_msk);
 2984              	 .loc 2 893 0
 2985 0028 7B68     	 ldr r3,[r7,#4]
 2986 002a 5A68     	 ldr r2,[r3,#4]
 2987 002c 7B68     	 ldr r3,[r7,#4]
 2988 002e 5B69     	 ldr r3,[r3,#20]
 2989 0030 1046     	 mov r0,r2
 2990 0032 1946     	 mov r1,r3
 2991 0034 FFF7FEFF 	 bl XMC_CCU8_EnableShadowTransfer
 894:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDither:dither compare value set");
 895:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 896:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDither() api */
 2992              	 .loc 2 896 0
 2993 0038 0837     	 adds r7,r7,#8
 2994              	.LCFI151:
 2995              	 .cfi_def_cfa_offset 8
 2996 003a BD46     	 mov sp,r7
 2997              	.LCFI152:
 2998              	 .cfi_def_cfa_register 13
 2999              	 
 3000 003c 80BD     	 pop {r7,pc}
 3001              	 .cfi_endproc
 3002              	.LFE256:
 3004 003e 00BF     	 .section .text.PWM_CCU8_ClearTrap,"ax",%progbits
 3005              	 .align 2
 3006              	 .global PWM_CCU8_ClearTrap
 3007              	 .thumb
 3008              	 .thumb_func
 3010              	PWM_CCU8_ClearTrap:
 3011              	.LFB257:
 897:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 898:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*exits trap condition if trap signal is inactive */
 899:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearTrap(PWM_CCU8_t* handle_ptr)
 900:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3012              	 .loc 2 900 0
 3013              	 .cfi_startproc
 3014              	 
 3015              	 
 3016 0000 80B5     	 push {r7,lr}
 3017              	.LCFI153:
 3018              	 .cfi_def_cfa_offset 8
 3019              	 .cfi_offset 7,-8
 3020              	 .cfi_offset 14,-4
 3021 0002 82B0     	 sub sp,sp,#8
 3022              	.LCFI154:
 3023              	 .cfi_def_cfa_offset 16
 3024 0004 00AF     	 add r7,sp,#0
 3025              	.LCFI155:
 3026              	 .cfi_def_cfa_register 7
 3027 0006 7860     	 str r0,[r7,#4]
 901:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 902:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearTrap:handle_ptr NULL", (handle_ptr != NULL));
 903:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, XMC_CCU8_SLICE_IRQ_ID_EVENT2);
 3028              	 .loc 2 903 0
 3029 0008 7B68     	 ldr r3,[r7,#4]
 3030 000a 9B68     	 ldr r3,[r3,#8]
 3031 000c 1846     	 mov r0,r3
 3032 000e 0A21     	 movs r1,#10
 3033 0010 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 904:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearTrap:trap event cleared");
 905:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 906:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_ClearTrap() api */
 3034              	 .loc 2 906 0
 3035 0014 0837     	 adds r7,r7,#8
 3036              	.LCFI156:
 3037              	 .cfi_def_cfa_offset 8
 3038 0016 BD46     	 mov sp,r7
 3039              	.LCFI157:
 3040              	 .cfi_def_cfa_register 13
 3041              	 
 3042 0018 80BD     	 pop {r7,pc}
 3043              	 .cfi_endproc
 3044              	.LFE257:
 3046 001a 00BF     	 .section .text.PWM_CCU8_SetDeadTime,"ax",%progbits
 3047              	 .align 2
 3048              	 .global PWM_CCU8_SetDeadTime
 3049              	 .thumb
 3050              	 .thumb_func
 3052              	PWM_CCU8_SetDeadTime:
 3053              	.LFB258:
 907:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 908:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Sets the dead time*/
 909:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_SetDeadTime(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_COMPARE_CHANNEL_t channel, uint8_t
 910:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****                           uint8_t fall_value)
 911:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3054              	 .loc 2 911 0
 3055              	 .cfi_startproc
 3056              	 
 3057              	 
 3058 0000 80B5     	 push {r7,lr}
 3059              	.LCFI158:
 3060              	 .cfi_def_cfa_offset 8
 3061              	 .cfi_offset 7,-8
 3062              	 .cfi_offset 14,-4
 3063 0002 82B0     	 sub sp,sp,#8
 3064              	.LCFI159:
 3065              	 .cfi_def_cfa_offset 16
 3066 0004 00AF     	 add r7,sp,#0
 3067              	.LCFI160:
 3068              	 .cfi_def_cfa_register 7
 3069 0006 7860     	 str r0,[r7,#4]
 3070 0008 0846     	 mov r0,r1
 3071 000a 1146     	 mov r1,r2
 3072 000c 1A46     	 mov r2,r3
 3073 000e 0346     	 mov r3,r0
 3074 0010 FB70     	 strb r3,[r7,#3]
 3075 0012 0B46     	 mov r3,r1
 3076 0014 BB70     	 strb r3,[r7,#2]
 3077 0016 1346     	 mov r3,r2
 3078 0018 7B70     	 strb r3,[r7,#1]
 912:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_SetDeadTime:handle_ptr NULL", (handle_ptr != NULL));
 913:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_SetDeadTimeValue(handle_ptr->ccu8_slice_ptr, channel, rise_value, fall_value);
 3079              	 .loc 2 913 0
 3080 001a 7B68     	 ldr r3,[r7,#4]
 3081 001c 9868     	 ldr r0,[r3,#8]
 3082 001e F978     	 ldrb r1,[r7,#3]
 3083 0020 BA78     	 ldrb r2,[r7,#2]
 3084 0022 7B78     	 ldrb r3,[r7,#1]
 3085 0024 FFF7FEFF 	 bl XMC_CCU8_SLICE_SetDeadTimeValue
 914:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_SetDeadTime:dead time set");
 915:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** }/* end of PWM_CCU8_SetDeadTime() api */
 3086              	 .loc 2 915 0
 3087 0028 0837     	 adds r7,r7,#8
 3088              	.LCFI161:
 3089              	 .cfi_def_cfa_offset 8
 3090 002a BD46     	 mov sp,r7
 3091              	.LCFI162:
 3092              	 .cfi_def_cfa_register 13
 3093              	 
 3094 002c 80BD     	 pop {r7,pc}
 3095              	 .cfi_endproc
 3096              	.LFE258:
 3098 002e 00BF     	 .section .text.PWM_CCU8_GetInterruptStatus,"ax",%progbits
 3099              	 .align 2
 3100              	 .global PWM_CCU8_GetInterruptStatus
 3101              	 .thumb
 3102              	 .thumb_func
 3104              	PWM_CCU8_GetInterruptStatus:
 3105              	.LFB259:
 916:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 917:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Gets the interrupt status of  CCU8_CC8 slice. */
 918:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** bool PWM_CCU8_GetInterruptStatus(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 919:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3106              	 .loc 2 919 0
 3107              	 .cfi_startproc
 3108              	 
 3109              	 
 3110 0000 80B5     	 push {r7,lr}
 3111              	.LCFI163:
 3112              	 .cfi_def_cfa_offset 8
 3113              	 .cfi_offset 7,-8
 3114              	 .cfi_offset 14,-4
 3115 0002 84B0     	 sub sp,sp,#16
 3116              	.LCFI164:
 3117              	 .cfi_def_cfa_offset 24
 3118 0004 00AF     	 add r7,sp,#0
 3119              	.LCFI165:
 3120              	 .cfi_def_cfa_register 7
 3121 0006 7860     	 str r0,[r7,#4]
 3122 0008 0B46     	 mov r3,r1
 3123 000a FB70     	 strb r3,[r7,#3]
 920:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   bool status = (bool) false;
 3124              	 .loc 2 920 0
 3125 000c 0023     	 movs r3,#0
 3126 000e FB73     	 strb r3,[r7,#15]
 921:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_GetInterruptStatus:handle_ptr NULL", (handle_ptr != NULL));
 922:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   status = XMC_CCU8_SLICE_GetEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3127              	 .loc 2 922 0
 3128 0010 7B68     	 ldr r3,[r7,#4]
 3129 0012 9A68     	 ldr r2,[r3,#8]
 3130 0014 FB78     	 ldrb r3,[r7,#3]
 3131 0016 1046     	 mov r0,r2
 3132 0018 1946     	 mov r1,r3
 3133 001a FFF7FEFF 	 bl XMC_CCU8_SLICE_GetEvent
 3134 001e 0346     	 mov r3,r0
 3135 0020 FB73     	 strb r3,[r7,#15]
 923:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   return (status);
 3136              	 .loc 2 923 0
 3137 0022 FB7B     	 ldrb r3,[r7,#15]
 924:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_GetInterruptStatus() api */
 3138              	 .loc 2 924 0
 3139 0024 1846     	 mov r0,r3
 3140 0026 1037     	 adds r7,r7,#16
 3141              	.LCFI166:
 3142              	 .cfi_def_cfa_offset 8
 3143 0028 BD46     	 mov sp,r7
 3144              	.LCFI167:
 3145              	 .cfi_def_cfa_register 13
 3146              	 
 3147 002a 80BD     	 pop {r7,pc}
 3148              	 .cfi_endproc
 3149              	.LFE259:
 3151              	 .section .text.PWM_CCU8_ClearEvent,"ax",%progbits
 3152              	 .align 2
 3153              	 .global PWM_CCU8_ClearEvent
 3154              	 .thumb
 3155              	 .thumb_func
 3157              	PWM_CCU8_ClearEvent:
 3158              	.LFB260:
 925:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** 
 926:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** /*Acknowledges the interrupt of  CCU8_CC8 slice. */
 927:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** void PWM_CCU8_ClearEvent(PWM_CCU8_t* handle_ptr, XMC_CCU8_SLICE_IRQ_ID_t pwm_interrupt)
 928:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** {
 3159              	 .loc 2 928 0
 3160              	 .cfi_startproc
 3161              	 
 3162              	 
 3163 0000 80B5     	 push {r7,lr}
 3164              	.LCFI168:
 3165              	 .cfi_def_cfa_offset 8
 3166              	 .cfi_offset 7,-8
 3167              	 .cfi_offset 14,-4
 3168 0002 82B0     	 sub sp,sp,#8
 3169              	.LCFI169:
 3170              	 .cfi_def_cfa_offset 16
 3171 0004 00AF     	 add r7,sp,#0
 3172              	.LCFI170:
 3173              	 .cfi_def_cfa_register 7
 3174 0006 7860     	 str r0,[r7,#4]
 3175 0008 0B46     	 mov r3,r1
 3176 000a FB70     	 strb r3,[r7,#3]
 929:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_ASSERT("PWM_CCU8_ClearEvent:handle_ptr NULL", (handle_ptr != NULL));
 930:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_CCU8_SLICE_ClearEvent(handle_ptr->ccu8_slice_ptr, pwm_interrupt);
 3177              	 .loc 2 930 0
 3178 000c 7B68     	 ldr r3,[r7,#4]
 3179 000e 9A68     	 ldr r2,[r3,#8]
 3180 0010 FB78     	 ldrb r3,[r7,#3]
 3181 0012 1046     	 mov r0,r2
 3182 0014 1946     	 mov r1,r3
 3183 0016 FFF7FEFF 	 bl XMC_CCU8_SLICE_ClearEvent
 931:../Dave/Generated/PWM_CCU8/pwm_ccu8.c ****   XMC_DEBUG("PWM_CCU8_ClearEvent:Acknowledge Interrupt");
 932:../Dave/Generated/PWM_CCU8/pwm_ccu8.c **** } /* end of PWM_CCU8_ClearEvent() api */
 3184              	 .loc 2 932 0
 3185 001a 0837     	 adds r7,r7,#8
 3186              	.LCFI171:
 3187              	 .cfi_def_cfa_offset 8
 3188 001c BD46     	 mov sp,r7
 3189              	.LCFI172:
 3190              	 .cfi_def_cfa_register 13
 3191              	 
 3192 001e 80BD     	 pop {r7,pc}
 3193              	 .cfi_endproc
 3194              	.LFE260:
 3196              	 .text
 3197              	.Letext0:
 3198              	 .file 3 "d:\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3199              	 .file 4 "d:\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3200              	 .file 5 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3201              	 .file 6 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc/xmc_gpio.h"
 3202              	 .file 7 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc/xmc4_gpio.h"
 3203              	 .file 8 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/XMCLib/inc/xmc4_scu.h"
 3204              	 .file 9 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Dave/Generated/DAVE_Common.h"
 3205              	 .file 10 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Dave/Generated/GLOBAL_CCU8/global_ccu8.h"
 3206              	 .file 11 "../Dave/Generated/PWM_CCU8/pwm_ccu8.h"
 3207              	 .file 12 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include/cmsis_gcc.h"
 3208              	 .file 13 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include/core_cm4.h"
 3209              	 .file 14 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 pwm_ccu8.c
    {standard input}:20     .text.XMC_CCU8_EnableClock:00000000 $t
    {standard input}:24     .text.XMC_CCU8_EnableClock:00000000 XMC_CCU8_EnableClock
    {standard input}:68     .text.XMC_CCU8_SLICE_EnableTrap:00000000 $t
    {standard input}:72     .text.XMC_CCU8_SLICE_EnableTrap:00000000 XMC_CCU8_SLICE_EnableTrap
    {standard input}:116    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 $t
    {standard input}:120    .text.XMC_CCU8_SLICE_IsTimerRunning:00000000 XMC_CCU8_SLICE_IsTimerRunning
    {standard input}:165    .text.XMC_CCU8_SLICE_StartTimer:00000000 $t
    {standard input}:169    .text.XMC_CCU8_SLICE_StartTimer:00000000 XMC_CCU8_SLICE_StartTimer
    {standard input}:208    .text.XMC_CCU8_SLICE_StopTimer:00000000 $t
    {standard input}:212    .text.XMC_CCU8_SLICE_StopTimer:00000000 XMC_CCU8_SLICE_StopTimer
    {standard input}:251    .text.XMC_CCU8_SLICE_ClearTimer:00000000 $t
    {standard input}:255    .text.XMC_CCU8_SLICE_ClearTimer:00000000 XMC_CCU8_SLICE_ClearTimer
    {standard input}:294    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 $t
    {standard input}:298    .text.XMC_CCU8_SLICE_GetTimerPeriodMatch:00000000 XMC_CCU8_SLICE_GetTimerPeriodMatch
    {standard input}:338    .text.XMC_CCU8_EnableShadowTransfer:00000000 $t
    {standard input}:342    .text.XMC_CCU8_EnableShadowTransfer:00000000 XMC_CCU8_EnableShadowTransfer
    {standard input}:382    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 $t
    {standard input}:386    .text.XMC_CCU8_SLICE_GetTimerValue:00000000 XMC_CCU8_SLICE_GetTimerValue
    {standard input}:426    .text.XMC_CCU8_SLICE_EnableEvent:00000000 $t
    {standard input}:430    .text.XMC_CCU8_SLICE_EnableEvent:00000000 XMC_CCU8_SLICE_EnableEvent
    {standard input}:476    .text.XMC_CCU8_SLICE_ClearEvent:00000000 $t
    {standard input}:480    .text.XMC_CCU8_SLICE_ClearEvent:00000000 XMC_CCU8_SLICE_ClearEvent
    {standard input}:523    .text.XMC_CCU8_SLICE_GetEvent:00000000 $t
    {standard input}:527    .text.XMC_CCU8_SLICE_GetEvent:00000000 XMC_CCU8_SLICE_GetEvent
    {standard input}:576    .text.PWM_CCU8_GetAppVersion:00000000 $t
    {standard input}:581    .text.PWM_CCU8_GetAppVersion:00000000 PWM_CCU8_GetAppVersion
    {standard input}:642    .text.PWM_CCU8_Init:00000000 $t
    {standard input}:647    .text.PWM_CCU8_Init:00000000 PWM_CCU8_Init
    {standard input}:1256   .text.PWM_CCU8_lConfigure_Events:00000000 PWM_CCU8_lConfigure_Events
    {standard input}:869    .text.PWM_CCU8_lInit_Interrupt:00000000 PWM_CCU8_lInit_Interrupt
    {standard input}:1129   .text.PWM_CCU8_lInit_GPIO:00000000 PWM_CCU8_lInit_GPIO
    {standard input}:1542   .text.PWM_CCU8_Start:00000000 PWM_CCU8_Start
    {standard input}:865    .text.PWM_CCU8_lInit_Interrupt:00000000 $t
    {standard input}:1125   .text.PWM_CCU8_lInit_GPIO:00000000 $t
    {standard input}:1252   .text.PWM_CCU8_lConfigure_Events:00000000 $t
    {standard input}:1537   .text.PWM_CCU8_Start:00000000 $t
    {standard input}:1618   .text.PWM_CCU8_Stop:00000000 $t
    {standard input}:1623   .text.PWM_CCU8_Stop:00000000 PWM_CCU8_Stop
    {standard input}:1683   .text.PWM_CCU8_GetTimerValue:00000000 $t
    {standard input}:1688   .text.PWM_CCU8_GetTimerValue:00000000 PWM_CCU8_GetTimerValue
    {standard input}:1729   .text.PWM_CCU8_GetTimerStatus:00000000 $t
    {standard input}:1734   .text.PWM_CCU8_GetTimerStatus:00000000 PWM_CCU8_GetTimerStatus
    {standard input}:1775   .text.PWM_CCU8_SetFreqSymmetric:00000000 $t
    {standard input}:1780   .text.PWM_CCU8_SetFreqSymmetric:00000000 PWM_CCU8_SetFreqSymmetric
    {standard input}:1944   .text.PWM_CCU8_SetFreqSymmetric:000000fc $d
    {standard input}:1949   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 $t
    {standard input}:1954   .text.PWM_CCU8_SetDutyCycleSymmetric:00000000 PWM_CCU8_SetDutyCycleSymmetric
    {standard input}:2058   .text.PWM_CCU8_SetDutyCycleSymmetric:00000094 $d
    {standard input}:2063   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 $t
    {standard input}:2068   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleSymmetric
    {standard input}:2228   .text.PWM_CCU8_SetFreqAndDutyCycleSymmetric:00000108 $d
    {standard input}:2233   .text.PWM_CCU8_SetFreqAsymmetric:00000000 $t
    {standard input}:2238   .text.PWM_CCU8_SetFreqAsymmetric:00000000 PWM_CCU8_SetFreqAsymmetric
    {standard input}:2462   .text.PWM_CCU8_SetFreqAsymmetric:00000188 $d
    {standard input}:2467   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 $t
    {standard input}:2472   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000000 PWM_CCU8_SetDutyCycleAsymmetric
    {standard input}:2681   .text.PWM_CCU8_SetDutyCycleAsymmetric:00000170 $d
    {standard input}:2686   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 $t
    {standard input}:2691   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:00000000 PWM_CCU8_SetFreqAndDutyCycleAsymmetric
    {standard input}:2940   .text.PWM_CCU8_SetFreqAndDutyCycleAsymmetric:000001c4 $d
    {standard input}:2945   .text.PWM_CCU8_SetDither:00000000 $t
    {standard input}:2950   .text.PWM_CCU8_SetDither:00000000 PWM_CCU8_SetDither
    {standard input}:3005   .text.PWM_CCU8_ClearTrap:00000000 $t
    {standard input}:3010   .text.PWM_CCU8_ClearTrap:00000000 PWM_CCU8_ClearTrap
    {standard input}:3047   .text.PWM_CCU8_SetDeadTime:00000000 $t
    {standard input}:3052   .text.PWM_CCU8_SetDeadTime:00000000 PWM_CCU8_SetDeadTime
    {standard input}:3099   .text.PWM_CCU8_GetInterruptStatus:00000000 $t
    {standard input}:3104   .text.PWM_CCU8_GetInterruptStatus:00000000 PWM_CCU8_GetInterruptStatus
    {standard input}:3152   .text.PWM_CCU8_ClearEvent:00000000 $t
    {standard input}:3157   .text.PWM_CCU8_ClearEvent:00000000 PWM_CCU8_ClearEvent
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GLOBAL_CCU8_Init
XMC_CCU8_SLICE_CompareInit
XMC_CCU8_SLICE_SetTimerPeriodMatch
XMC_CCU8_SLICE_SetTimerCompareMatch
XMC_CCU8_SetMultiChannelShadowTransferMode
XMC_CCU8_SLICE_DeadTimeInit
XMC_CCU8_SLICE_SetInterruptNode
XMC_GPIO_Init
XMC_CCU8_SLICE_ConfigureEvent
XMC_CCU8_SLICE_StartConfig
XMC_CCU8_SLICE_StopConfig
XMC_CCU8_SLICE_DirectionConfig
XMC_CCU8_SLICE_GateConfig
XMC_CCU8_SLICE_CountConfig
XMC_CCU8_SLICE_LoadConfig
XMC_CCU8_SLICE_LoadSelector
XMC_CCU8_SLICE_ModulationConfig
XMC_CCU8_SLICE_TrapConfig
XMC_CCU8_SLICE_ConfigureStatusBitOverrideEvent
XMC_CCU8_SLICE_StatusBitOverrideConfig
XMC_CCU8_SLICE_EnableDithering
XMC_CCU8_SLICE_SetDeadTimeValue
