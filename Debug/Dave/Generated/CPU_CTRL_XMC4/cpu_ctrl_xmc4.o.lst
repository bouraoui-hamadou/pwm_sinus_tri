   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "cpu_ctrl_xmc4.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.CPU_CTRL_XMC4_GetAppVersion,"ax",%progbits
  20              	 .align 2
  21              	 .global CPU_CTRL_XMC4_GetAppVersion
  22              	 .thumb
  23              	 .thumb_func
  25              	CPU_CTRL_XMC4_GetAppVersion:
  26              	.LFB133:
  27              	 .file 1 "../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c"
   1:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**
   2:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * @file cpu_ctrl_xmc4.c
   3:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * @date 2015-08-31
   4:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * NOTE:
   5:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   6:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  */
   7:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**
   8:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * @cond
   9:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  10:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * CPU_CTRL_XMC4 v4.0.18 - Sets the priority grouping for NVIC
  11:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  12:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * Copyright (c) 2015-2020, Infineon Technologies AG
  13:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * All rights reserved.
  14:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  15:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * following conditions are met:
  17:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  18:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   disclaimer.
  20:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  21:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  24:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  27:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  35:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  38:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  39:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * Change History
  40:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * --------------
  41:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  42:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * 2015-02-16:
  43:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *     - Initial version<br>
  44:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  45:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * 2015-08-31:
  46:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *     - Added hard fault handler
  47:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *     - Added CPU_CTRL_XMC4_MPU_Enable, CPU_CTRL_XMC4_MPU_Disable APIs
  48:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  49:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * 2016-11-29:
  50:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *     - Changed hard fault handler to avoid reading from the stack in case an stack overflow cause
  51:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  52:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * @endcond
  53:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  *
  54:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  */
  55:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**************************************************************************************************
  56:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * HEADER FILES
  57:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  58:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** #include "cpu_ctrl_xmc4.h"
  59:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**************************************************************************************************
  60:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * MACROS
  61:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  62:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  63:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**************************************************************************************************
  64:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * LOCAL DATA
  65:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  66:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  67:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**************************************************************************************************
  68:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * LOCAL ROUTINES
  69:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  **************************************************************************************************
  70:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  71:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /**************************************************************************************************
  72:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** * API IMPLEMENTATION
  73:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** ***************************************************************************************************
  74:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /*
  75:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * API to retrieve the version of the CPU_CTRL_XMC4 APP
  76:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  */
  77:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** DAVE_APP_VERSION_t CPU_CTRL_XMC4_GetAppVersion(void)
  78:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** {
  28              	 .loc 1 78 0
  29              	 .cfi_startproc
  30              	 
  31              	 
  32              	 
  33 0000 80B4     	 push {r7}
  34              	.LCFI0:
  35              	 .cfi_def_cfa_offset 4
  36              	 .cfi_offset 7,-4
  37 0002 83B0     	 sub sp,sp,#12
  38              	.LCFI1:
  39              	 .cfi_def_cfa_offset 16
  40 0004 00AF     	 add r7,sp,#0
  41              	.LCFI2:
  42              	 .cfi_def_cfa_register 7
  79:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   DAVE_APP_VERSION_t version;
  80:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  81:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   version.major = CPU_CTRL_XMC4_MAJOR_VERSION;
  43              	 .loc 1 81 0
  44 0006 0423     	 movs r3,#4
  45 0008 3B70     	 strb r3,[r7]
  82:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   version.minor = CPU_CTRL_XMC4_MINOR_VERSION;
  46              	 .loc 1 82 0
  47 000a 0023     	 movs r3,#0
  48 000c 7B70     	 strb r3,[r7,#1]
  83:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   version.patch = CPU_CTRL_XMC4_PATCH_VERSION;
  49              	 .loc 1 83 0
  50 000e 1223     	 movs r3,#18
  51 0010 BB70     	 strb r3,[r7,#2]
  84:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  85:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   return (version);
  52              	 .loc 1 85 0
  53 0012 3B1D     	 adds r3,r7,#4
  54 0014 3A46     	 mov r2,r7
  55 0016 1268     	 ldr r2,[r2]
  56 0018 1146     	 mov r1,r2
  57 001a 1980     	 strh r1,[r3]
  58 001c 0233     	 adds r3,r3,#2
  59 001e 120C     	 lsrs r2,r2,#16
  60 0020 1A70     	 strb r2,[r3]
  61 0022 0023     	 movs r3,#0
  62 0024 3A79     	 ldrb r2,[r7,#4]
  63 0026 62F30703 	 bfi r3,r2,#0,#8
  64 002a 7A79     	 ldrb r2,[r7,#5]
  65 002c 62F30F23 	 bfi r3,r2,#8,#8
  66 0030 BA79     	 ldrb r2,[r7,#6]
  67 0032 62F31743 	 bfi r3,r2,#16,#8
  86:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** }
  68              	 .loc 1 86 0
  69 0036 1846     	 mov r0,r3
  70 0038 0C37     	 adds r7,r7,#12
  71              	.LCFI3:
  72              	 .cfi_def_cfa_offset 4
  73 003a BD46     	 mov sp,r7
  74              	.LCFI4:
  75              	 .cfi_def_cfa_register 13
  76              	 
  77 003c 5DF8047B 	 ldr r7,[sp],#4
  78              	.LCFI5:
  79              	 .cfi_restore 7
  80              	 .cfi_def_cfa_offset 0
  81 0040 7047     	 bx lr
  82              	 .cfi_endproc
  83              	.LFE133:
  85 0042 00BF     	 .section .text.CPU_CTRL_XMC4_Init,"ax",%progbits
  86              	 .align 2
  87              	 .global CPU_CTRL_XMC4_Init
  88              	 .thumb
  89              	 .thumb_func
  91              	CPU_CTRL_XMC4_Init:
  92              	.LFB134:
  87:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /* Dummy Init API to maintain backward compatibility */
  88:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** CPU_CTRL_XMC4_STATUS_t CPU_CTRL_XMC4_Init(CPU_CTRL_XMC4_t *const handler)
  89:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** {
  93              	 .loc 1 89 0
  94              	 .cfi_startproc
  95              	 
  96              	 
  97              	 
  98 0000 80B4     	 push {r7}
  99              	.LCFI6:
 100              	 .cfi_def_cfa_offset 4
 101              	 .cfi_offset 7,-4
 102 0002 83B0     	 sub sp,sp,#12
 103              	.LCFI7:
 104              	 .cfi_def_cfa_offset 16
 105 0004 00AF     	 add r7,sp,#0
 106              	.LCFI8:
 107              	 .cfi_def_cfa_register 7
 108 0006 7860     	 str r0,[r7,#4]
  90:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   (void)handler;
  91:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   return CPU_CTRL_XMC4_STATUS_SUCCESS;
 109              	 .loc 1 91 0
 110 0008 0023     	 movs r3,#0
  92:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** }
 111              	 .loc 1 92 0
 112 000a 1846     	 mov r0,r3
 113 000c 0C37     	 adds r7,r7,#12
 114              	.LCFI9:
 115              	 .cfi_def_cfa_offset 4
 116 000e BD46     	 mov sp,r7
 117              	.LCFI10:
 118              	 .cfi_def_cfa_register 13
 119              	 
 120 0010 5DF8047B 	 ldr r7,[sp],#4
 121              	.LCFI11:
 122              	 .cfi_restore 7
 123              	 .cfi_def_cfa_offset 0
 124 0014 7047     	 bx lr
 125              	 .cfi_endproc
 126              	.LFE134:
 128 0016 00BF     	 .section .text.CPU_CTRL_XMC4_MPU_Enable,"ax",%progbits
 129              	 .align 2
 130              	 .global CPU_CTRL_XMC4_MPU_Enable
 131              	 .thumb
 132              	 .thumb_func
 134              	CPU_CTRL_XMC4_MPU_Enable:
 135              	.LFB135:
  93:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
  94:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /*
  95:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * API to enable the MPU
  96:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  */
  97:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** void CPU_CTRL_XMC4_MPU_Enable(uint32_t options)
  98:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** {
 136              	 .loc 1 98 0
 137              	 .cfi_startproc
 138              	 
 139              	 
 140              	 
 141 0000 80B4     	 push {r7}
 142              	.LCFI12:
 143              	 .cfi_def_cfa_offset 4
 144              	 .cfi_offset 7,-4
 145 0002 83B0     	 sub sp,sp,#12
 146              	.LCFI13:
 147              	 .cfi_def_cfa_offset 16
 148 0004 00AF     	 add r7,sp,#0
 149              	.LCFI14:
 150              	 .cfi_def_cfa_register 7
 151 0006 7860     	 str r0,[r7,#4]
  99:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   MPU->CTRL = MPU_CTRL_ENABLE_Msk | options;
 152              	 .loc 1 99 0
 153 0008 064A     	 ldr r2,.L6
 154 000a 7B68     	 ldr r3,[r7,#4]
 155 000c 43F00103 	 orr r3,r3,#1
 156 0010 5360     	 str r3,[r2,#4]
 157              	.LBB8:
 158              	.LBB9:
 159              	 .file 2 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include/cmsis_gcc.h"
   1:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**************************************************************************//**
   2:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @version  V5.3.0
   5:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * @date     26. March 2020
   6:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  ******************************************************************************/
   7:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /*
   8:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Copyright (c) 2009-2020 Arm Limited. All rights reserved.
   9:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  10:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  12:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  16:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  *
  18:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * limitations under the License.
  23:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
  24:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  25:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  28:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ignore some GCC warnings */
  29:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic push
  30:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  34:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __has_builtin
  36:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  38:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
  39:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ASM
  41:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ASM                                  __asm
  42:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  43:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __INLINE
  44:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __INLINE                               inline
  45:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  46:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  49:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif                                           
  52:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  55:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __USED
  56:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  58:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __WEAK
  59:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  61:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED
  62:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  64:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  67:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  70:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  78:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  86:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
  94:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 102:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 110:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __ALIGNED
 111:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 113:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __RESTRICT
 114:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 116:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 119:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 120:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 122:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 124:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 125:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            in the used linker script.
 129:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 130:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 131:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 133:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 135:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 136:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t const* src;
 137:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 138:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 139:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __copy_table_t;
 140:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 141:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   typedef struct {
 142:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t* dest;
 143:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     uint32_t  wlen;
 144:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   } __zero_table_t;
 145:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 146:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 151:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 155:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 156:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 157:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     }
 161:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   }
 162:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  
 163:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   _start();
 164:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 165:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 166:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 168:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 169:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 172:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 173:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 176:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 177:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 180:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 181:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 184:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 185:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 189:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 190:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 191:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 192:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 196:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 198:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 200:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 201:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 202:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 203:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 207:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 209:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 210:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 211:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 212:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 213:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 214:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register
 215:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the Control Register.
 216:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Control Register value
 217:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 218:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 219:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 220:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 221:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 222:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 223:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 224:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 225:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 226:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 227:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 228:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 229:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 230:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 231:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               non-secure Control Register value
 232:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 233:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 234:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 235:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 236:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 237:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 238:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 239:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 240:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 241:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 242:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 243:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 244:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register
 245:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 246:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 247:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 248:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 249:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 250:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 251:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 252:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 253:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 254:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 255:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 256:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 257:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 258:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 259:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 260:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 261:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 262:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 263:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 264:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 265:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 266:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 267:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 268:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get IPSR Register
 269:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 270:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               IPSR Register value
 271:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 272:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 273:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 274:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 275:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 276:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 277:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 278:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 279:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 280:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 281:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 282:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get APSR Register
 283:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 284:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               APSR Register value
 285:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 286:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 287:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 288:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 289:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 290:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 291:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 292:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 293:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 294:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 295:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 296:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get xPSR Register
 297:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 298:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               xPSR Register value
 299:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 300:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 301:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 302:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 303:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 304:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 305:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 306:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 307:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 308:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 309:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 310:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 311:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 312:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 313:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 314:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 315:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 316:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 317:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 318:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 319:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 320:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 321:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 322:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 323:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 324:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 325:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 326:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 327:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSP Register value
 328:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 329:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 330:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 331:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 332:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 333:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 334:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 335:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 336:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 337:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 338:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 339:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 340:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 341:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 342:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 343:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 344:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 345:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 346:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 347:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 348:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 349:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 350:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 352:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 353:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 354:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 355:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 356:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 357:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 358:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 359:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 360:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 361:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 362:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 363:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 364:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 365:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 366:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 367:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 368:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 369:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 370:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 371:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 372:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 373:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 374:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 375:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 376:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 377:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 378:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 379:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 380:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 381:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSP Register value
 382:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 383:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 384:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 385:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 386:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 387:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 388:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 389:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 390:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 391:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 392:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 393:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 394:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 395:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 396:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 397:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 398:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 399:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 400:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 401:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 402:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 403:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 404:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 405:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 406:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 407:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 408:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 409:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 410:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 411:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 412:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 413:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 414:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 415:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 416:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 417:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 418:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 419:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 420:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 421:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               SP Register value
 422:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 423:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 424:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 425:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 426:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 427:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 428:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 429:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 430:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 431:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 432:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 433:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 434:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 435:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 436:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 437:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 438:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 439:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 440:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 441:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 442:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 443:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 444:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 445:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask
 446:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 447:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 448:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 449:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 450:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 451:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 452:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 453:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 454:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 455:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 456:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 457:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 458:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 459:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 460:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 461:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 462:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Priority Mask value
 463:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 464:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 465:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 466:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 467:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 468:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) );
 469:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 470:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 471:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 472:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 473:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 474:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 475:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask
 476:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 477:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 478:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 479:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 480:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 481:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 482:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 483:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 484:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 485:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 486:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 487:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 488:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 489:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 490:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 491:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 492:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 493:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 494:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 495:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 496:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 497:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 498:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 499:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 500:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 501:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 502:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Enable FIQ
 503:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 504:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 505:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 506:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 507:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 508:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 509:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 510:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 511:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 512:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 513:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Disable FIQ
 514:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 515:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            Can only be executed in Privileged modes.
 516:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 517:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 518:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 519:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 520:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 521:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 522:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 523:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 524:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority
 525:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 526:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 527:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 528:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 529:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 530:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 531:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 532:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 533:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 534:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 535:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 536:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 537:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 538:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 539:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 540:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 541:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Base Priority register value
 542:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 543:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 544:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 545:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 546:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 547:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 548:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 549:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 550:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 551:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 552:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 553:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 554:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority
 555:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 556:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 557:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 558:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 559:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 560:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 561:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 562:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 563:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 564:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 565:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 566:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 567:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 568:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 569:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 570:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 571:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 572:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 573:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 574:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 575:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 576:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 577:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 578:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Base Priority with condition
 579:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 580:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 581:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 582:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 583:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 584:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 585:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 586:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 587:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 588:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 589:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 590:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask
 591:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 592:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 593:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 594:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 595:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 596:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 597:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 598:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 599:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 600:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 601:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 602:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 603:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 604:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 605:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 606:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 607:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Fault Mask register value
 608:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 609:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 610:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 611:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 612:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 613:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 614:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 615:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 616:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 617:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 618:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 619:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 620:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask
 621:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 622:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 623:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 624:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 625:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 626:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 627:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 628:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 629:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 630:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 631:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 632:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 633:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 634:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 635:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 636:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 637:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 638:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 639:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 640:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 641:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 642:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 643:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 644:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 645:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 646:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 647:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 648:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 649:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 650:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 651:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 652:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 654:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 655:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 656:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 657:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 658:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 659:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 660:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 661:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 662:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 663:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 664:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 665:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 666:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 667:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 668:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 669:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 670:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 671:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 672:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 673:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 674:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 675:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 676:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 677:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 678:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 679:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               PSPLIM Register value
 680:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 681:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 682:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 683:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 684:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 685:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 686:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 687:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 688:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 689:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 690:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 691:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 692:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 693:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 694:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 695:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 696:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 697:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 698:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 699:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 700:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   
 701:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 702:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 703:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 704:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 705:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 706:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 707:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 708:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 709:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 710:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 711:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 712:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 713:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 714:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 715:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 716:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 717:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 718:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 719:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 720:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 721:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 722:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 723:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 724:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 725:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 726:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 727:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 728:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 729:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 730:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 731:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 732:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 733:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 734:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 735:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 736:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 737:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 738:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 739:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 740:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 741:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 742:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 743:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 744:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 745:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 746:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 747:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 748:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 749:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 750:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 751:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 752:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 753:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 754:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 755:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 756:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 757:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 758:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 759:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 760:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 761:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 762:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 763:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 764:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 765:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 766:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 767:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               MSPLIM Register value
 768:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 769:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 770:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 771:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 772:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 773:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return 0U;
 774:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 775:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 776:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 777:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return result;
 778:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 779:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 780:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 781:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 782:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 783:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 784:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 785:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 786:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 787:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   mode.
 788:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 789:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 790:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 791:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 792:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 793:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 794:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 795:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 796:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 797:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 798:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 799:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 800:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 801:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 802:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 803:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 804:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 805:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 806:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 807:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 808:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 809:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 810:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 811:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 812:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 813:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 814:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 815:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 816:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 817:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)MainStackPtrLimit;
 818:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 819:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 820:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 821:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 822:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 823:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 824:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 825:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 826:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 827:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 828:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 829:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Get FPSCR
 830:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 831:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 832:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 833:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 834:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 835:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 836:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 837:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 838:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 839:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 840:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 841:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 842:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 843:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   uint32_t result;
 844:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 845:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 846:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(result);
 847:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 848:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 849:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   return(0U);
 850:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 851:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 852:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 853:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 854:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 855:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Set FPSCR
 856:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 857:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 858:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 859:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 860:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 861:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 862:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 863:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 864:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 865:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 866:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 867:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 868:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 869:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 870:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 871:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 872:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   (void)fpscr;
 873:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 874:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 875:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 876:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 877:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 878:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 879:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 880:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 881:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 882:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   Access to dedicated instructions
 883:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   @{
 884:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** */
 885:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 886:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 887:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 888:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 889:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 890:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 891:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 892:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 893:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #else
 894:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 895:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 896:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 897:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #endif
 898:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 899:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 900:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   No Operation
 901:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 902:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 903:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 904:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 905:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 906:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Interrupt
 907:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 908:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 909:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 910:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 911:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 912:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 913:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Wait For Event
 914:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 915:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 916:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 917:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 918:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 919:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 920:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 921:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Send Event
 922:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 923:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 924:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 925:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 926:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 927:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 928:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 929:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 930:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 931:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            after the instruction has been completed.
 932:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 933:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 934:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 935:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 936:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 937:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 938:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 939:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 940:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 941:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 942:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 943:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 944:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 945:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 946:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 160              	 .loc 2 946 0
 161              	
 162 0012 BFF34F8F 	 dsb 0xF
 163              	
 164              	 .thumb
 165              	.LBE9:
 166              	.LBE8:
 167              	.LBB10:
 168              	.LBB11:
 935:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 169              	 .loc 2 935 0
 170              	
 171 0016 BFF36F8F 	 isb 0xF
 172              	
 173              	 .thumb
 174              	.LBE11:
 175              	.LBE10:
 100:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   __DSB(); /* Ensure MPU settings take effect */
 101:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   __ISB(); /* Sequence instruction fetches using updated settings */
 102:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** }
 176              	 .loc 1 102 0
 177 001a 0C37     	 adds r7,r7,#12
 178              	.LCFI15:
 179              	 .cfi_def_cfa_offset 4
 180 001c BD46     	 mov sp,r7
 181              	.LCFI16:
 182              	 .cfi_def_cfa_register 13
 183              	 
 184 001e 5DF8047B 	 ldr r7,[sp],#4
 185              	.LCFI17:
 186              	 .cfi_restore 7
 187              	 .cfi_def_cfa_offset 0
 188 0022 7047     	 bx lr
 189              	.L7:
 190              	 .align 2
 191              	.L6:
 192 0024 90ED00E0 	 .word -536810096
 193              	 .cfi_endproc
 194              	.LFE135:
 196              	 .section .text.CPU_CTRL_XMC4_MPU_Disable,"ax",%progbits
 197              	 .align 2
 198              	 .global CPU_CTRL_XMC4_MPU_Disable
 199              	 .thumb
 200              	 .thumb_func
 202              	CPU_CTRL_XMC4_MPU_Disable:
 203              	.LFB136:
 103:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** 
 104:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** /*
 105:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  * API to disable the MPU
 106:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****  */
 107:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** void CPU_CTRL_XMC4_MPU_Disable(void)
 108:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** {
 204              	 .loc 1 108 0
 205              	 .cfi_startproc
 206              	 
 207              	 
 208              	 
 209 0000 80B4     	 push {r7}
 210              	.LCFI18:
 211              	 .cfi_def_cfa_offset 4
 212              	 .cfi_offset 7,-4
 213 0002 00AF     	 add r7,sp,#0
 214              	.LCFI19:
 215              	 .cfi_def_cfa_register 7
 216              	.LBB12:
 217              	.LBB13:
 947:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** }
 948:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 949:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** 
 950:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** /**
 951:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \brief   Data Memory Barrier
 952:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 953:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 954:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****  */
 955:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 956:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h **** {
 957:D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include\cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 218              	 .loc 2 957 0
 219              	
 220 0004 BFF35F8F 	 dmb 0xF
 221              	
 222              	 .thumb
 223              	.LBE13:
 224              	.LBE12:
 109:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   __DMB(); /* make sure all transfers are done */
 110:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c ****   MPU->CTRL = 0;
 225              	 .loc 1 110 0
 226 0008 034B     	 ldr r3,.L9
 227 000a 0022     	 movs r2,#0
 228 000c 5A60     	 str r2,[r3,#4]
 111:../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.c **** }
 229              	 .loc 1 111 0
 230 000e BD46     	 mov sp,r7
 231              	.LCFI20:
 232              	 .cfi_def_cfa_register 13
 233              	 
 234 0010 5DF8047B 	 ldr r7,[sp],#4
 235              	.LCFI21:
 236              	 .cfi_restore 7
 237              	 .cfi_def_cfa_offset 0
 238 0014 7047     	 bx lr
 239              	.L10:
 240 0016 00BF     	 .align 2
 241              	.L9:
 242 0018 90ED00E0 	 .word -536810096
 243              	 .cfi_endproc
 244              	.LFE136:
 246              	 .text
 247              	.Letext0:
 248              	 .file 3 "d:\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 249              	 .file 4 "d:\\4.5.0.202105191637\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 250              	 .file 5 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Libraries/CMSIS/Include/core_cm4.h"
 251              	 .file 6 "D:/4.5.0.202105191637/eclipse/workspace/PWM_display/Dave/Generated/DAVE_Common.h"
 252              	 .file 7 "../Dave/Generated/CPU_CTRL_XMC4/cpu_ctrl_xmc4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 cpu_ctrl_xmc4.c
    {standard input}:20     .text.CPU_CTRL_XMC4_GetAppVersion:00000000 $t
    {standard input}:25     .text.CPU_CTRL_XMC4_GetAppVersion:00000000 CPU_CTRL_XMC4_GetAppVersion
    {standard input}:86     .text.CPU_CTRL_XMC4_Init:00000000 $t
    {standard input}:91     .text.CPU_CTRL_XMC4_Init:00000000 CPU_CTRL_XMC4_Init
    {standard input}:129    .text.CPU_CTRL_XMC4_MPU_Enable:00000000 $t
    {standard input}:134    .text.CPU_CTRL_XMC4_MPU_Enable:00000000 CPU_CTRL_XMC4_MPU_Enable
    {standard input}:192    .text.CPU_CTRL_XMC4_MPU_Enable:00000024 $d
    {standard input}:197    .text.CPU_CTRL_XMC4_MPU_Disable:00000000 $t
    {standard input}:202    .text.CPU_CTRL_XMC4_MPU_Disable:00000000 CPU_CTRL_XMC4_MPU_Disable
    {standard input}:242    .text.CPU_CTRL_XMC4_MPU_Disable:00000018 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
